[
{
  "scope": {
    "type": "<class 'constructs.Construct'>",
    "optional": false
  },
  "id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "automount_service_account_token": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "containers": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ContainerProps, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "dns": {
    "type": "typing.Union[cdk8s_plus_25.PodDnsProps, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "docker_registry_auth": {
    "type": "typing.Optional[cdk8s_plus_25.ISecret]",
    "optional": true
  },
  "host_aliases": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.HostAlias, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "host_network": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "init_containers": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ContainerProps, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "isolate": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "restart_policy": {
    "type": "typing.Optional[cdk8s_plus_25.RestartPolicy]",
    "optional": true
  },
  "security_context": {
    "type": "typing.Union[cdk8s_plus_25.PodSecurityContextProps, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "service_account": {
    "type": "typing.Optional[ForwardRef('IServiceAccount')]",
    "optional": true
  },
  "volumes": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.Volume]]",
    "optional": true
  },
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ancestors": [
    "Resource",
    "Construct"
  ],
  "name": "AbstractPod"
},
{
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "automount_service_account_token": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "containers": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ContainerProps, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "dns": {
    "type": "typing.Union[cdk8s_plus_25.PodDnsProps, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "docker_registry_auth": {
    "type": "typing.Optional[cdk8s_plus_25.ISecret]",
    "optional": true
  },
  "host_aliases": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.HostAlias, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "host_network": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "init_containers": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ContainerProps, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "isolate": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "restart_policy": {
    "type": "typing.Optional[cdk8s_plus_25.RestartPolicy]",
    "optional": true
  },
  "security_context": {
    "type": "typing.Union[cdk8s_plus_25.PodSecurityContextProps, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "service_account": {
    "type": "typing.Optional[ForwardRef('IServiceAccount')]",
    "optional": true
  },
  "volumes": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.Volume]]",
    "optional": true
  },
  "ancestors": [
    "ResourceProps"
  ],
  "name": "AbstractPodProps"
},
{
  "name": "AddDeploymentOptions",
  "node_port": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "protocol": {
    "type": "typing.Optional[cdk8s_plus_25.Protocol]",
    "optional": true
  },
  "target_port": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "port": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "ancestors": [
    "ServiceBindOptions"
  ]
},
{
  "exclude": {
    "type": "typing.Optional[typing.Sequence[str]]",
    "optional": true
  },
  "key_prefix": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "ancestors": null,
  "name": "AddDirectoryOptions"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwargs": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": null,
  "name": "ApiResource"
},
{
  "api_group": {
    "type": "<class 'str'>",
    "optional": false
  },
  "resource_type": {
    "type": "<class 'str'>",
    "optional": false
  },
  "ancestors": null,
  "name": "ApiResourceOptions"
},
{
  "scope": {
    "type": "<class 'constructs.Construct'>",
    "optional": false
  },
  "id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "volume_id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "fs_type": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "partition": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "read_only": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "access_modes": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.PersistentVolumeAccessMode]]",
    "optional": true
  },
  "claim": {
    "type": "typing.Optional[cdk8s_plus_25.IPersistentVolumeClaim]",
    "optional": true
  },
  "mount_options": {
    "type": "typing.Optional[typing.Sequence[str]]",
    "optional": true
  },
  "reclaim_policy": {
    "type": "typing.Optional[cdk8s_plus_25.PersistentVolumeReclaimPolicy]",
    "optional": true
  },
  "storage": {
    "type": "typing.Optional[cdk8s.Size]",
    "optional": true
  },
  "storage_class_name": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "volume_mode": {
    "type": "typing.Optional[cdk8s_plus_25.PersistentVolumeMode]",
    "optional": true
  },
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ancestors": [
    "PersistentVolume",
    "Resource",
    "Construct"
  ],
  "name": "AwsElasticBlockStorePersistentVolume"
},
{
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "access_modes": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.PersistentVolumeAccessMode]]",
    "optional": true
  },
  "claim": {
    "type": "typing.Optional[cdk8s_plus_25.IPersistentVolumeClaim]",
    "optional": true
  },
  "mount_options": {
    "type": "typing.Optional[typing.Sequence[str]]",
    "optional": true
  },
  "reclaim_policy": {
    "type": "typing.Optional[cdk8s_plus_25.PersistentVolumeReclaimPolicy]",
    "optional": true
  },
  "storage": {
    "type": "typing.Optional[cdk8s.Size]",
    "optional": true
  },
  "storage_class_name": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "volume_mode": {
    "type": "typing.Optional[cdk8s_plus_25.PersistentVolumeMode]",
    "optional": true
  },
  "volume_id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "fs_type": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "partition": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "read_only": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "ancestors": [
    "PersistentVolumeProps",
    "ResourceProps"
  ],
  "name": "AwsElasticBlockStorePersistentVolumeProps"
},
{
  "fs_type": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "name": "AwsElasticBlockStoreVolumeOptions",
  "partition": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "read_only": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "ancestors": null
},
{
  "scope": {
    "type": "<class 'constructs.Construct'>",
    "optional": false
  },
  "id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "disk_name": {
    "type": "<class 'str'>",
    "optional": false
  },
  "disk_uri": {
    "type": "<class 'str'>",
    "optional": false
  },
  "caching_mode": {
    "type": "typing.Optional[cdk8s_plus_25.AzureDiskPersistentVolumeCachingMode]",
    "optional": true
  },
  "fs_type": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "kind": {
    "type": "typing.Optional[cdk8s_plus_25.AzureDiskPersistentVolumeKind]",
    "optional": true
  },
  "read_only": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "access_modes": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.PersistentVolumeAccessMode]]",
    "optional": true
  },
  "claim": {
    "type": "typing.Optional[cdk8s_plus_25.IPersistentVolumeClaim]",
    "optional": true
  },
  "mount_options": {
    "type": "typing.Optional[typing.Sequence[str]]",
    "optional": true
  },
  "reclaim_policy": {
    "type": "typing.Optional[cdk8s_plus_25.PersistentVolumeReclaimPolicy]",
    "optional": true
  },
  "storage": {
    "type": "typing.Optional[cdk8s.Size]",
    "optional": true
  },
  "storage_class_name": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "volume_mode": {
    "type": "typing.Optional[cdk8s_plus_25.PersistentVolumeMode]",
    "optional": true
  },
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ancestors": [
    "PersistentVolume",
    "Resource",
    "Construct"
  ],
  "name": "AzureDiskPersistentVolume"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwds": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "Enum"
  ],
  "name": "AzureDiskPersistentVolumeCachingMode"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwds": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "Enum"
  ],
  "name": "AzureDiskPersistentVolumeKind"
},
{
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "access_modes": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.PersistentVolumeAccessMode]]",
    "optional": true
  },
  "claim": {
    "type": "typing.Optional[cdk8s_plus_25.IPersistentVolumeClaim]",
    "optional": true
  },
  "mount_options": {
    "type": "typing.Optional[typing.Sequence[str]]",
    "optional": true
  },
  "reclaim_policy": {
    "type": "typing.Optional[cdk8s_plus_25.PersistentVolumeReclaimPolicy]",
    "optional": true
  },
  "storage": {
    "type": "typing.Optional[cdk8s.Size]",
    "optional": true
  },
  "storage_class_name": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "volume_mode": {
    "type": "typing.Optional[cdk8s_plus_25.PersistentVolumeMode]",
    "optional": true
  },
  "disk_name": {
    "type": "<class 'str'>",
    "optional": false
  },
  "disk_uri": {
    "type": "<class 'str'>",
    "optional": false
  },
  "caching_mode": {
    "type": "typing.Optional[cdk8s_plus_25.AzureDiskPersistentVolumeCachingMode]",
    "optional": true
  },
  "fs_type": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "kind": {
    "type": "typing.Optional[cdk8s_plus_25.AzureDiskPersistentVolumeKind]",
    "optional": true
  },
  "read_only": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "ancestors": [
    "PersistentVolumeProps",
    "ResourceProps"
  ],
  "name": "AzureDiskPersistentVolumeProps"
},
{
  "caching_mode": {
    "type": "typing.Optional[cdk8s_plus_25.AzureDiskPersistentVolumeCachingMode]",
    "optional": true
  },
  "fs_type": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "kind": {
    "type": "typing.Optional[cdk8s_plus_25.AzureDiskPersistentVolumeKind]",
    "optional": true
  },
  "name": "AzureDiskVolumeOptions",
  "read_only": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "ancestors": null
},
{
  "scope": {
    "type": "<class 'constructs.Construct'>",
    "optional": false
  },
  "id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "password": {
    "type": "<class 'str'>",
    "optional": false
  },
  "username": {
    "type": "<class 'str'>",
    "optional": false
  },
  "immutable": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ancestors": [
    "Secret",
    "Resource",
    "Construct"
  ],
  "name": "BasicAuthSecret"
},
{
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "immutable": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "password": {
    "type": "<class 'str'>",
    "optional": false
  },
  "username": {
    "type": "<class 'str'>",
    "optional": false
  },
  "ancestors": [
    "CommonSecretProps",
    "ResourceProps"
  ],
  "name": "BasicAuthSecretProps"
},
{
  "scope": {
    "type": "<class 'constructs.Construct'>",
    "optional": false
  },
  "id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "aggregation_labels": {
    "type": "typing.Optional[typing.Mapping[str, str]]",
    "optional": true
  },
  "rules": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ClusterRolePolicyRule, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ancestors": [
    "Resource",
    "Construct"
  ],
  "name": "ClusterRole"
},
{
  "scope": {
    "type": "<class 'constructs.Construct'>",
    "optional": false
  },
  "id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "role": {
    "type": "IClusterRole",
    "optional": false
  },
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ancestors": [
    "Resource",
    "Construct"
  ],
  "name": "ClusterRoleBinding"
},
{
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "role": {
    "type": "IClusterRole",
    "optional": false
  },
  "ancestors": [
    "ResourceProps"
  ],
  "name": "ClusterRoleBindingProps"
},
{
  "endpoints": {
    "type": "typing.Sequence[ForwardRef('IApiEndpoint')]",
    "optional": false
  },
  "verbs": {
    "type": "typing.Sequence[str]",
    "optional": false
  },
  "ancestors": null,
  "name": "ClusterRolePolicyRule"
},
{
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "aggregation_labels": {
    "type": "typing.Optional[typing.Mapping[str, str]]",
    "optional": true
  },
  "rules": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ClusterRolePolicyRule, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "ancestors": [
    "ResourceProps"
  ],
  "name": "ClusterRoleProps"
},
{
  "failure_threshold": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "initial_delay_seconds": {
    "type": "typing.Optional[cdk8s.Duration]",
    "optional": true
  },
  "period_seconds": {
    "type": "typing.Optional[cdk8s.Duration]",
    "optional": true
  },
  "success_threshold": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "timeout_seconds": {
    "type": "typing.Optional[cdk8s.Duration]",
    "optional": true
  },
  "ancestors": [
    "ProbeOptions"
  ],
  "name": "CommandProbeOptions"
},
{
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "immutable": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "ancestors": [
    "ResourceProps"
  ],
  "name": "CommonSecretProps"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwds": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "Enum"
  ],
  "name": "ConcurrencyPolicy"
},
{
  "scope": {
    "type": "<class 'constructs.Construct'>",
    "optional": false
  },
  "id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "binary_data": {
    "type": "typing.Optional[typing.Mapping[str, str]]",
    "optional": true
  },
  "data": {
    "type": "typing.Optional[typing.Mapping[str, str]]",
    "optional": true
  },
  "immutable": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ancestors": [
    "Resource",
    "Construct"
  ],
  "name": "ConfigMap"
},
{
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "binary_data": {
    "type": "typing.Optional[typing.Mapping[str, str]]",
    "optional": true
  },
  "data": {
    "type": "typing.Optional[typing.Mapping[str, str]]",
    "optional": true
  },
  "immutable": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "ancestors": [
    "ResourceProps"
  ],
  "name": "ConfigMapProps"
},
{
  "default_mode": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "items": {
    "type": "typing.Optional[typing.Mapping[str, typing.Union[ForwardRef('PathMapping'), typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "name": "ConfigMapVolumeOptions",
  "optional": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "ancestors": null
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwds": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "Enum"
  ],
  "name": "ConnectionScheme"
},
{
  "image": {
    "type": "<class 'str'>",
    "optional": false
  },
  "args": {
    "type": "typing.Optional[typing.Sequence[str]]",
    "optional": true
  },
  "command": {
    "type": "typing.Optional[typing.Sequence[str]]",
    "optional": true
  },
  "env_from": {
    "type": "typing.Optional[typing.Sequence[ForwardRef('EnvFrom')]]",
    "optional": true
  },
  "env_variables": {
    "type": "typing.Optional[typing.Mapping[str, ForwardRef('EnvValue')]]",
    "optional": true
  },
  "image_pull_policy": {
    "type": "typing.Optional[ForwardRef('ImagePullPolicy')]",
    "optional": true
  },
  "lifecycle": {
    "type": "typing.Union[ForwardRef('ContainerLifecycle'), typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "liveness": {
    "type": "typing.Optional[ForwardRef('Probe')]",
    "optional": true
  },
  "name": "Container",
  "port": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "port_number": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "ports": {
    "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('ContainerPort'), typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "readiness": {
    "type": "typing.Optional[ForwardRef('Probe')]",
    "optional": true
  },
  "resources": {
    "type": "typing.Union[ForwardRef('ContainerResources'), typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "security_context": {
    "type": "typing.Union[ForwardRef('ContainerSecurityContextProps'), typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "startup": {
    "type": "typing.Optional[ForwardRef('Probe')]",
    "optional": true
  },
  "volume_mounts": {
    "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('VolumeMount'), typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "working_dir": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "ancestors": null
},
{
  "post_start": {
    "type": "typing.Optional[ForwardRef('Handler')]",
    "optional": true
  },
  "pre_stop": {
    "type": "typing.Optional[ForwardRef('Handler')]",
    "optional": true
  },
  "ancestors": null,
  "name": "ContainerLifecycle"
},
{
  "args": {
    "type": "typing.Optional[typing.Sequence[str]]",
    "optional": true
  },
  "command": {
    "type": "typing.Optional[typing.Sequence[str]]",
    "optional": true
  },
  "env_from": {
    "type": "typing.Optional[typing.Sequence[ForwardRef('EnvFrom')]]",
    "optional": true
  },
  "env_variables": {
    "type": "typing.Optional[typing.Mapping[str, ForwardRef('EnvValue')]]",
    "optional": true
  },
  "image_pull_policy": {
    "type": "typing.Optional[ForwardRef('ImagePullPolicy')]",
    "optional": true
  },
  "lifecycle": {
    "type": "typing.Union[cdk8s_plus_25.ContainerLifecycle, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "liveness": {
    "type": "typing.Optional[ForwardRef('Probe')]",
    "optional": true
  },
  "name": "ContainerOpts",
  "port": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "port_number": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "ports": {
    "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('ContainerPort'), typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "readiness": {
    "type": "typing.Optional[ForwardRef('Probe')]",
    "optional": true
  },
  "resources": {
    "type": "typing.Union[ForwardRef('ContainerResources'), typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "security_context": {
    "type": "typing.Union[ForwardRef('ContainerSecurityContextProps'), typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "startup": {
    "type": "typing.Optional[ForwardRef('Probe')]",
    "optional": true
  },
  "volume_mounts": {
    "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('VolumeMount'), typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "working_dir": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "ancestors": null
},
{
  "number": {
    "type": "typing.Union[int, float]",
    "optional": false
  },
  "host_ip": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "host_port": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "name": "ContainerPort",
  "protocol": {
    "type": "typing.Optional[ForwardRef('Protocol')]",
    "optional": true
  },
  "ancestors": null
},
{
  "args": {
    "type": "typing.Optional[typing.Sequence[str]]",
    "optional": true
  },
  "command": {
    "type": "typing.Optional[typing.Sequence[str]]",
    "optional": true
  },
  "env_from": {
    "type": "typing.Optional[typing.Sequence[ForwardRef('EnvFrom')]]",
    "optional": true
  },
  "env_variables": {
    "type": "typing.Optional[typing.Mapping[str, ForwardRef('EnvValue')]]",
    "optional": true
  },
  "image_pull_policy": {
    "type": "typing.Optional[ForwardRef('ImagePullPolicy')]",
    "optional": true
  },
  "lifecycle": {
    "type": "typing.Union[cdk8s_plus_25.ContainerLifecycle, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "liveness": {
    "type": "typing.Optional[ForwardRef('Probe')]",
    "optional": true
  },
  "name": "ContainerProps",
  "port": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "port_number": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "ports": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ContainerPort, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "readiness": {
    "type": "typing.Optional[ForwardRef('Probe')]",
    "optional": true
  },
  "resources": {
    "type": "typing.Union[ForwardRef('ContainerResources'), typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "security_context": {
    "type": "typing.Union[ForwardRef('ContainerSecurityContextProps'), typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "startup": {
    "type": "typing.Optional[ForwardRef('Probe')]",
    "optional": true
  },
  "volume_mounts": {
    "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('VolumeMount'), typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "working_dir": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "image": {
    "type": "<class 'str'>",
    "optional": false
  },
  "ancestors": [
    "ContainerOpts"
  ]
},
{
  "cpu": {
    "type": "typing.Union[ForwardRef('CpuResources'), typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ephemeral_storage": {
    "type": "typing.Union[ForwardRef('EphemeralStorageResources'), typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "memory": {
    "type": "typing.Union[ForwardRef('MemoryResources'), typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ancestors": null,
  "name": "ContainerResources"
},
{
  "allow_privilege_escalation": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "ensure_non_root": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "group": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "privileged": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "read_only_root_filesystem": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "user": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "ancestors": null,
  "name": "ContainerSecurityContext"
},
{
  "allow_privilege_escalation": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "ensure_non_root": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "group": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "privileged": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "read_only_root_filesystem": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "user": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "ancestors": null,
  "name": "ContainerSecurityContextProps"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwargs": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": null,
  "name": "Cpu"
},
{
  "limit": {
    "type": "typing.Optional[cdk8s_plus_25.Cpu]",
    "optional": true
  },
  "request": {
    "type": "typing.Optional[cdk8s_plus_25.Cpu]",
    "optional": true
  },
  "ancestors": null,
  "name": "CpuResources"
},
{
  "scope": {
    "type": "<class 'constructs.Construct'>",
    "optional": false
  },
  "id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "schedule": {
    "type": "<class 'cdk8s.Cron'>",
    "optional": false
  },
  "concurrency_policy": {
    "type": "typing.Optional[cdk8s_plus_25.ConcurrencyPolicy]",
    "optional": true
  },
  "failed_jobs_retained": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "starting_deadline": {
    "type": "typing.Optional[cdk8s.Duration]",
    "optional": true
  },
  "successful_jobs_retained": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "suspend": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "time_zone": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "active_deadline": {
    "type": "typing.Optional[cdk8s.Duration]",
    "optional": true
  },
  "backoff_limit": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "ttl_after_finished": {
    "type": "typing.Optional[cdk8s.Duration]",
    "optional": true
  },
  "pod_metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "select": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "spread": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "automount_service_account_token": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "containers": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ContainerProps, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "dns": {
    "type": "typing.Union[cdk8s_plus_25.PodDnsProps, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "docker_registry_auth": {
    "type": "typing.Optional[cdk8s_plus_25.ISecret]",
    "optional": true
  },
  "host_aliases": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.HostAlias, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "host_network": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "init_containers": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ContainerProps, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "isolate": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "restart_policy": {
    "type": "typing.Optional[cdk8s_plus_25.RestartPolicy]",
    "optional": true
  },
  "security_context": {
    "type": "typing.Union[cdk8s_plus_25.PodSecurityContextProps, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "service_account": {
    "type": "typing.Optional[cdk8s_plus_25.IServiceAccount]",
    "optional": true
  },
  "volumes": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.Volume]]",
    "optional": true
  },
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ancestors": [
    "Workload",
    "AbstractPod",
    "Resource",
    "Construct"
  ],
  "name": "CronJob"
},
{
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "automount_service_account_token": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "containers": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ContainerProps, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "dns": {
    "type": "typing.Union[cdk8s_plus_25.PodDnsProps, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "docker_registry_auth": {
    "type": "typing.Optional[cdk8s_plus_25.ISecret]",
    "optional": true
  },
  "host_aliases": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.HostAlias, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "host_network": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "init_containers": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ContainerProps, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "isolate": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "restart_policy": {
    "type": "typing.Optional[cdk8s_plus_25.RestartPolicy]",
    "optional": true
  },
  "security_context": {
    "type": "typing.Union[cdk8s_plus_25.PodSecurityContextProps, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "service_account": {
    "type": "typing.Optional[cdk8s_plus_25.IServiceAccount]",
    "optional": true
  },
  "volumes": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.Volume]]",
    "optional": true
  },
  "pod_metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "select": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "spread": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "active_deadline": {
    "type": "typing.Optional[cdk8s.Duration]",
    "optional": true
  },
  "backoff_limit": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "ttl_after_finished": {
    "type": "typing.Optional[cdk8s.Duration]",
    "optional": true
  },
  "schedule": {
    "type": "<class 'cdk8s.Cron'>",
    "optional": false
  },
  "concurrency_policy": {
    "type": "typing.Optional[cdk8s_plus_25.ConcurrencyPolicy]",
    "optional": true
  },
  "failed_jobs_retained": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "starting_deadline": {
    "type": "typing.Optional[cdk8s.Duration]",
    "optional": true
  },
  "successful_jobs_retained": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "suspend": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "time_zone": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "ancestors": [
    "JobProps",
    "WorkloadProps",
    "AbstractPodProps",
    "ResourceProps"
  ],
  "name": "CronJobProps"
},
{
  "attributes": {
    "type": "typing.Optional[typing.Mapping[str, str]]",
    "optional": true
  },
  "fs_type": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "name": "CsiVolumeOptions",
  "read_only": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "ancestors": null
},
{
  "scope": {
    "type": "<class 'constructs.Construct'>",
    "optional": false
  },
  "id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "min_ready_seconds": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "pod_metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "select": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "spread": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "automount_service_account_token": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "containers": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ContainerProps, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "dns": {
    "type": "typing.Union[cdk8s_plus_25.PodDnsProps, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "docker_registry_auth": {
    "type": "typing.Optional[cdk8s_plus_25.ISecret]",
    "optional": true
  },
  "host_aliases": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.HostAlias, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "host_network": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "init_containers": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ContainerProps, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "isolate": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "restart_policy": {
    "type": "typing.Optional[cdk8s_plus_25.RestartPolicy]",
    "optional": true
  },
  "security_context": {
    "type": "typing.Union[cdk8s_plus_25.PodSecurityContextProps, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "service_account": {
    "type": "typing.Optional[cdk8s_plus_25.IServiceAccount]",
    "optional": true
  },
  "volumes": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.Volume]]",
    "optional": true
  },
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ancestors": [
    "Workload",
    "AbstractPod",
    "Resource",
    "Construct"
  ],
  "name": "DaemonSet"
},
{
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "automount_service_account_token": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "containers": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ContainerProps, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "dns": {
    "type": "typing.Union[cdk8s_plus_25.PodDnsProps, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "docker_registry_auth": {
    "type": "typing.Optional[cdk8s_plus_25.ISecret]",
    "optional": true
  },
  "host_aliases": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.HostAlias, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "host_network": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "init_containers": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ContainerProps, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "isolate": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "restart_policy": {
    "type": "typing.Optional[cdk8s_plus_25.RestartPolicy]",
    "optional": true
  },
  "security_context": {
    "type": "typing.Union[cdk8s_plus_25.PodSecurityContextProps, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "service_account": {
    "type": "typing.Optional[cdk8s_plus_25.IServiceAccount]",
    "optional": true
  },
  "volumes": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.Volume]]",
    "optional": true
  },
  "pod_metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "select": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "spread": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "min_ready_seconds": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "ancestors": [
    "WorkloadProps",
    "AbstractPodProps",
    "ResourceProps"
  ],
  "name": "DaemonSetProps"
},
{
  "scope": {
    "type": "<class 'constructs.Construct'>",
    "optional": false
  },
  "id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "min_ready": {
    "type": "typing.Optional[cdk8s.Duration]",
    "optional": true
  },
  "progress_deadline": {
    "type": "typing.Optional[cdk8s.Duration]",
    "optional": true
  },
  "replicas": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "strategy": {
    "type": "typing.Optional[cdk8s_plus_25.DeploymentStrategy]",
    "optional": true
  },
  "pod_metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "select": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "spread": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "automount_service_account_token": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "containers": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ContainerProps, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "dns": {
    "type": "typing.Union[cdk8s_plus_25.PodDnsProps, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "docker_registry_auth": {
    "type": "typing.Optional[cdk8s_plus_25.ISecret]",
    "optional": true
  },
  "host_aliases": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.HostAlias, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "host_network": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "init_containers": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ContainerProps, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "isolate": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "restart_policy": {
    "type": "typing.Optional[cdk8s_plus_25.RestartPolicy]",
    "optional": true
  },
  "security_context": {
    "type": "typing.Union[cdk8s_plus_25.PodSecurityContextProps, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "service_account": {
    "type": "typing.Optional[cdk8s_plus_25.IServiceAccount]",
    "optional": true
  },
  "volumes": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.Volume]]",
    "optional": true
  },
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ancestors": [
    "Workload",
    "AbstractPod",
    "Resource",
    "Construct"
  ],
  "name": "Deployment"
},
{
  "name": "DeploymentExposeViaServiceOptions",
  "ports": {
    "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('ServicePort'), typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "service_type": {
    "type": "typing.Optional[ForwardRef('ServiceType')]",
    "optional": true
  },
  "ancestors": null
},
{
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "automount_service_account_token": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "containers": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ContainerProps, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "dns": {
    "type": "typing.Union[cdk8s_plus_25.PodDnsProps, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "docker_registry_auth": {
    "type": "typing.Optional[cdk8s_plus_25.ISecret]",
    "optional": true
  },
  "host_aliases": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.HostAlias, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "host_network": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "init_containers": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ContainerProps, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "isolate": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "restart_policy": {
    "type": "typing.Optional[cdk8s_plus_25.RestartPolicy]",
    "optional": true
  },
  "security_context": {
    "type": "typing.Union[cdk8s_plus_25.PodSecurityContextProps, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "service_account": {
    "type": "typing.Optional[cdk8s_plus_25.IServiceAccount]",
    "optional": true
  },
  "volumes": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.Volume]]",
    "optional": true
  },
  "pod_metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "select": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "spread": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "min_ready": {
    "type": "typing.Optional[cdk8s.Duration]",
    "optional": true
  },
  "progress_deadline": {
    "type": "typing.Optional[cdk8s.Duration]",
    "optional": true
  },
  "replicas": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "strategy": {
    "type": "typing.Optional[cdk8s_plus_25.DeploymentStrategy]",
    "optional": true
  },
  "ancestors": [
    "WorkloadProps",
    "AbstractPodProps",
    "ResourceProps"
  ],
  "name": "DeploymentProps"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwargs": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": null,
  "name": "DeploymentStrategy"
},
{
  "max_surge": {
    "type": "typing.Optional[ForwardRef('PercentOrAbsolute')]",
    "optional": true
  },
  "max_unavailable": {
    "type": "typing.Optional[ForwardRef('PercentOrAbsolute')]",
    "optional": true
  },
  "ancestors": null,
  "name": "DeploymentStrategyRollingUpdateOptions"
},
{
  "name": "DnsOption",
  "value": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "ancestors": null
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwds": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "Enum"
  ],
  "name": "DnsPolicy"
},
{
  "scope": {
    "type": "<class 'constructs.Construct'>",
    "optional": false
  },
  "id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "data": {
    "type": "typing.Mapping[str, typing.Any]",
    "optional": false
  },
  "immutable": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ancestors": [
    "Secret",
    "Resource",
    "Construct"
  ],
  "name": "DockerConfigSecret"
},
{
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "immutable": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "data": {
    "type": "typing.Mapping[str, typing.Any]",
    "optional": false
  },
  "ancestors": [
    "CommonSecretProps",
    "ResourceProps"
  ],
  "name": "DockerConfigSecretProps"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwds": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "Enum"
  ],
  "name": "EmptyDirMedium"
},
{
  "medium": {
    "type": "typing.Optional[cdk8s_plus_25.EmptyDirMedium]",
    "optional": true
  },
  "size_limit": {
    "type": "typing.Optional[cdk8s.Size]",
    "optional": true
  },
  "ancestors": null,
  "name": "EmptyDirVolumeOptions"
},
{
  "sources": {
    "type": "typing.Sequence[ForwardRef('EnvFrom')]",
    "optional": false
  },
  "variables": {
    "type": "typing.Mapping[str, ForwardRef('EnvValue')]",
    "optional": false
  },
  "ancestors": null,
  "name": "Env"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwds": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "Enum"
  ],
  "name": "EnvFieldPaths"
},
{
  "config_map": {
    "type": "typing.Optional[ForwardRef('IConfigMap')]",
    "optional": true
  },
  "prefix": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "sec": {
    "type": "typing.Optional[ForwardRef('ISecret')]",
    "optional": true
  },
  "ancestors": null,
  "name": "EnvFrom"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwargs": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": null,
  "name": "EnvValue"
},
{
  "optional": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "ancestors": null,
  "name": "EnvValueFromConfigMapOptions"
},
{
  "api_version": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "key": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "ancestors": null,
  "name": "EnvValueFromFieldRefOptions"
},
{
  "required": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "ancestors": null,
  "name": "EnvValueFromProcessOptions"
},
{
  "container": {
    "type": "typing.Optional[cdk8s_plus_25.Container]",
    "optional": true
  },
  "divisor": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "ancestors": null,
  "name": "EnvValueFromResourceOptions"
},
{
  "optional": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "ancestors": null,
  "name": "EnvValueFromSecretOptions"
},
{
  "limit": {
    "type": "typing.Optional[cdk8s.Size]",
    "optional": true
  },
  "request": {
    "type": "typing.Optional[cdk8s.Size]",
    "optional": true
  },
  "ancestors": null,
  "name": "EphemeralStorageResources"
},
{
  "name": "ExposeDeploymentViaIngressOptions",
  "ports": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ServicePort, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "service_type": {
    "type": "typing.Optional[cdk8s_plus_25.ServiceType]",
    "optional": true
  },
  "ingress": {
    "type": "typing.Optional[ForwardRef('Ingress')]",
    "optional": true
  },
  "path_type": {
    "type": "typing.Optional[cdk8s_plus_25.HttpIngressPathType]",
    "optional": true
  },
  "ancestors": [
    "DeploymentExposeViaServiceOptions",
    "ExposeServiceViaIngressOptions"
  ]
},
{
  "ingress": {
    "type": "typing.Optional[ForwardRef('Ingress')]",
    "optional": true
  },
  "path_type": {
    "type": "typing.Optional[ForwardRef('HttpIngressPathType')]",
    "optional": true
  },
  "ancestors": null,
  "name": "ExposeServiceViaIngressOptions"
},
{
  "namespace_name": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "ancestors": null,
  "name": "FromServiceAccountNameOptions"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwds": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "Enum"
  ],
  "name": "FsGroupChangePolicy"
},
{
  "scope": {
    "type": "<class 'constructs.Construct'>",
    "optional": false
  },
  "id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "pd_name": {
    "type": "<class 'str'>",
    "optional": false
  },
  "fs_type": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "partition": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "read_only": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "access_modes": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.PersistentVolumeAccessMode]]",
    "optional": true
  },
  "claim": {
    "type": "typing.Optional[cdk8s_plus_25.IPersistentVolumeClaim]",
    "optional": true
  },
  "mount_options": {
    "type": "typing.Optional[typing.Sequence[str]]",
    "optional": true
  },
  "reclaim_policy": {
    "type": "typing.Optional[cdk8s_plus_25.PersistentVolumeReclaimPolicy]",
    "optional": true
  },
  "storage": {
    "type": "typing.Optional[cdk8s.Size]",
    "optional": true
  },
  "storage_class_name": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "volume_mode": {
    "type": "typing.Optional[cdk8s_plus_25.PersistentVolumeMode]",
    "optional": true
  },
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ancestors": [
    "PersistentVolume",
    "Resource",
    "Construct"
  ],
  "name": "GCEPersistentDiskPersistentVolume"
},
{
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "access_modes": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.PersistentVolumeAccessMode]]",
    "optional": true
  },
  "claim": {
    "type": "typing.Optional[cdk8s_plus_25.IPersistentVolumeClaim]",
    "optional": true
  },
  "mount_options": {
    "type": "typing.Optional[typing.Sequence[str]]",
    "optional": true
  },
  "reclaim_policy": {
    "type": "typing.Optional[cdk8s_plus_25.PersistentVolumeReclaimPolicy]",
    "optional": true
  },
  "storage": {
    "type": "typing.Optional[cdk8s.Size]",
    "optional": true
  },
  "storage_class_name": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "volume_mode": {
    "type": "typing.Optional[cdk8s_plus_25.PersistentVolumeMode]",
    "optional": true
  },
  "pd_name": {
    "type": "<class 'str'>",
    "optional": false
  },
  "fs_type": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "partition": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "read_only": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "ancestors": [
    "PersistentVolumeProps",
    "ResourceProps"
  ],
  "name": "GCEPersistentDiskPersistentVolumeProps"
},
{
  "fs_type": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "name": "GCEPersistentDiskVolumeOptions",
  "partition": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "read_only": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "ancestors": null
},
{
  "scope": {
    "type": "Construct",
    "optional": false
  },
  "id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "ancestors": [
    "Construct"
  ],
  "name": "Group"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwargs": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": null,
  "name": "Handler"
},
{
  "port": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "ancestors": null,
  "name": "HandlerFromHttpGetOptions"
},
{
  "host": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "port": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "ancestors": null,
  "name": "HandlerFromTcpSocketOptions"
},
{
  "scope": {
    "type": "<class 'constructs.Construct'>",
    "optional": false
  },
  "id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "max_replicas": {
    "type": "typing.Union[int, float]",
    "optional": false
  },
  "target": {
    "type": "<class 'cdk8s_plus_25.IScalable'>",
    "optional": false
  },
  "metrics": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.Metric]]",
    "optional": true
  },
  "min_replicas": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "scale_down": {
    "type": "typing.Union[cdk8s_plus_25.ScalingRules, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "scale_up": {
    "type": "typing.Union[cdk8s_plus_25.ScalingRules, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ancestors": [
    "Resource",
    "Construct"
  ],
  "name": "HorizontalPodAutoscaler"
},
{
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "max_replicas": {
    "type": "typing.Union[int, float]",
    "optional": false
  },
  "target": {
    "type": "<class 'cdk8s_plus_25.IScalable'>",
    "optional": false
  },
  "metrics": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.Metric]]",
    "optional": true
  },
  "min_replicas": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "scale_down": {
    "type": "typing.Union[cdk8s_plus_25.ScalingRules, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "scale_up": {
    "type": "typing.Union[cdk8s_plus_25.ScalingRules, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ancestors": [
    "ResourceProps"
  ],
  "name": "HorizontalPodAutoscalerProps"
},
{
  "hostnames": {
    "type": "typing.Sequence[str]",
    "optional": false
  },
  "ip": {
    "type": "<class 'str'>",
    "optional": false
  },
  "ancestors": null,
  "name": "HostAlias"
},
{
  "path": {
    "type": "<class 'str'>",
    "optional": false
  },
  "type": {
    "type": "typing.Optional[ForwardRef('HostPathVolumeType')]",
    "optional": true
  },
  "ancestors": null,
  "name": "HostPathVolumeOptions"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwds": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "Enum"
  ],
  "name": "HostPathVolumeType"
},
{
  "failure_threshold": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "initial_delay_seconds": {
    "type": "typing.Optional[cdk8s.Duration]",
    "optional": true
  },
  "period_seconds": {
    "type": "typing.Optional[cdk8s.Duration]",
    "optional": true
  },
  "success_threshold": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "timeout_seconds": {
    "type": "typing.Optional[cdk8s.Duration]",
    "optional": true
  },
  "port": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "scheme": {
    "type": "typing.Optional[cdk8s_plus_25.ConnectionScheme]",
    "optional": true
  },
  "ancestors": [
    "ProbeOptions"
  ],
  "name": "HttpGetProbeOptions"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwds": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "Enum"
  ],
  "name": "HttpIngressPathType"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwargs": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "Protocol",
    "Generic"
  ],
  "name": "IApiEndpoint"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwargs": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "Protocol",
    "Generic"
  ],
  "name": "IApiResource"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwargs": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "IResource",
    "IConstruct",
    "IDependable",
    "IApiResource",
    "Protocol",
    "Generic"
  ],
  "name": "IClusterRole"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwargs": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "IResource",
    "IConstruct",
    "IDependable",
    "IApiResource",
    "Protocol",
    "Generic"
  ],
  "name": "IConfigMap"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwargs": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "IConstruct",
    "IDependable",
    "Protocol",
    "Generic"
  ],
  "name": "INamespaceSelector"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwargs": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "IConstruct",
    "IDependable",
    "Protocol",
    "Generic"
  ],
  "name": "INetworkPolicyPeer"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwargs": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "IResource",
    "IConstruct",
    "IDependable",
    "IApiResource",
    "Protocol",
    "Generic"
  ],
  "name": "IPersistentVolume"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwargs": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "IResource",
    "IConstruct",
    "IDependable",
    "IApiResource",
    "Protocol",
    "Generic"
  ],
  "name": "IPersistentVolumeClaim"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwargs": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "IConstruct",
    "IDependable",
    "Protocol",
    "Generic"
  ],
  "name": "IPodSelector"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwargs": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "IConstruct",
    "IDependable",
    "IApiResource",
    "Protocol",
    "Generic"
  ],
  "name": "IResource"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwargs": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "IResource",
    "IConstruct",
    "IDependable",
    "IApiResource",
    "Protocol",
    "Generic"
  ],
  "name": "IRole"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwargs": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "Protocol",
    "Generic"
  ],
  "name": "IScalable"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwargs": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "IResource",
    "IConstruct",
    "IDependable",
    "IApiResource",
    "Protocol",
    "Generic"
  ],
  "name": "ISecret"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwargs": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "IResource",
    "ISubject",
    "IConstruct",
    "IDependable",
    "IApiResource",
    "Protocol",
    "Generic"
  ],
  "name": "IServiceAccount"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwargs": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "IConstruct",
    "IDependable",
    "Protocol",
    "Generic"
  ],
  "name": "IStorage"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwargs": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "IConstruct",
    "IDependable",
    "Protocol",
    "Generic"
  ],
  "name": "ISubject"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwds": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "Enum"
  ],
  "name": "ImagePullPolicy"
},
{
  "scope": {
    "type": "<class 'constructs.Construct'>",
    "optional": false
  },
  "id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "default_backend": {
    "type": "typing.Optional[cdk8s_plus_25.IngressBackend]",
    "optional": true
  },
  "rules": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.IngressRule, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "tls": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.IngressTls, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ancestors": [
    "Resource",
    "Construct"
  ],
  "name": "Ingress"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwargs": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": null,
  "name": "IngressBackend"
},
{
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "default_backend": {
    "type": "typing.Optional[cdk8s_plus_25.IngressBackend]",
    "optional": true
  },
  "rules": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.IngressRule, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "tls": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.IngressTls, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "ancestors": [
    "ResourceProps"
  ],
  "name": "IngressProps"
},
{
  "backend": {
    "type": "<class 'cdk8s_plus_25.IngressBackend'>",
    "optional": false
  },
  "host": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "path": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "path_type": {
    "type": "typing.Optional[cdk8s_plus_25.HttpIngressPathType]",
    "optional": true
  },
  "ancestors": null,
  "name": "IngressRule"
},
{
  "hosts": {
    "type": "typing.Optional[typing.Sequence[str]]",
    "optional": true
  },
  "secret": {
    "type": "typing.Optional[cdk8s_plus_25.ISecret]",
    "optional": true
  },
  "ancestors": null,
  "name": "IngressTls"
},
{
  "scope": {
    "type": "<class 'constructs.Construct'>",
    "optional": false
  },
  "id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "active_deadline": {
    "type": "typing.Optional[cdk8s.Duration]",
    "optional": true
  },
  "backoff_limit": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "ttl_after_finished": {
    "type": "typing.Optional[cdk8s.Duration]",
    "optional": true
  },
  "pod_metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "select": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "spread": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "automount_service_account_token": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "containers": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ContainerProps, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "dns": {
    "type": "typing.Union[cdk8s_plus_25.PodDnsProps, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "docker_registry_auth": {
    "type": "typing.Optional[cdk8s_plus_25.ISecret]",
    "optional": true
  },
  "host_aliases": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.HostAlias, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "host_network": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "init_containers": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ContainerProps, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "isolate": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "restart_policy": {
    "type": "typing.Optional[cdk8s_plus_25.RestartPolicy]",
    "optional": true
  },
  "security_context": {
    "type": "typing.Union[cdk8s_plus_25.PodSecurityContextProps, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "service_account": {
    "type": "typing.Optional[cdk8s_plus_25.IServiceAccount]",
    "optional": true
  },
  "volumes": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.Volume]]",
    "optional": true
  },
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ancestors": [
    "Workload",
    "AbstractPod",
    "Resource",
    "Construct"
  ],
  "name": "Job"
},
{
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "automount_service_account_token": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "containers": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ContainerProps, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "dns": {
    "type": "typing.Union[cdk8s_plus_25.PodDnsProps, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "docker_registry_auth": {
    "type": "typing.Optional[cdk8s_plus_25.ISecret]",
    "optional": true
  },
  "host_aliases": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.HostAlias, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "host_network": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "init_containers": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ContainerProps, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "isolate": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "restart_policy": {
    "type": "typing.Optional[cdk8s_plus_25.RestartPolicy]",
    "optional": true
  },
  "security_context": {
    "type": "typing.Union[cdk8s_plus_25.PodSecurityContextProps, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "service_account": {
    "type": "typing.Optional[cdk8s_plus_25.IServiceAccount]",
    "optional": true
  },
  "volumes": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.Volume]]",
    "optional": true
  },
  "pod_metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "select": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "spread": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "active_deadline": {
    "type": "typing.Optional[cdk8s.Duration]",
    "optional": true
  },
  "backoff_limit": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "ttl_after_finished": {
    "type": "typing.Optional[cdk8s.Duration]",
    "optional": true
  },
  "ancestors": [
    "WorkloadProps",
    "AbstractPodProps",
    "ResourceProps"
  ],
  "name": "JobProps"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwargs": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": null,
  "name": "LabelExpression"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwargs": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": null,
  "name": "LabelSelector"
},
{
  "expressions": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.LabelExpression]]",
    "optional": true
  },
  "labels": {
    "type": "typing.Optional[typing.Mapping[str, str]]",
    "optional": true
  },
  "ancestors": null,
  "name": "LabelSelectorOptions"
},
{
  "key": {
    "type": "<class 'str'>",
    "optional": false
  },
  "operator": {
    "type": "<class 'str'>",
    "optional": false
  },
  "values": {
    "type": "typing.Optional[typing.Sequence[str]]",
    "optional": true
  },
  "ancestors": null,
  "name": "LabelSelectorRequirement"
},
{
  "label_selector": {
    "type": "typing.Sequence[ForwardRef('NodeLabelQuery')]",
    "optional": false
  },
  "ancestors": null,
  "name": "LabeledNode"
},
{
  "limit": {
    "type": "typing.Optional[cdk8s.Size]",
    "optional": true
  },
  "request": {
    "type": "typing.Optional[cdk8s.Size]",
    "optional": true
  },
  "ancestors": null,
  "name": "MemoryResources"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwargs": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": null,
  "name": "Metric"
},
{
  "container": {
    "type": "<class 'cdk8s_plus_25.Container'>",
    "optional": false
  },
  "target": {
    "type": "MetricTarget",
    "optional": false
  },
  "ancestors": null,
  "name": "MetricContainerResourceOptions"
},
{
  "name": "MetricObjectOptions",
  "target": {
    "type": "<class 'cdk8s_plus_25.MetricTarget'>",
    "optional": false
  },
  "label_selector": {
    "type": "typing.Optional[cdk8s_plus_25.LabelSelector]",
    "optional": true
  },
  "object": {
    "type": "<class 'cdk8s_plus_25.IResource'>",
    "optional": false
  },
  "ancestors": [
    "MetricOptions"
  ]
},
{
  "name": "MetricOptions",
  "target": {
    "type": "MetricTarget",
    "optional": false
  },
  "label_selector": {
    "type": "typing.Optional[cdk8s_plus_25.LabelSelector]",
    "optional": true
  },
  "ancestors": null
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwargs": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": null,
  "name": "MetricTarget"
},
{
  "propagation": {
    "type": "typing.Optional[ForwardRef('MountPropagation')]",
    "optional": true
  },
  "read_only": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "sub_path": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "sub_path_expr": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "ancestors": null,
  "name": "MountOptions"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwds": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "Enum"
  ],
  "name": "MountPropagation"
},
{
  "name": "NamedNode",
  "ancestors": null
},
{
  "scope": {
    "type": "<class 'constructs.Construct'>",
    "optional": false
  },
  "id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ancestors": [
    "Resource",
    "Construct"
  ],
  "name": "Namespace"
},
{
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ancestors": [
    "ResourceProps"
  ],
  "name": "NamespaceProps"
},
{
  "label_selector": {
    "type": "typing.Optional[cdk8s_plus_25.LabelSelector]",
    "optional": true
  },
  "names": {
    "type": "typing.Optional[typing.Sequence[str]]",
    "optional": true
  },
  "ancestors": null,
  "name": "NamespaceSelectorConfig"
},
{
  "scope": {
    "type": "<class 'constructs.Construct'>",
    "optional": false
  },
  "id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "expressions": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.LabelExpression]]",
    "optional": true
  },
  "names": {
    "type": "typing.Optional[typing.Sequence[str]]",
    "optional": true
  },
  "labels": {
    "type": "typing.Optional[typing.Mapping[str, str]]",
    "optional": true
  },
  "ancestors": [
    "Construct"
  ],
  "name": "Namespaces"
},
{
  "expressions": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.LabelExpression]]",
    "optional": true
  },
  "labels": {
    "type": "typing.Optional[typing.Mapping[str, str]]",
    "optional": true
  },
  "names": {
    "type": "typing.Optional[typing.Sequence[str]]",
    "optional": true
  },
  "ancestors": null,
  "name": "NamespacesSelectOptions"
},
{
  "scope": {
    "type": "<class 'constructs.Construct'>",
    "optional": false
  },
  "id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "egress": {
    "type": "typing.Union[cdk8s_plus_25.NetworkPolicyTraffic, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ingress": {
    "type": "typing.Union[cdk8s_plus_25.NetworkPolicyTraffic, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "selector": {
    "type": "typing.Optional[cdk8s_plus_25.IPodSelector]",
    "optional": true
  },
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ancestors": [
    "Resource",
    "Construct"
  ],
  "name": "NetworkPolicy"
},
{
  "ports": {
    "type": "typing.Optional[typing.Sequence[ForwardRef('NetworkPolicyPort')]]",
    "optional": true
  },
  "ancestors": null,
  "name": "NetworkPolicyAddEgressRuleOptions"
},
{
  "scope": {
    "type": "Construct",
    "optional": false
  },
  "id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "ancestors": [
    "Construct"
  ],
  "name": "NetworkPolicyIpBlock"
},
{
  "ip_block": {
    "type": "typing.Optional[cdk8s_plus_25.NetworkPolicyIpBlock]",
    "optional": true
  },
  "pod_selector": {
    "type": "typing.Union[ForwardRef('PodSelectorConfig'), typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ancestors": null,
  "name": "NetworkPolicyPeerConfig"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwargs": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": null,
  "name": "NetworkPolicyPort"
},
{
  "end_port": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "port": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "protocol": {
    "type": "typing.Optional[ForwardRef('NetworkProtocol')]",
    "optional": true
  },
  "ancestors": null,
  "name": "NetworkPolicyPortProps"
},
{
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "egress": {
    "type": "typing.Union[cdk8s_plus_25.NetworkPolicyTraffic, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ingress": {
    "type": "typing.Union[cdk8s_plus_25.NetworkPolicyTraffic, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "selector": {
    "type": "typing.Optional[cdk8s_plus_25.IPodSelector]",
    "optional": true
  },
  "ancestors": [
    "ResourceProps"
  ],
  "name": "NetworkPolicyProps"
},
{
  "peer": {
    "type": "<class 'cdk8s_plus_25.INetworkPolicyPeer'>",
    "optional": false
  },
  "ports": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.NetworkPolicyPort]]",
    "optional": true
  },
  "ancestors": null,
  "name": "NetworkPolicyRule"
},
{
  "default": {
    "type": "typing.Optional[ForwardRef('NetworkPolicyTrafficDefault')]",
    "optional": true
  },
  "rules": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.NetworkPolicyRule, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "ancestors": null,
  "name": "NetworkPolicyTraffic"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwds": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "Enum"
  ],
  "name": "NetworkPolicyTrafficDefault"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwds": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "Enum"
  ],
  "name": "NetworkProtocol"
},
{
  "ancestors": null,
  "name": "Node"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwargs": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": null,
  "name": "NodeLabelQuery"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwargs": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": null,
  "name": "NodeTaintQuery"
},
{
  "effect": {
    "type": "typing.Optional[ForwardRef('TaintEffect')]",
    "optional": true
  },
  "evict_after": {
    "type": "typing.Optional[cdk8s.Duration]",
    "optional": true
  },
  "ancestors": null,
  "name": "NodeTaintQueryOptions"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwargs": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": null,
  "name": "NonApiResource"
},
{
  "path": {
    "type": "<class 'str'>",
    "optional": false
  },
  "mode": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "ancestors": null,
  "name": "PathMapping"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwargs": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": null,
  "name": "PercentOrAbsolute"
},
{
  "scope": {
    "type": "<class 'constructs.Construct'>",
    "optional": false
  },
  "id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "access_modes": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.PersistentVolumeAccessMode]]",
    "optional": true
  },
  "claim": {
    "type": "typing.Optional[cdk8s_plus_25.IPersistentVolumeClaim]",
    "optional": true
  },
  "mount_options": {
    "type": "typing.Optional[typing.Sequence[str]]",
    "optional": true
  },
  "reclaim_policy": {
    "type": "typing.Optional[cdk8s_plus_25.PersistentVolumeReclaimPolicy]",
    "optional": true
  },
  "storage": {
    "type": "typing.Optional[cdk8s.Size]",
    "optional": true
  },
  "storage_class_name": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "volume_mode": {
    "type": "typing.Optional[cdk8s_plus_25.PersistentVolumeMode]",
    "optional": true
  },
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ancestors": [
    "Resource",
    "Construct"
  ],
  "name": "PersistentVolume"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwds": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "Enum"
  ],
  "name": "PersistentVolumeAccessMode"
},
{
  "scope": {
    "type": "<class 'constructs.Construct'>",
    "optional": false
  },
  "id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "access_modes": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.PersistentVolumeAccessMode]]",
    "optional": true
  },
  "storage": {
    "type": "typing.Optional[cdk8s.Size]",
    "optional": true
  },
  "storage_class_name": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "volume": {
    "type": "typing.Optional[cdk8s_plus_25.IPersistentVolume]",
    "optional": true
  },
  "volume_mode": {
    "type": "typing.Optional[cdk8s_plus_25.PersistentVolumeMode]",
    "optional": true
  },
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ancestors": [
    "Resource",
    "Construct"
  ],
  "name": "PersistentVolumeClaim"
},
{
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "access_modes": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.PersistentVolumeAccessMode]]",
    "optional": true
  },
  "storage": {
    "type": "typing.Optional[cdk8s.Size]",
    "optional": true
  },
  "storage_class_name": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "volume": {
    "type": "typing.Optional[cdk8s_plus_25.IPersistentVolume]",
    "optional": true
  },
  "volume_mode": {
    "type": "typing.Optional[cdk8s_plus_25.PersistentVolumeMode]",
    "optional": true
  },
  "ancestors": [
    "ResourceProps"
  ],
  "name": "PersistentVolumeClaimProps"
},
{
  "name": "PersistentVolumeClaimVolumeOptions",
  "read_only": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "ancestors": null
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwds": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "Enum"
  ],
  "name": "PersistentVolumeMode"
},
{
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "access_modes": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.PersistentVolumeAccessMode]]",
    "optional": true
  },
  "claim": {
    "type": "typing.Optional[cdk8s_plus_25.IPersistentVolumeClaim]",
    "optional": true
  },
  "mount_options": {
    "type": "typing.Optional[typing.Sequence[str]]",
    "optional": true
  },
  "reclaim_policy": {
    "type": "typing.Optional[cdk8s_plus_25.PersistentVolumeReclaimPolicy]",
    "optional": true
  },
  "storage": {
    "type": "typing.Optional[cdk8s.Size]",
    "optional": true
  },
  "storage_class_name": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "volume_mode": {
    "type": "typing.Optional[cdk8s_plus_25.PersistentVolumeMode]",
    "optional": true
  },
  "ancestors": [
    "ResourceProps"
  ],
  "name": "PersistentVolumeProps"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwds": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "Enum"
  ],
  "name": "PersistentVolumeReclaimPolicy"
},
{
  "scope": {
    "type": "<class 'constructs.Construct'>",
    "optional": false
  },
  "id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "automount_service_account_token": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "containers": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ContainerProps, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "dns": {
    "type": "typing.Union[cdk8s_plus_25.PodDnsProps, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "docker_registry_auth": {
    "type": "typing.Optional[cdk8s_plus_25.ISecret]",
    "optional": true
  },
  "host_aliases": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.HostAlias, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "host_network": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "init_containers": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ContainerProps, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "isolate": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "restart_policy": {
    "type": "typing.Optional[cdk8s_plus_25.RestartPolicy]",
    "optional": true
  },
  "security_context": {
    "type": "typing.Union[cdk8s_plus_25.PodSecurityContextProps, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "service_account": {
    "type": "typing.Optional[cdk8s_plus_25.IServiceAccount]",
    "optional": true
  },
  "volumes": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.Volume]]",
    "optional": true
  },
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ancestors": [
    "AbstractPod",
    "Resource",
    "Construct"
  ],
  "name": "Pod"
},
{
  "instance": {
    "type": "AbstractPod",
    "optional": false
  },
  "ancestors": null,
  "name": "PodConnections"
},
{
  "isolation": {
    "type": "typing.Optional[ForwardRef('PodConnectionsIsolation')]",
    "optional": true
  },
  "ports": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.NetworkPolicyPort]]",
    "optional": true
  },
  "ancestors": null,
  "name": "PodConnectionsAllowFromOptions"
},
{
  "isolation": {
    "type": "typing.Optional[ForwardRef('PodConnectionsIsolation')]",
    "optional": true
  },
  "ports": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.NetworkPolicyPort]]",
    "optional": true
  },
  "ancestors": null,
  "name": "PodConnectionsAllowToOptions"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwds": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "Enum"
  ],
  "name": "PodConnectionsIsolation"
},
{
  "hostname": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "hostname_as_fqdn": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "nameservers": {
    "type": "typing.Optional[typing.Sequence[str]]",
    "optional": true
  },
  "options": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.DnsOption, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "policy": {
    "type": "typing.Optional[cdk8s_plus_25.DnsPolicy]",
    "optional": true
  },
  "searches": {
    "type": "typing.Optional[typing.Sequence[str]]",
    "optional": true
  },
  "subdomain": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "ancestors": null,
  "name": "PodDns"
},
{
  "hostname": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "hostname_as_fqdn": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "nameservers": {
    "type": "typing.Optional[typing.Sequence[str]]",
    "optional": true
  },
  "options": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.DnsOption, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "policy": {
    "type": "typing.Optional[cdk8s_plus_25.DnsPolicy]",
    "optional": true
  },
  "searches": {
    "type": "typing.Optional[typing.Sequence[str]]",
    "optional": true
  },
  "subdomain": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "ancestors": null,
  "name": "PodDnsProps"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwds": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "Enum"
  ],
  "name": "PodManagementPolicy"
},
{
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "automount_service_account_token": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "containers": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ContainerProps, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "dns": {
    "type": "typing.Union[cdk8s_plus_25.PodDnsProps, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "docker_registry_auth": {
    "type": "typing.Optional[cdk8s_plus_25.ISecret]",
    "optional": true
  },
  "host_aliases": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.HostAlias, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "host_network": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "init_containers": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ContainerProps, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "isolate": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "restart_policy": {
    "type": "typing.Optional[cdk8s_plus_25.RestartPolicy]",
    "optional": true
  },
  "security_context": {
    "type": "typing.Union[cdk8s_plus_25.PodSecurityContextProps, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "service_account": {
    "type": "typing.Optional[cdk8s_plus_25.IServiceAccount]",
    "optional": true
  },
  "volumes": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.Volume]]",
    "optional": true
  },
  "ancestors": [
    "AbstractPodProps",
    "ResourceProps"
  ],
  "name": "PodProps"
},
{
  "instance": {
    "type": "AbstractPod",
    "optional": false
  },
  "ancestors": null,
  "name": "PodScheduling"
},
{
  "weight": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "ancestors": null,
  "name": "PodSchedulingAttractOptions"
},
{
  "topology": {
    "type": "typing.Optional[ForwardRef('Topology')]",
    "optional": true
  },
  "weight": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "ancestors": null,
  "name": "PodSchedulingColocateOptions"
},
{
  "topology": {
    "type": "typing.Optional[ForwardRef('Topology')]",
    "optional": true
  },
  "weight": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "ancestors": null,
  "name": "PodSchedulingSeparateOptions"
},
{
  "ensure_non_root": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "fs_group": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "fs_group_change_policy": {
    "type": "typing.Optional[cdk8s_plus_25.FsGroupChangePolicy]",
    "optional": true
  },
  "group": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "sysctls": {
    "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('Sysctl'), typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "user": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "ancestors": null,
  "name": "PodSecurityContext"
},
{
  "ensure_non_root": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "fs_group": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "fs_group_change_policy": {
    "type": "typing.Optional[cdk8s_plus_25.FsGroupChangePolicy]",
    "optional": true
  },
  "group": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "sysctls": {
    "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('Sysctl'), typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "user": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "ancestors": null,
  "name": "PodSecurityContextProps"
},
{
  "label_selector": {
    "type": "<class 'cdk8s_plus_25.LabelSelector'>",
    "optional": false
  },
  "namespaces": {
    "type": "typing.Union[cdk8s_plus_25.NamespaceSelectorConfig, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ancestors": null,
  "name": "PodSelectorConfig"
},
{
  "scope": {
    "type": "<class 'constructs.Construct'>",
    "optional": false
  },
  "id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "expressions": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.LabelExpression]]",
    "optional": true
  },
  "labels": {
    "type": "typing.Optional[typing.Mapping[str, str]]",
    "optional": true
  },
  "namespaces": {
    "type": "typing.Optional[cdk8s_plus_25.INamespaceSelector]",
    "optional": true
  },
  "ancestors": [
    "Construct"
  ],
  "name": "Pods"
},
{
  "namespaces": {
    "type": "typing.Optional[cdk8s_plus_25.Namespaces]",
    "optional": true
  },
  "ancestors": null,
  "name": "PodsAllOptions"
},
{
  "expressions": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.LabelExpression]]",
    "optional": true
  },
  "labels": {
    "type": "typing.Optional[typing.Mapping[str, str]]",
    "optional": true
  },
  "namespaces": {
    "type": "typing.Optional[cdk8s_plus_25.Namespaces]",
    "optional": true
  },
  "ancestors": null,
  "name": "PodsSelectOptions"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwargs": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": null,
  "name": "Probe"
},
{
  "failure_threshold": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "initial_delay_seconds": {
    "type": "typing.Optional[cdk8s.Duration]",
    "optional": true
  },
  "period_seconds": {
    "type": "typing.Optional[cdk8s.Duration]",
    "optional": true
  },
  "success_threshold": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "timeout_seconds": {
    "type": "typing.Optional[cdk8s.Duration]",
    "optional": true
  },
  "ancestors": null,
  "name": "ProbeOptions"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwds": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "Enum"
  ],
  "name": "Protocol"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwargs": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": null,
  "name": "Replicas"
},
{
  "scope": {
    "type": "<class 'constructs.Construct'>",
    "optional": false
  },
  "id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "ancestors": [
    "Construct"
  ],
  "name": "Resource"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwds": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "Enum"
  ],
  "name": "ResourceFieldPaths"
},
{
  "instance": {
    "type": "<class 'cdk8s_plus_25.Resource'>",
    "optional": false
  },
  "ancestors": null,
  "name": "ResourcePermissions"
},
{
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ancestors": null,
  "name": "ResourceProps"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwds": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "Enum"
  ],
  "name": "RestartPolicy"
},
{
  "scope": {
    "type": "<class 'constructs.Construct'>",
    "optional": false
  },
  "id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "rules": {
    "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('RolePolicyRule'), typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ancestors": [
    "Resource",
    "Construct"
  ],
  "name": "Role"
},
{
  "scope": {
    "type": "<class 'constructs.Construct'>",
    "optional": false
  },
  "id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "role": {
    "type": "<class 'cdk8s_plus_25.IRole'>",
    "optional": false
  },
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ancestors": [
    "Resource",
    "Construct"
  ],
  "name": "RoleBinding"
},
{
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "role": {
    "type": "<class 'cdk8s_plus_25.IRole'>",
    "optional": false
  },
  "ancestors": [
    "ResourceProps"
  ],
  "name": "RoleBindingProps"
},
{
  "resources": {
    "type": "typing.Sequence[cdk8s_plus_25.IApiResource]",
    "optional": false
  },
  "verbs": {
    "type": "typing.Sequence[str]",
    "optional": false
  },
  "ancestors": null,
  "name": "RolePolicyRule"
},
{
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "rules": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.RolePolicyRule, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "ancestors": [
    "ResourceProps"
  ],
  "name": "RoleProps"
},
{
  "replicas": {
    "type": "<class 'cdk8s_plus_25.Replicas'>",
    "optional": false
  },
  "duration": {
    "type": "typing.Optional[cdk8s.Duration]",
    "optional": true
  },
  "ancestors": null,
  "name": "ScalingPolicy"
},
{
  "policies": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ScalingPolicy, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "stabilization_window": {
    "type": "typing.Optional[cdk8s.Duration]",
    "optional": true
  },
  "strategy": {
    "type": "typing.Optional[ForwardRef('ScalingStrategy')]",
    "optional": true
  },
  "ancestors": null,
  "name": "ScalingRules"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwds": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "Enum"
  ],
  "name": "ScalingStrategy"
},
{
  "api_version": {
    "type": "<class 'str'>",
    "optional": false
  },
  "containers": {
    "type": "typing.Sequence[cdk8s_plus_25.Container]",
    "optional": false
  },
  "kind": {
    "type": "<class 'str'>",
    "optional": false
  },
  "name": "ScalingTarget",
  "replicas": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "ancestors": null
},
{
  "scope": {
    "type": "<class 'constructs.Construct'>",
    "optional": false
  },
  "id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "string_data": {
    "type": "typing.Optional[typing.Mapping[str, str]]",
    "optional": true
  },
  "type": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "immutable": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ancestors": [
    "Resource",
    "Construct"
  ],
  "name": "Secret"
},
{
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "immutable": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "string_data": {
    "type": "typing.Optional[typing.Mapping[str, str]]",
    "optional": true
  },
  "type": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "ancestors": [
    "CommonSecretProps",
    "ResourceProps"
  ],
  "name": "SecretProps"
},
{
  "key": {
    "type": "<class 'str'>",
    "optional": false
  },
  "secret": {
    "type": "<class 'cdk8s_plus_25.ISecret'>",
    "optional": false
  },
  "ancestors": null,
  "name": "SecretValue"
},
{
  "default_mode": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "items": {
    "type": "typing.Optional[typing.Mapping[str, typing.Union[cdk8s_plus_25.PathMapping, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "name": "SecretVolumeOptions",
  "optional": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "ancestors": null
},
{
  "scope": {
    "type": "<class 'constructs.Construct'>",
    "optional": false
  },
  "id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "cluster_ip": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "external_i_ps": {
    "type": "typing.Optional[typing.Sequence[str]]",
    "optional": true
  },
  "external_name": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "load_balancer_source_ranges": {
    "type": "typing.Optional[typing.Sequence[str]]",
    "optional": true
  },
  "ports": {
    "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('ServicePort'), typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "selector": {
    "type": "typing.Optional[cdk8s_plus_25.IPodSelector]",
    "optional": true
  },
  "type": {
    "type": "typing.Optional[ForwardRef('ServiceType')]",
    "optional": true
  },
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ancestors": [
    "Resource",
    "Construct"
  ],
  "name": "Service"
},
{
  "scope": {
    "type": "<class 'constructs.Construct'>",
    "optional": false
  },
  "id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "automount_token": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "secrets": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.ISecret]]",
    "optional": true
  },
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ancestors": [
    "Resource",
    "Construct"
  ],
  "name": "ServiceAccount"
},
{
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "automount_token": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "secrets": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.ISecret]]",
    "optional": true
  },
  "ancestors": [
    "ResourceProps"
  ],
  "name": "ServiceAccountProps"
},
{
  "scope": {
    "type": "<class 'constructs.Construct'>",
    "optional": false
  },
  "id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "service_account": {
    "type": "IServiceAccount",
    "optional": false
  },
  "immutable": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ancestors": [
    "Secret",
    "Resource",
    "Construct"
  ],
  "name": "ServiceAccountTokenSecret"
},
{
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "immutable": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "service_account": {
    "type": "<class 'cdk8s_plus_25.IServiceAccount'>",
    "optional": false
  },
  "ancestors": [
    "CommonSecretProps",
    "ResourceProps"
  ],
  "name": "ServiceAccountTokenSecretProps"
},
{
  "name": "ServiceBindOptions",
  "node_port": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "protocol": {
    "type": "typing.Optional[cdk8s_plus_25.Protocol]",
    "optional": true
  },
  "target_port": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "ancestors": null
},
{
  "port": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "ancestors": null,
  "name": "ServiceIngressBackendOptions"
},
{
  "name": "ServicePort",
  "node_port": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "protocol": {
    "type": "typing.Optional[cdk8s_plus_25.Protocol]",
    "optional": true
  },
  "target_port": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "port": {
    "type": "typing.Union[int, float]",
    "optional": false
  },
  "ancestors": [
    "ServiceBindOptions"
  ]
},
{
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "cluster_ip": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "external_i_ps": {
    "type": "typing.Optional[typing.Sequence[str]]",
    "optional": true
  },
  "external_name": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "load_balancer_source_ranges": {
    "type": "typing.Optional[typing.Sequence[str]]",
    "optional": true
  },
  "ports": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ServicePort, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "selector": {
    "type": "typing.Optional[cdk8s_plus_25.IPodSelector]",
    "optional": true
  },
  "type": {
    "type": "typing.Optional[ForwardRef('ServiceType')]",
    "optional": true
  },
  "ancestors": [
    "ResourceProps"
  ],
  "name": "ServiceProps"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwds": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "Enum"
  ],
  "name": "ServiceType"
},
{
  "scope": {
    "type": "<class 'constructs.Construct'>",
    "optional": false
  },
  "id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "ssh_private_key": {
    "type": "<class 'str'>",
    "optional": false
  },
  "immutable": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ancestors": [
    "Secret",
    "Resource",
    "Construct"
  ],
  "name": "SshAuthSecret"
},
{
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "immutable": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "ssh_private_key": {
    "type": "<class 'str'>",
    "optional": false
  },
  "ancestors": [
    "CommonSecretProps",
    "ResourceProps"
  ],
  "name": "SshAuthSecretProps"
},
{
  "scope": {
    "type": "<class 'constructs.Construct'>",
    "optional": false
  },
  "id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "min_ready": {
    "type": "typing.Optional[cdk8s.Duration]",
    "optional": true
  },
  "pod_management_policy": {
    "type": "typing.Optional[cdk8s_plus_25.PodManagementPolicy]",
    "optional": true
  },
  "replicas": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "service": {
    "type": "typing.Optional[cdk8s_plus_25.Service]",
    "optional": true
  },
  "strategy": {
    "type": "typing.Optional[cdk8s_plus_25.StatefulSetUpdateStrategy]",
    "optional": true
  },
  "pod_metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "select": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "spread": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "automount_service_account_token": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "containers": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ContainerProps, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "dns": {
    "type": "typing.Union[cdk8s_plus_25.PodDnsProps, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "docker_registry_auth": {
    "type": "typing.Optional[cdk8s_plus_25.ISecret]",
    "optional": true
  },
  "host_aliases": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.HostAlias, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "host_network": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "init_containers": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ContainerProps, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "isolate": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "restart_policy": {
    "type": "typing.Optional[cdk8s_plus_25.RestartPolicy]",
    "optional": true
  },
  "security_context": {
    "type": "typing.Union[cdk8s_plus_25.PodSecurityContextProps, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "service_account": {
    "type": "typing.Optional[cdk8s_plus_25.IServiceAccount]",
    "optional": true
  },
  "volumes": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.Volume]]",
    "optional": true
  },
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ancestors": [
    "Workload",
    "AbstractPod",
    "Resource",
    "Construct"
  ],
  "name": "StatefulSet"
},
{
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "automount_service_account_token": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "containers": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ContainerProps, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "dns": {
    "type": "typing.Union[cdk8s_plus_25.PodDnsProps, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "docker_registry_auth": {
    "type": "typing.Optional[cdk8s_plus_25.ISecret]",
    "optional": true
  },
  "host_aliases": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.HostAlias, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "host_network": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "init_containers": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ContainerProps, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "isolate": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "restart_policy": {
    "type": "typing.Optional[cdk8s_plus_25.RestartPolicy]",
    "optional": true
  },
  "security_context": {
    "type": "typing.Union[cdk8s_plus_25.PodSecurityContextProps, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "service_account": {
    "type": "typing.Optional[cdk8s_plus_25.IServiceAccount]",
    "optional": true
  },
  "volumes": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.Volume]]",
    "optional": true
  },
  "pod_metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "select": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "spread": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "min_ready": {
    "type": "typing.Optional[cdk8s.Duration]",
    "optional": true
  },
  "pod_management_policy": {
    "type": "typing.Optional[cdk8s_plus_25.PodManagementPolicy]",
    "optional": true
  },
  "replicas": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "service": {
    "type": "typing.Optional[cdk8s_plus_25.Service]",
    "optional": true
  },
  "strategy": {
    "type": "typing.Optional[cdk8s_plus_25.StatefulSetUpdateStrategy]",
    "optional": true
  },
  "ancestors": [
    "WorkloadProps",
    "AbstractPodProps",
    "ResourceProps"
  ],
  "name": "StatefulSetProps"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwargs": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": null,
  "name": "StatefulSetUpdateStrategy"
},
{
  "partition": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "ancestors": null,
  "name": "StatefulSetUpdateStrategyRollingUpdateOptions"
},
{
  "kind": {
    "type": "<class 'str'>",
    "optional": false
  },
  "name": "SubjectConfiguration",
  "api_group": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "namespace": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "ancestors": null
},
{
  "name": "Sysctl",
  "value": {
    "type": "<class 'str'>",
    "optional": false
  },
  "ancestors": null
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwds": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "Enum"
  ],
  "name": "TaintEffect"
},
{
  "taint_selector": {
    "type": "typing.Sequence[cdk8s_plus_25.NodeTaintQuery]",
    "optional": false
  },
  "ancestors": null,
  "name": "TaintedNode"
},
{
  "failure_threshold": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "initial_delay_seconds": {
    "type": "typing.Optional[cdk8s.Duration]",
    "optional": true
  },
  "period_seconds": {
    "type": "typing.Optional[cdk8s.Duration]",
    "optional": true
  },
  "success_threshold": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "timeout_seconds": {
    "type": "typing.Optional[cdk8s.Duration]",
    "optional": true
  },
  "host": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "port": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "ancestors": [
    "ProbeOptions"
  ],
  "name": "TcpSocketProbeOptions"
},
{
  "scope": {
    "type": "<class 'constructs.Construct'>",
    "optional": false
  },
  "id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "tls_cert": {
    "type": "<class 'str'>",
    "optional": false
  },
  "tls_key": {
    "type": "<class 'str'>",
    "optional": false
  },
  "immutable": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ancestors": [
    "Secret",
    "Resource",
    "Construct"
  ],
  "name": "TlsSecret"
},
{
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "immutable": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "tls_cert": {
    "type": "<class 'str'>",
    "optional": false
  },
  "tls_key": {
    "type": "<class 'str'>",
    "optional": false
  },
  "ancestors": [
    "CommonSecretProps",
    "ResourceProps"
  ],
  "name": "TlsSecretProps"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwargs": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": null,
  "name": "Topology"
},
{
  "scope": {
    "type": "Construct",
    "optional": false
  },
  "id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "ancestors": [
    "Construct"
  ],
  "name": "User"
},
{
  "scope": {
    "type": "Construct",
    "optional": false
  },
  "id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "ancestors": [
    "Construct"
  ],
  "name": "Volume"
},
{
  "propagation": {
    "type": "typing.Optional[cdk8s_plus_25.MountPropagation]",
    "optional": true
  },
  "read_only": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "sub_path": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "sub_path_expr": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "path": {
    "type": "<class 'str'>",
    "optional": false
  },
  "volume": {
    "type": "<class 'cdk8s_plus_25.Volume'>",
    "optional": false
  },
  "ancestors": [
    "MountOptions"
  ],
  "name": "VolumeMount"
},
{
  "scope": {
    "type": "<class 'constructs.Construct'>",
    "optional": false
  },
  "id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "pod_metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "select": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "spread": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "automount_service_account_token": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "containers": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ContainerProps, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "dns": {
    "type": "typing.Union[cdk8s_plus_25.PodDnsProps, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "docker_registry_auth": {
    "type": "typing.Optional[cdk8s_plus_25.ISecret]",
    "optional": true
  },
  "host_aliases": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.HostAlias, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "host_network": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "init_containers": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ContainerProps, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "isolate": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "restart_policy": {
    "type": "typing.Optional[cdk8s_plus_25.RestartPolicy]",
    "optional": true
  },
  "security_context": {
    "type": "typing.Union[cdk8s_plus_25.PodSecurityContextProps, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "service_account": {
    "type": "typing.Optional[cdk8s_plus_25.IServiceAccount]",
    "optional": true
  },
  "volumes": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.Volume]]",
    "optional": true
  },
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ancestors": [
    "AbstractPod",
    "Resource",
    "Construct"
  ],
  "name": "Workload"
},
{
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "automount_service_account_token": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "containers": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ContainerProps, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "dns": {
    "type": "typing.Union[cdk8s_plus_25.PodDnsProps, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "docker_registry_auth": {
    "type": "typing.Optional[cdk8s_plus_25.ISecret]",
    "optional": true
  },
  "host_aliases": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.HostAlias, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "host_network": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "init_containers": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ContainerProps, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "isolate": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "restart_policy": {
    "type": "typing.Optional[cdk8s_plus_25.RestartPolicy]",
    "optional": true
  },
  "security_context": {
    "type": "typing.Union[cdk8s_plus_25.PodSecurityContextProps, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "service_account": {
    "type": "typing.Optional[cdk8s_plus_25.IServiceAccount]",
    "optional": true
  },
  "volumes": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.Volume]]",
    "optional": true
  },
  "pod_metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "select": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "spread": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "ancestors": [
    "AbstractPodProps",
    "ResourceProps"
  ],
  "name": "WorkloadProps"
},
{
  "instance": {
    "type": "AbstractPod",
    "optional": false
  },
  "ancestors": [
    "PodScheduling"
  ],
  "name": "WorkloadScheduling"
},
{
  "topology": {
    "type": "typing.Optional[cdk8s_plus_25.Topology]",
    "optional": true
  },
  "weight": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "ancestors": null,
  "name": "WorkloadSchedulingSpreadOptions"
},
{
  "scope": {
    "type": "<class 'constructs.Construct'>",
    "optional": false
  },
  "id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "automount_service_account_token": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "containers": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ContainerProps, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "dns": {
    "type": "typing.Union[cdk8s_plus_25.PodDnsProps, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "docker_registry_auth": {
    "type": "typing.Optional[cdk8s_plus_25.ISecret]",
    "optional": true
  },
  "host_aliases": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.HostAlias, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "host_network": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "init_containers": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ContainerProps, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "isolate": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "restart_policy": {
    "type": "typing.Optional[cdk8s_plus_25.RestartPolicy]",
    "optional": true
  },
  "security_context": {
    "type": "typing.Union[cdk8s_plus_25.PodSecurityContextProps, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "service_account": {
    "type": "typing.Optional[ForwardRef('IServiceAccount')]",
    "optional": true
  },
  "volumes": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.Volume]]",
    "optional": true
  },
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ancestors": [
    "Resource",
    "Construct"
  ],
  "name": "AbstractPod"
},
{
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "automount_service_account_token": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "containers": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ContainerProps, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "dns": {
    "type": "typing.Union[cdk8s_plus_25.PodDnsProps, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "docker_registry_auth": {
    "type": "typing.Optional[cdk8s_plus_25.ISecret]",
    "optional": true
  },
  "host_aliases": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.HostAlias, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "host_network": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "init_containers": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ContainerProps, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "isolate": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "restart_policy": {
    "type": "typing.Optional[cdk8s_plus_25.RestartPolicy]",
    "optional": true
  },
  "security_context": {
    "type": "typing.Union[cdk8s_plus_25.PodSecurityContextProps, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "service_account": {
    "type": "typing.Optional[ForwardRef('IServiceAccount')]",
    "optional": true
  },
  "volumes": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.Volume]]",
    "optional": true
  },
  "ancestors": [
    "ResourceProps"
  ],
  "name": "AbstractPodProps"
},
{
  "name": "AddDeploymentOptions",
  "node_port": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "protocol": {
    "type": "typing.Optional[cdk8s_plus_25.Protocol]",
    "optional": true
  },
  "target_port": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "port": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "ancestors": [
    "ServiceBindOptions"
  ]
},
{
  "exclude": {
    "type": "typing.Optional[typing.Sequence[str]]",
    "optional": true
  },
  "key_prefix": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "ancestors": null,
  "name": "AddDirectoryOptions"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwargs": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": null,
  "name": "ApiResource"
},
{
  "api_group": {
    "type": "<class 'str'>",
    "optional": false
  },
  "resource_type": {
    "type": "<class 'str'>",
    "optional": false
  },
  "ancestors": null,
  "name": "ApiResourceOptions"
},
{
  "scope": {
    "type": "<class 'constructs.Construct'>",
    "optional": false
  },
  "id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "volume_id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "fs_type": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "partition": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "read_only": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "access_modes": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.PersistentVolumeAccessMode]]",
    "optional": true
  },
  "claim": {
    "type": "typing.Optional[cdk8s_plus_25.IPersistentVolumeClaim]",
    "optional": true
  },
  "mount_options": {
    "type": "typing.Optional[typing.Sequence[str]]",
    "optional": true
  },
  "reclaim_policy": {
    "type": "typing.Optional[cdk8s_plus_25.PersistentVolumeReclaimPolicy]",
    "optional": true
  },
  "storage": {
    "type": "typing.Optional[cdk8s.Size]",
    "optional": true
  },
  "storage_class_name": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "volume_mode": {
    "type": "typing.Optional[cdk8s_plus_25.PersistentVolumeMode]",
    "optional": true
  },
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ancestors": [
    "PersistentVolume",
    "Resource",
    "Construct"
  ],
  "name": "AwsElasticBlockStorePersistentVolume"
},
{
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "access_modes": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.PersistentVolumeAccessMode]]",
    "optional": true
  },
  "claim": {
    "type": "typing.Optional[cdk8s_plus_25.IPersistentVolumeClaim]",
    "optional": true
  },
  "mount_options": {
    "type": "typing.Optional[typing.Sequence[str]]",
    "optional": true
  },
  "reclaim_policy": {
    "type": "typing.Optional[cdk8s_plus_25.PersistentVolumeReclaimPolicy]",
    "optional": true
  },
  "storage": {
    "type": "typing.Optional[cdk8s.Size]",
    "optional": true
  },
  "storage_class_name": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "volume_mode": {
    "type": "typing.Optional[cdk8s_plus_25.PersistentVolumeMode]",
    "optional": true
  },
  "volume_id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "fs_type": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "partition": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "read_only": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "ancestors": [
    "PersistentVolumeProps",
    "ResourceProps"
  ],
  "name": "AwsElasticBlockStorePersistentVolumeProps"
},
{
  "fs_type": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "name": "AwsElasticBlockStoreVolumeOptions",
  "partition": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "read_only": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "ancestors": null
},
{
  "scope": {
    "type": "<class 'constructs.Construct'>",
    "optional": false
  },
  "id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "disk_name": {
    "type": "<class 'str'>",
    "optional": false
  },
  "disk_uri": {
    "type": "<class 'str'>",
    "optional": false
  },
  "caching_mode": {
    "type": "typing.Optional[cdk8s_plus_25.AzureDiskPersistentVolumeCachingMode]",
    "optional": true
  },
  "fs_type": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "kind": {
    "type": "typing.Optional[cdk8s_plus_25.AzureDiskPersistentVolumeKind]",
    "optional": true
  },
  "read_only": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "access_modes": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.PersistentVolumeAccessMode]]",
    "optional": true
  },
  "claim": {
    "type": "typing.Optional[cdk8s_plus_25.IPersistentVolumeClaim]",
    "optional": true
  },
  "mount_options": {
    "type": "typing.Optional[typing.Sequence[str]]",
    "optional": true
  },
  "reclaim_policy": {
    "type": "typing.Optional[cdk8s_plus_25.PersistentVolumeReclaimPolicy]",
    "optional": true
  },
  "storage": {
    "type": "typing.Optional[cdk8s.Size]",
    "optional": true
  },
  "storage_class_name": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "volume_mode": {
    "type": "typing.Optional[cdk8s_plus_25.PersistentVolumeMode]",
    "optional": true
  },
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ancestors": [
    "PersistentVolume",
    "Resource",
    "Construct"
  ],
  "name": "AzureDiskPersistentVolume"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwds": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "Enum"
  ],
  "name": "AzureDiskPersistentVolumeCachingMode"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwds": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "Enum"
  ],
  "name": "AzureDiskPersistentVolumeKind"
},
{
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "access_modes": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.PersistentVolumeAccessMode]]",
    "optional": true
  },
  "claim": {
    "type": "typing.Optional[cdk8s_plus_25.IPersistentVolumeClaim]",
    "optional": true
  },
  "mount_options": {
    "type": "typing.Optional[typing.Sequence[str]]",
    "optional": true
  },
  "reclaim_policy": {
    "type": "typing.Optional[cdk8s_plus_25.PersistentVolumeReclaimPolicy]",
    "optional": true
  },
  "storage": {
    "type": "typing.Optional[cdk8s.Size]",
    "optional": true
  },
  "storage_class_name": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "volume_mode": {
    "type": "typing.Optional[cdk8s_plus_25.PersistentVolumeMode]",
    "optional": true
  },
  "disk_name": {
    "type": "<class 'str'>",
    "optional": false
  },
  "disk_uri": {
    "type": "<class 'str'>",
    "optional": false
  },
  "caching_mode": {
    "type": "typing.Optional[cdk8s_plus_25.AzureDiskPersistentVolumeCachingMode]",
    "optional": true
  },
  "fs_type": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "kind": {
    "type": "typing.Optional[cdk8s_plus_25.AzureDiskPersistentVolumeKind]",
    "optional": true
  },
  "read_only": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "ancestors": [
    "PersistentVolumeProps",
    "ResourceProps"
  ],
  "name": "AzureDiskPersistentVolumeProps"
},
{
  "caching_mode": {
    "type": "typing.Optional[cdk8s_plus_25.AzureDiskPersistentVolumeCachingMode]",
    "optional": true
  },
  "fs_type": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "kind": {
    "type": "typing.Optional[cdk8s_plus_25.AzureDiskPersistentVolumeKind]",
    "optional": true
  },
  "name": "AzureDiskVolumeOptions",
  "read_only": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "ancestors": null
},
{
  "scope": {
    "type": "<class 'constructs.Construct'>",
    "optional": false
  },
  "id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "password": {
    "type": "<class 'str'>",
    "optional": false
  },
  "username": {
    "type": "<class 'str'>",
    "optional": false
  },
  "immutable": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ancestors": [
    "Secret",
    "Resource",
    "Construct"
  ],
  "name": "BasicAuthSecret"
},
{
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "immutable": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "password": {
    "type": "<class 'str'>",
    "optional": false
  },
  "username": {
    "type": "<class 'str'>",
    "optional": false
  },
  "ancestors": [
    "CommonSecretProps",
    "ResourceProps"
  ],
  "name": "BasicAuthSecretProps"
},
{
  "scope": {
    "type": "<class 'constructs.Construct'>",
    "optional": false
  },
  "id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "aggregation_labels": {
    "type": "typing.Optional[typing.Mapping[str, str]]",
    "optional": true
  },
  "rules": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ClusterRolePolicyRule, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ancestors": [
    "Resource",
    "Construct"
  ],
  "name": "ClusterRole"
},
{
  "scope": {
    "type": "<class 'constructs.Construct'>",
    "optional": false
  },
  "id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "role": {
    "type": "IClusterRole",
    "optional": false
  },
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ancestors": [
    "Resource",
    "Construct"
  ],
  "name": "ClusterRoleBinding"
},
{
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "role": {
    "type": "IClusterRole",
    "optional": false
  },
  "ancestors": [
    "ResourceProps"
  ],
  "name": "ClusterRoleBindingProps"
},
{
  "endpoints": {
    "type": "typing.Sequence[ForwardRef('IApiEndpoint')]",
    "optional": false
  },
  "verbs": {
    "type": "typing.Sequence[str]",
    "optional": false
  },
  "ancestors": null,
  "name": "ClusterRolePolicyRule"
},
{
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "aggregation_labels": {
    "type": "typing.Optional[typing.Mapping[str, str]]",
    "optional": true
  },
  "rules": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ClusterRolePolicyRule, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "ancestors": [
    "ResourceProps"
  ],
  "name": "ClusterRoleProps"
},
{
  "failure_threshold": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "initial_delay_seconds": {
    "type": "typing.Optional[cdk8s.Duration]",
    "optional": true
  },
  "period_seconds": {
    "type": "typing.Optional[cdk8s.Duration]",
    "optional": true
  },
  "success_threshold": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "timeout_seconds": {
    "type": "typing.Optional[cdk8s.Duration]",
    "optional": true
  },
  "ancestors": [
    "ProbeOptions"
  ],
  "name": "CommandProbeOptions"
},
{
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "immutable": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "ancestors": [
    "ResourceProps"
  ],
  "name": "CommonSecretProps"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwds": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "Enum"
  ],
  "name": "ConcurrencyPolicy"
},
{
  "scope": {
    "type": "<class 'constructs.Construct'>",
    "optional": false
  },
  "id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "binary_data": {
    "type": "typing.Optional[typing.Mapping[str, str]]",
    "optional": true
  },
  "data": {
    "type": "typing.Optional[typing.Mapping[str, str]]",
    "optional": true
  },
  "immutable": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ancestors": [
    "Resource",
    "Construct"
  ],
  "name": "ConfigMap"
},
{
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "binary_data": {
    "type": "typing.Optional[typing.Mapping[str, str]]",
    "optional": true
  },
  "data": {
    "type": "typing.Optional[typing.Mapping[str, str]]",
    "optional": true
  },
  "immutable": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "ancestors": [
    "ResourceProps"
  ],
  "name": "ConfigMapProps"
},
{
  "default_mode": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "items": {
    "type": "typing.Optional[typing.Mapping[str, typing.Union[ForwardRef('PathMapping'), typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "name": "ConfigMapVolumeOptions",
  "optional": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "ancestors": null
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwds": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "Enum"
  ],
  "name": "ConnectionScheme"
},
{
  "image": {
    "type": "<class 'str'>",
    "optional": false
  },
  "args": {
    "type": "typing.Optional[typing.Sequence[str]]",
    "optional": true
  },
  "command": {
    "type": "typing.Optional[typing.Sequence[str]]",
    "optional": true
  },
  "env_from": {
    "type": "typing.Optional[typing.Sequence[ForwardRef('EnvFrom')]]",
    "optional": true
  },
  "env_variables": {
    "type": "typing.Optional[typing.Mapping[str, ForwardRef('EnvValue')]]",
    "optional": true
  },
  "image_pull_policy": {
    "type": "typing.Optional[ForwardRef('ImagePullPolicy')]",
    "optional": true
  },
  "lifecycle": {
    "type": "typing.Union[ForwardRef('ContainerLifecycle'), typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "liveness": {
    "type": "typing.Optional[ForwardRef('Probe')]",
    "optional": true
  },
  "name": "Container",
  "port": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "port_number": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "ports": {
    "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('ContainerPort'), typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "readiness": {
    "type": "typing.Optional[ForwardRef('Probe')]",
    "optional": true
  },
  "resources": {
    "type": "typing.Union[ForwardRef('ContainerResources'), typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "security_context": {
    "type": "typing.Union[ForwardRef('ContainerSecurityContextProps'), typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "startup": {
    "type": "typing.Optional[ForwardRef('Probe')]",
    "optional": true
  },
  "volume_mounts": {
    "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('VolumeMount'), typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "working_dir": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "ancestors": null
},
{
  "post_start": {
    "type": "typing.Optional[ForwardRef('Handler')]",
    "optional": true
  },
  "pre_stop": {
    "type": "typing.Optional[ForwardRef('Handler')]",
    "optional": true
  },
  "ancestors": null,
  "name": "ContainerLifecycle"
},
{
  "args": {
    "type": "typing.Optional[typing.Sequence[str]]",
    "optional": true
  },
  "command": {
    "type": "typing.Optional[typing.Sequence[str]]",
    "optional": true
  },
  "env_from": {
    "type": "typing.Optional[typing.Sequence[ForwardRef('EnvFrom')]]",
    "optional": true
  },
  "env_variables": {
    "type": "typing.Optional[typing.Mapping[str, ForwardRef('EnvValue')]]",
    "optional": true
  },
  "image_pull_policy": {
    "type": "typing.Optional[ForwardRef('ImagePullPolicy')]",
    "optional": true
  },
  "lifecycle": {
    "type": "typing.Union[cdk8s_plus_25.ContainerLifecycle, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "liveness": {
    "type": "typing.Optional[ForwardRef('Probe')]",
    "optional": true
  },
  "name": "ContainerOpts",
  "port": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "port_number": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "ports": {
    "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('ContainerPort'), typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "readiness": {
    "type": "typing.Optional[ForwardRef('Probe')]",
    "optional": true
  },
  "resources": {
    "type": "typing.Union[ForwardRef('ContainerResources'), typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "security_context": {
    "type": "typing.Union[ForwardRef('ContainerSecurityContextProps'), typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "startup": {
    "type": "typing.Optional[ForwardRef('Probe')]",
    "optional": true
  },
  "volume_mounts": {
    "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('VolumeMount'), typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "working_dir": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "ancestors": null
},
{
  "number": {
    "type": "typing.Union[int, float]",
    "optional": false
  },
  "host_ip": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "host_port": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "name": "ContainerPort",
  "protocol": {
    "type": "typing.Optional[ForwardRef('Protocol')]",
    "optional": true
  },
  "ancestors": null
},
{
  "args": {
    "type": "typing.Optional[typing.Sequence[str]]",
    "optional": true
  },
  "command": {
    "type": "typing.Optional[typing.Sequence[str]]",
    "optional": true
  },
  "env_from": {
    "type": "typing.Optional[typing.Sequence[ForwardRef('EnvFrom')]]",
    "optional": true
  },
  "env_variables": {
    "type": "typing.Optional[typing.Mapping[str, ForwardRef('EnvValue')]]",
    "optional": true
  },
  "image_pull_policy": {
    "type": "typing.Optional[ForwardRef('ImagePullPolicy')]",
    "optional": true
  },
  "lifecycle": {
    "type": "typing.Union[cdk8s_plus_25.ContainerLifecycle, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "liveness": {
    "type": "typing.Optional[ForwardRef('Probe')]",
    "optional": true
  },
  "name": "ContainerProps",
  "port": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "port_number": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "ports": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ContainerPort, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "readiness": {
    "type": "typing.Optional[ForwardRef('Probe')]",
    "optional": true
  },
  "resources": {
    "type": "typing.Union[ForwardRef('ContainerResources'), typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "security_context": {
    "type": "typing.Union[ForwardRef('ContainerSecurityContextProps'), typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "startup": {
    "type": "typing.Optional[ForwardRef('Probe')]",
    "optional": true
  },
  "volume_mounts": {
    "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('VolumeMount'), typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "working_dir": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "image": {
    "type": "<class 'str'>",
    "optional": false
  },
  "ancestors": [
    "ContainerOpts"
  ]
},
{
  "cpu": {
    "type": "typing.Union[ForwardRef('CpuResources'), typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ephemeral_storage": {
    "type": "typing.Union[ForwardRef('EphemeralStorageResources'), typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "memory": {
    "type": "typing.Union[ForwardRef('MemoryResources'), typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ancestors": null,
  "name": "ContainerResources"
},
{
  "allow_privilege_escalation": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "ensure_non_root": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "group": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "privileged": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "read_only_root_filesystem": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "user": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "ancestors": null,
  "name": "ContainerSecurityContext"
},
{
  "allow_privilege_escalation": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "ensure_non_root": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "group": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "privileged": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "read_only_root_filesystem": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "user": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "ancestors": null,
  "name": "ContainerSecurityContextProps"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwargs": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": null,
  "name": "Cpu"
},
{
  "limit": {
    "type": "typing.Optional[cdk8s_plus_25.Cpu]",
    "optional": true
  },
  "request": {
    "type": "typing.Optional[cdk8s_plus_25.Cpu]",
    "optional": true
  },
  "ancestors": null,
  "name": "CpuResources"
},
{
  "scope": {
    "type": "<class 'constructs.Construct'>",
    "optional": false
  },
  "id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "schedule": {
    "type": "<class 'cdk8s.Cron'>",
    "optional": false
  },
  "concurrency_policy": {
    "type": "typing.Optional[cdk8s_plus_25.ConcurrencyPolicy]",
    "optional": true
  },
  "failed_jobs_retained": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "starting_deadline": {
    "type": "typing.Optional[cdk8s.Duration]",
    "optional": true
  },
  "successful_jobs_retained": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "suspend": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "time_zone": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "active_deadline": {
    "type": "typing.Optional[cdk8s.Duration]",
    "optional": true
  },
  "backoff_limit": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "ttl_after_finished": {
    "type": "typing.Optional[cdk8s.Duration]",
    "optional": true
  },
  "pod_metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "select": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "spread": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "automount_service_account_token": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "containers": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ContainerProps, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "dns": {
    "type": "typing.Union[cdk8s_plus_25.PodDnsProps, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "docker_registry_auth": {
    "type": "typing.Optional[cdk8s_plus_25.ISecret]",
    "optional": true
  },
  "host_aliases": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.HostAlias, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "host_network": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "init_containers": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ContainerProps, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "isolate": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "restart_policy": {
    "type": "typing.Optional[cdk8s_plus_25.RestartPolicy]",
    "optional": true
  },
  "security_context": {
    "type": "typing.Union[cdk8s_plus_25.PodSecurityContextProps, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "service_account": {
    "type": "typing.Optional[cdk8s_plus_25.IServiceAccount]",
    "optional": true
  },
  "volumes": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.Volume]]",
    "optional": true
  },
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ancestors": [
    "Workload",
    "AbstractPod",
    "Resource",
    "Construct"
  ],
  "name": "CronJob"
},
{
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "automount_service_account_token": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "containers": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ContainerProps, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "dns": {
    "type": "typing.Union[cdk8s_plus_25.PodDnsProps, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "docker_registry_auth": {
    "type": "typing.Optional[cdk8s_plus_25.ISecret]",
    "optional": true
  },
  "host_aliases": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.HostAlias, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "host_network": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "init_containers": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ContainerProps, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "isolate": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "restart_policy": {
    "type": "typing.Optional[cdk8s_plus_25.RestartPolicy]",
    "optional": true
  },
  "security_context": {
    "type": "typing.Union[cdk8s_plus_25.PodSecurityContextProps, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "service_account": {
    "type": "typing.Optional[cdk8s_plus_25.IServiceAccount]",
    "optional": true
  },
  "volumes": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.Volume]]",
    "optional": true
  },
  "pod_metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "select": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "spread": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "active_deadline": {
    "type": "typing.Optional[cdk8s.Duration]",
    "optional": true
  },
  "backoff_limit": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "ttl_after_finished": {
    "type": "typing.Optional[cdk8s.Duration]",
    "optional": true
  },
  "schedule": {
    "type": "<class 'cdk8s.Cron'>",
    "optional": false
  },
  "concurrency_policy": {
    "type": "typing.Optional[cdk8s_plus_25.ConcurrencyPolicy]",
    "optional": true
  },
  "failed_jobs_retained": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "starting_deadline": {
    "type": "typing.Optional[cdk8s.Duration]",
    "optional": true
  },
  "successful_jobs_retained": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "suspend": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "time_zone": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "ancestors": [
    "JobProps",
    "WorkloadProps",
    "AbstractPodProps",
    "ResourceProps"
  ],
  "name": "CronJobProps"
},
{
  "attributes": {
    "type": "typing.Optional[typing.Mapping[str, str]]",
    "optional": true
  },
  "fs_type": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "name": "CsiVolumeOptions",
  "read_only": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "ancestors": null
},
{
  "scope": {
    "type": "<class 'constructs.Construct'>",
    "optional": false
  },
  "id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "min_ready_seconds": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "pod_metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "select": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "spread": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "automount_service_account_token": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "containers": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ContainerProps, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "dns": {
    "type": "typing.Union[cdk8s_plus_25.PodDnsProps, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "docker_registry_auth": {
    "type": "typing.Optional[cdk8s_plus_25.ISecret]",
    "optional": true
  },
  "host_aliases": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.HostAlias, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "host_network": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "init_containers": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ContainerProps, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "isolate": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "restart_policy": {
    "type": "typing.Optional[cdk8s_plus_25.RestartPolicy]",
    "optional": true
  },
  "security_context": {
    "type": "typing.Union[cdk8s_plus_25.PodSecurityContextProps, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "service_account": {
    "type": "typing.Optional[cdk8s_plus_25.IServiceAccount]",
    "optional": true
  },
  "volumes": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.Volume]]",
    "optional": true
  },
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ancestors": [
    "Workload",
    "AbstractPod",
    "Resource",
    "Construct"
  ],
  "name": "DaemonSet"
},
{
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "automount_service_account_token": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "containers": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ContainerProps, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "dns": {
    "type": "typing.Union[cdk8s_plus_25.PodDnsProps, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "docker_registry_auth": {
    "type": "typing.Optional[cdk8s_plus_25.ISecret]",
    "optional": true
  },
  "host_aliases": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.HostAlias, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "host_network": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "init_containers": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ContainerProps, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "isolate": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "restart_policy": {
    "type": "typing.Optional[cdk8s_plus_25.RestartPolicy]",
    "optional": true
  },
  "security_context": {
    "type": "typing.Union[cdk8s_plus_25.PodSecurityContextProps, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "service_account": {
    "type": "typing.Optional[cdk8s_plus_25.IServiceAccount]",
    "optional": true
  },
  "volumes": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.Volume]]",
    "optional": true
  },
  "pod_metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "select": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "spread": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "min_ready_seconds": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "ancestors": [
    "WorkloadProps",
    "AbstractPodProps",
    "ResourceProps"
  ],
  "name": "DaemonSetProps"
},
{
  "scope": {
    "type": "<class 'constructs.Construct'>",
    "optional": false
  },
  "id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "min_ready": {
    "type": "typing.Optional[cdk8s.Duration]",
    "optional": true
  },
  "progress_deadline": {
    "type": "typing.Optional[cdk8s.Duration]",
    "optional": true
  },
  "replicas": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "strategy": {
    "type": "typing.Optional[cdk8s_plus_25.DeploymentStrategy]",
    "optional": true
  },
  "pod_metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "select": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "spread": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "automount_service_account_token": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "containers": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ContainerProps, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "dns": {
    "type": "typing.Union[cdk8s_plus_25.PodDnsProps, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "docker_registry_auth": {
    "type": "typing.Optional[cdk8s_plus_25.ISecret]",
    "optional": true
  },
  "host_aliases": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.HostAlias, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "host_network": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "init_containers": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ContainerProps, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "isolate": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "restart_policy": {
    "type": "typing.Optional[cdk8s_plus_25.RestartPolicy]",
    "optional": true
  },
  "security_context": {
    "type": "typing.Union[cdk8s_plus_25.PodSecurityContextProps, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "service_account": {
    "type": "typing.Optional[cdk8s_plus_25.IServiceAccount]",
    "optional": true
  },
  "volumes": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.Volume]]",
    "optional": true
  },
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ancestors": [
    "Workload",
    "AbstractPod",
    "Resource",
    "Construct"
  ],
  "name": "Deployment"
},
{
  "name": "DeploymentExposeViaServiceOptions",
  "ports": {
    "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('ServicePort'), typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "service_type": {
    "type": "typing.Optional[ForwardRef('ServiceType')]",
    "optional": true
  },
  "ancestors": null
},
{
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "automount_service_account_token": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "containers": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ContainerProps, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "dns": {
    "type": "typing.Union[cdk8s_plus_25.PodDnsProps, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "docker_registry_auth": {
    "type": "typing.Optional[cdk8s_plus_25.ISecret]",
    "optional": true
  },
  "host_aliases": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.HostAlias, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "host_network": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "init_containers": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ContainerProps, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "isolate": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "restart_policy": {
    "type": "typing.Optional[cdk8s_plus_25.RestartPolicy]",
    "optional": true
  },
  "security_context": {
    "type": "typing.Union[cdk8s_plus_25.PodSecurityContextProps, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "service_account": {
    "type": "typing.Optional[cdk8s_plus_25.IServiceAccount]",
    "optional": true
  },
  "volumes": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.Volume]]",
    "optional": true
  },
  "pod_metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "select": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "spread": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "min_ready": {
    "type": "typing.Optional[cdk8s.Duration]",
    "optional": true
  },
  "progress_deadline": {
    "type": "typing.Optional[cdk8s.Duration]",
    "optional": true
  },
  "replicas": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "strategy": {
    "type": "typing.Optional[cdk8s_plus_25.DeploymentStrategy]",
    "optional": true
  },
  "ancestors": [
    "WorkloadProps",
    "AbstractPodProps",
    "ResourceProps"
  ],
  "name": "DeploymentProps"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwargs": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": null,
  "name": "DeploymentStrategy"
},
{
  "max_surge": {
    "type": "typing.Optional[ForwardRef('PercentOrAbsolute')]",
    "optional": true
  },
  "max_unavailable": {
    "type": "typing.Optional[ForwardRef('PercentOrAbsolute')]",
    "optional": true
  },
  "ancestors": null,
  "name": "DeploymentStrategyRollingUpdateOptions"
},
{
  "name": "DnsOption",
  "value": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "ancestors": null
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwds": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "Enum"
  ],
  "name": "DnsPolicy"
},
{
  "scope": {
    "type": "<class 'constructs.Construct'>",
    "optional": false
  },
  "id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "data": {
    "type": "typing.Mapping[str, typing.Any]",
    "optional": false
  },
  "immutable": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ancestors": [
    "Secret",
    "Resource",
    "Construct"
  ],
  "name": "DockerConfigSecret"
},
{
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "immutable": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "data": {
    "type": "typing.Mapping[str, typing.Any]",
    "optional": false
  },
  "ancestors": [
    "CommonSecretProps",
    "ResourceProps"
  ],
  "name": "DockerConfigSecretProps"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwds": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "Enum"
  ],
  "name": "EmptyDirMedium"
},
{
  "medium": {
    "type": "typing.Optional[cdk8s_plus_25.EmptyDirMedium]",
    "optional": true
  },
  "size_limit": {
    "type": "typing.Optional[cdk8s.Size]",
    "optional": true
  },
  "ancestors": null,
  "name": "EmptyDirVolumeOptions"
},
{
  "sources": {
    "type": "typing.Sequence[ForwardRef('EnvFrom')]",
    "optional": false
  },
  "variables": {
    "type": "typing.Mapping[str, ForwardRef('EnvValue')]",
    "optional": false
  },
  "ancestors": null,
  "name": "Env"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwds": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "Enum"
  ],
  "name": "EnvFieldPaths"
},
{
  "config_map": {
    "type": "typing.Optional[ForwardRef('IConfigMap')]",
    "optional": true
  },
  "prefix": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "sec": {
    "type": "typing.Optional[ForwardRef('ISecret')]",
    "optional": true
  },
  "ancestors": null,
  "name": "EnvFrom"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwargs": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": null,
  "name": "EnvValue"
},
{
  "optional": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "ancestors": null,
  "name": "EnvValueFromConfigMapOptions"
},
{
  "api_version": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "key": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "ancestors": null,
  "name": "EnvValueFromFieldRefOptions"
},
{
  "required": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "ancestors": null,
  "name": "EnvValueFromProcessOptions"
},
{
  "container": {
    "type": "typing.Optional[cdk8s_plus_25.Container]",
    "optional": true
  },
  "divisor": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "ancestors": null,
  "name": "EnvValueFromResourceOptions"
},
{
  "optional": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "ancestors": null,
  "name": "EnvValueFromSecretOptions"
},
{
  "limit": {
    "type": "typing.Optional[cdk8s.Size]",
    "optional": true
  },
  "request": {
    "type": "typing.Optional[cdk8s.Size]",
    "optional": true
  },
  "ancestors": null,
  "name": "EphemeralStorageResources"
},
{
  "name": "ExposeDeploymentViaIngressOptions",
  "ports": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ServicePort, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "service_type": {
    "type": "typing.Optional[cdk8s_plus_25.ServiceType]",
    "optional": true
  },
  "ingress": {
    "type": "typing.Optional[ForwardRef('Ingress')]",
    "optional": true
  },
  "path_type": {
    "type": "typing.Optional[cdk8s_plus_25.HttpIngressPathType]",
    "optional": true
  },
  "ancestors": [
    "DeploymentExposeViaServiceOptions",
    "ExposeServiceViaIngressOptions"
  ]
},
{
  "ingress": {
    "type": "typing.Optional[ForwardRef('Ingress')]",
    "optional": true
  },
  "path_type": {
    "type": "typing.Optional[ForwardRef('HttpIngressPathType')]",
    "optional": true
  },
  "ancestors": null,
  "name": "ExposeServiceViaIngressOptions"
},
{
  "namespace_name": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "ancestors": null,
  "name": "FromServiceAccountNameOptions"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwds": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "Enum"
  ],
  "name": "FsGroupChangePolicy"
},
{
  "scope": {
    "type": "<class 'constructs.Construct'>",
    "optional": false
  },
  "id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "pd_name": {
    "type": "<class 'str'>",
    "optional": false
  },
  "fs_type": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "partition": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "read_only": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "access_modes": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.PersistentVolumeAccessMode]]",
    "optional": true
  },
  "claim": {
    "type": "typing.Optional[cdk8s_plus_25.IPersistentVolumeClaim]",
    "optional": true
  },
  "mount_options": {
    "type": "typing.Optional[typing.Sequence[str]]",
    "optional": true
  },
  "reclaim_policy": {
    "type": "typing.Optional[cdk8s_plus_25.PersistentVolumeReclaimPolicy]",
    "optional": true
  },
  "storage": {
    "type": "typing.Optional[cdk8s.Size]",
    "optional": true
  },
  "storage_class_name": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "volume_mode": {
    "type": "typing.Optional[cdk8s_plus_25.PersistentVolumeMode]",
    "optional": true
  },
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ancestors": [
    "PersistentVolume",
    "Resource",
    "Construct"
  ],
  "name": "GCEPersistentDiskPersistentVolume"
},
{
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "access_modes": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.PersistentVolumeAccessMode]]",
    "optional": true
  },
  "claim": {
    "type": "typing.Optional[cdk8s_plus_25.IPersistentVolumeClaim]",
    "optional": true
  },
  "mount_options": {
    "type": "typing.Optional[typing.Sequence[str]]",
    "optional": true
  },
  "reclaim_policy": {
    "type": "typing.Optional[cdk8s_plus_25.PersistentVolumeReclaimPolicy]",
    "optional": true
  },
  "storage": {
    "type": "typing.Optional[cdk8s.Size]",
    "optional": true
  },
  "storage_class_name": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "volume_mode": {
    "type": "typing.Optional[cdk8s_plus_25.PersistentVolumeMode]",
    "optional": true
  },
  "pd_name": {
    "type": "<class 'str'>",
    "optional": false
  },
  "fs_type": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "partition": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "read_only": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "ancestors": [
    "PersistentVolumeProps",
    "ResourceProps"
  ],
  "name": "GCEPersistentDiskPersistentVolumeProps"
},
{
  "fs_type": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "name": "GCEPersistentDiskVolumeOptions",
  "partition": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "read_only": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "ancestors": null
},
{
  "scope": {
    "type": "Construct",
    "optional": false
  },
  "id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "ancestors": [
    "Construct"
  ],
  "name": "Group"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwargs": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": null,
  "name": "Handler"
},
{
  "port": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "ancestors": null,
  "name": "HandlerFromHttpGetOptions"
},
{
  "host": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "port": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "ancestors": null,
  "name": "HandlerFromTcpSocketOptions"
},
{
  "scope": {
    "type": "<class 'constructs.Construct'>",
    "optional": false
  },
  "id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "max_replicas": {
    "type": "typing.Union[int, float]",
    "optional": false
  },
  "target": {
    "type": "<class 'cdk8s_plus_25.IScalable'>",
    "optional": false
  },
  "metrics": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.Metric]]",
    "optional": true
  },
  "min_replicas": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "scale_down": {
    "type": "typing.Union[cdk8s_plus_25.ScalingRules, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "scale_up": {
    "type": "typing.Union[cdk8s_plus_25.ScalingRules, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ancestors": [
    "Resource",
    "Construct"
  ],
  "name": "HorizontalPodAutoscaler"
},
{
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "max_replicas": {
    "type": "typing.Union[int, float]",
    "optional": false
  },
  "target": {
    "type": "<class 'cdk8s_plus_25.IScalable'>",
    "optional": false
  },
  "metrics": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.Metric]]",
    "optional": true
  },
  "min_replicas": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "scale_down": {
    "type": "typing.Union[cdk8s_plus_25.ScalingRules, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "scale_up": {
    "type": "typing.Union[cdk8s_plus_25.ScalingRules, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ancestors": [
    "ResourceProps"
  ],
  "name": "HorizontalPodAutoscalerProps"
},
{
  "hostnames": {
    "type": "typing.Sequence[str]",
    "optional": false
  },
  "ip": {
    "type": "<class 'str'>",
    "optional": false
  },
  "ancestors": null,
  "name": "HostAlias"
},
{
  "path": {
    "type": "<class 'str'>",
    "optional": false
  },
  "type": {
    "type": "typing.Optional[ForwardRef('HostPathVolumeType')]",
    "optional": true
  },
  "ancestors": null,
  "name": "HostPathVolumeOptions"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwds": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "Enum"
  ],
  "name": "HostPathVolumeType"
},
{
  "failure_threshold": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "initial_delay_seconds": {
    "type": "typing.Optional[cdk8s.Duration]",
    "optional": true
  },
  "period_seconds": {
    "type": "typing.Optional[cdk8s.Duration]",
    "optional": true
  },
  "success_threshold": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "timeout_seconds": {
    "type": "typing.Optional[cdk8s.Duration]",
    "optional": true
  },
  "port": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "scheme": {
    "type": "typing.Optional[cdk8s_plus_25.ConnectionScheme]",
    "optional": true
  },
  "ancestors": [
    "ProbeOptions"
  ],
  "name": "HttpGetProbeOptions"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwds": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "Enum"
  ],
  "name": "HttpIngressPathType"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwargs": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "Protocol",
    "Generic"
  ],
  "name": "IApiEndpoint"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwargs": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "Protocol",
    "Generic"
  ],
  "name": "IApiResource"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwargs": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "IResource",
    "IConstruct",
    "IDependable",
    "IApiResource",
    "Protocol",
    "Generic"
  ],
  "name": "IClusterRole"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwargs": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "IResource",
    "IConstruct",
    "IDependable",
    "IApiResource",
    "Protocol",
    "Generic"
  ],
  "name": "IConfigMap"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwargs": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "IConstruct",
    "IDependable",
    "Protocol",
    "Generic"
  ],
  "name": "INamespaceSelector"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwargs": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "IConstruct",
    "IDependable",
    "Protocol",
    "Generic"
  ],
  "name": "INetworkPolicyPeer"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwargs": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "IResource",
    "IConstruct",
    "IDependable",
    "IApiResource",
    "Protocol",
    "Generic"
  ],
  "name": "IPersistentVolume"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwargs": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "IResource",
    "IConstruct",
    "IDependable",
    "IApiResource",
    "Protocol",
    "Generic"
  ],
  "name": "IPersistentVolumeClaim"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwargs": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "IConstruct",
    "IDependable",
    "Protocol",
    "Generic"
  ],
  "name": "IPodSelector"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwargs": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "IConstruct",
    "IDependable",
    "IApiResource",
    "Protocol",
    "Generic"
  ],
  "name": "IResource"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwargs": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "IResource",
    "IConstruct",
    "IDependable",
    "IApiResource",
    "Protocol",
    "Generic"
  ],
  "name": "IRole"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwargs": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "Protocol",
    "Generic"
  ],
  "name": "IScalable"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwargs": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "IResource",
    "IConstruct",
    "IDependable",
    "IApiResource",
    "Protocol",
    "Generic"
  ],
  "name": "ISecret"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwargs": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "IResource",
    "ISubject",
    "IConstruct",
    "IDependable",
    "IApiResource",
    "Protocol",
    "Generic"
  ],
  "name": "IServiceAccount"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwargs": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "IConstruct",
    "IDependable",
    "Protocol",
    "Generic"
  ],
  "name": "IStorage"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwargs": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "IConstruct",
    "IDependable",
    "Protocol",
    "Generic"
  ],
  "name": "ISubject"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwds": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "Enum"
  ],
  "name": "ImagePullPolicy"
},
{
  "scope": {
    "type": "<class 'constructs.Construct'>",
    "optional": false
  },
  "id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "default_backend": {
    "type": "typing.Optional[cdk8s_plus_25.IngressBackend]",
    "optional": true
  },
  "rules": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.IngressRule, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "tls": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.IngressTls, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ancestors": [
    "Resource",
    "Construct"
  ],
  "name": "Ingress"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwargs": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": null,
  "name": "IngressBackend"
},
{
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "default_backend": {
    "type": "typing.Optional[cdk8s_plus_25.IngressBackend]",
    "optional": true
  },
  "rules": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.IngressRule, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "tls": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.IngressTls, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "ancestors": [
    "ResourceProps"
  ],
  "name": "IngressProps"
},
{
  "backend": {
    "type": "<class 'cdk8s_plus_25.IngressBackend'>",
    "optional": false
  },
  "host": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "path": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "path_type": {
    "type": "typing.Optional[cdk8s_plus_25.HttpIngressPathType]",
    "optional": true
  },
  "ancestors": null,
  "name": "IngressRule"
},
{
  "hosts": {
    "type": "typing.Optional[typing.Sequence[str]]",
    "optional": true
  },
  "secret": {
    "type": "typing.Optional[cdk8s_plus_25.ISecret]",
    "optional": true
  },
  "ancestors": null,
  "name": "IngressTls"
},
{
  "scope": {
    "type": "<class 'constructs.Construct'>",
    "optional": false
  },
  "id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "active_deadline": {
    "type": "typing.Optional[cdk8s.Duration]",
    "optional": true
  },
  "backoff_limit": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "ttl_after_finished": {
    "type": "typing.Optional[cdk8s.Duration]",
    "optional": true
  },
  "pod_metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "select": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "spread": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "automount_service_account_token": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "containers": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ContainerProps, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "dns": {
    "type": "typing.Union[cdk8s_plus_25.PodDnsProps, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "docker_registry_auth": {
    "type": "typing.Optional[cdk8s_plus_25.ISecret]",
    "optional": true
  },
  "host_aliases": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.HostAlias, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "host_network": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "init_containers": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ContainerProps, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "isolate": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "restart_policy": {
    "type": "typing.Optional[cdk8s_plus_25.RestartPolicy]",
    "optional": true
  },
  "security_context": {
    "type": "typing.Union[cdk8s_plus_25.PodSecurityContextProps, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "service_account": {
    "type": "typing.Optional[cdk8s_plus_25.IServiceAccount]",
    "optional": true
  },
  "volumes": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.Volume]]",
    "optional": true
  },
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ancestors": [
    "Workload",
    "AbstractPod",
    "Resource",
    "Construct"
  ],
  "name": "Job"
},
{
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "automount_service_account_token": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "containers": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ContainerProps, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "dns": {
    "type": "typing.Union[cdk8s_plus_25.PodDnsProps, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "docker_registry_auth": {
    "type": "typing.Optional[cdk8s_plus_25.ISecret]",
    "optional": true
  },
  "host_aliases": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.HostAlias, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "host_network": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "init_containers": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ContainerProps, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "isolate": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "restart_policy": {
    "type": "typing.Optional[cdk8s_plus_25.RestartPolicy]",
    "optional": true
  },
  "security_context": {
    "type": "typing.Union[cdk8s_plus_25.PodSecurityContextProps, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "service_account": {
    "type": "typing.Optional[cdk8s_plus_25.IServiceAccount]",
    "optional": true
  },
  "volumes": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.Volume]]",
    "optional": true
  },
  "pod_metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "select": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "spread": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "active_deadline": {
    "type": "typing.Optional[cdk8s.Duration]",
    "optional": true
  },
  "backoff_limit": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "ttl_after_finished": {
    "type": "typing.Optional[cdk8s.Duration]",
    "optional": true
  },
  "ancestors": [
    "WorkloadProps",
    "AbstractPodProps",
    "ResourceProps"
  ],
  "name": "JobProps"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwargs": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": null,
  "name": "LabelExpression"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwargs": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": null,
  "name": "LabelSelector"
},
{
  "expressions": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.LabelExpression]]",
    "optional": true
  },
  "labels": {
    "type": "typing.Optional[typing.Mapping[str, str]]",
    "optional": true
  },
  "ancestors": null,
  "name": "LabelSelectorOptions"
},
{
  "key": {
    "type": "<class 'str'>",
    "optional": false
  },
  "operator": {
    "type": "<class 'str'>",
    "optional": false
  },
  "values": {
    "type": "typing.Optional[typing.Sequence[str]]",
    "optional": true
  },
  "ancestors": null,
  "name": "LabelSelectorRequirement"
},
{
  "label_selector": {
    "type": "typing.Sequence[ForwardRef('NodeLabelQuery')]",
    "optional": false
  },
  "ancestors": null,
  "name": "LabeledNode"
},
{
  "limit": {
    "type": "typing.Optional[cdk8s.Size]",
    "optional": true
  },
  "request": {
    "type": "typing.Optional[cdk8s.Size]",
    "optional": true
  },
  "ancestors": null,
  "name": "MemoryResources"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwargs": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": null,
  "name": "Metric"
},
{
  "container": {
    "type": "<class 'cdk8s_plus_25.Container'>",
    "optional": false
  },
  "target": {
    "type": "MetricTarget",
    "optional": false
  },
  "ancestors": null,
  "name": "MetricContainerResourceOptions"
},
{
  "name": "MetricObjectOptions",
  "target": {
    "type": "<class 'cdk8s_plus_25.MetricTarget'>",
    "optional": false
  },
  "label_selector": {
    "type": "typing.Optional[cdk8s_plus_25.LabelSelector]",
    "optional": true
  },
  "object": {
    "type": "<class 'cdk8s_plus_25.IResource'>",
    "optional": false
  },
  "ancestors": [
    "MetricOptions"
  ]
},
{
  "name": "MetricOptions",
  "target": {
    "type": "MetricTarget",
    "optional": false
  },
  "label_selector": {
    "type": "typing.Optional[cdk8s_plus_25.LabelSelector]",
    "optional": true
  },
  "ancestors": null
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwargs": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": null,
  "name": "MetricTarget"
},
{
  "propagation": {
    "type": "typing.Optional[ForwardRef('MountPropagation')]",
    "optional": true
  },
  "read_only": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "sub_path": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "sub_path_expr": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "ancestors": null,
  "name": "MountOptions"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwds": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "Enum"
  ],
  "name": "MountPropagation"
},
{
  "name": "NamedNode",
  "ancestors": null
},
{
  "scope": {
    "type": "<class 'constructs.Construct'>",
    "optional": false
  },
  "id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ancestors": [
    "Resource",
    "Construct"
  ],
  "name": "Namespace"
},
{
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ancestors": [
    "ResourceProps"
  ],
  "name": "NamespaceProps"
},
{
  "label_selector": {
    "type": "typing.Optional[cdk8s_plus_25.LabelSelector]",
    "optional": true
  },
  "names": {
    "type": "typing.Optional[typing.Sequence[str]]",
    "optional": true
  },
  "ancestors": null,
  "name": "NamespaceSelectorConfig"
},
{
  "scope": {
    "type": "<class 'constructs.Construct'>",
    "optional": false
  },
  "id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "expressions": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.LabelExpression]]",
    "optional": true
  },
  "names": {
    "type": "typing.Optional[typing.Sequence[str]]",
    "optional": true
  },
  "labels": {
    "type": "typing.Optional[typing.Mapping[str, str]]",
    "optional": true
  },
  "ancestors": [
    "Construct"
  ],
  "name": "Namespaces"
},
{
  "expressions": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.LabelExpression]]",
    "optional": true
  },
  "labels": {
    "type": "typing.Optional[typing.Mapping[str, str]]",
    "optional": true
  },
  "names": {
    "type": "typing.Optional[typing.Sequence[str]]",
    "optional": true
  },
  "ancestors": null,
  "name": "NamespacesSelectOptions"
},
{
  "scope": {
    "type": "<class 'constructs.Construct'>",
    "optional": false
  },
  "id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "egress": {
    "type": "typing.Union[cdk8s_plus_25.NetworkPolicyTraffic, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ingress": {
    "type": "typing.Union[cdk8s_plus_25.NetworkPolicyTraffic, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "selector": {
    "type": "typing.Optional[cdk8s_plus_25.IPodSelector]",
    "optional": true
  },
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ancestors": [
    "Resource",
    "Construct"
  ],
  "name": "NetworkPolicy"
},
{
  "ports": {
    "type": "typing.Optional[typing.Sequence[ForwardRef('NetworkPolicyPort')]]",
    "optional": true
  },
  "ancestors": null,
  "name": "NetworkPolicyAddEgressRuleOptions"
},
{
  "scope": {
    "type": "Construct",
    "optional": false
  },
  "id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "ancestors": [
    "Construct"
  ],
  "name": "NetworkPolicyIpBlock"
},
{
  "ip_block": {
    "type": "typing.Optional[cdk8s_plus_25.NetworkPolicyIpBlock]",
    "optional": true
  },
  "pod_selector": {
    "type": "typing.Union[ForwardRef('PodSelectorConfig'), typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ancestors": null,
  "name": "NetworkPolicyPeerConfig"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwargs": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": null,
  "name": "NetworkPolicyPort"
},
{
  "end_port": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "port": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "protocol": {
    "type": "typing.Optional[ForwardRef('NetworkProtocol')]",
    "optional": true
  },
  "ancestors": null,
  "name": "NetworkPolicyPortProps"
},
{
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "egress": {
    "type": "typing.Union[cdk8s_plus_25.NetworkPolicyTraffic, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ingress": {
    "type": "typing.Union[cdk8s_plus_25.NetworkPolicyTraffic, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "selector": {
    "type": "typing.Optional[cdk8s_plus_25.IPodSelector]",
    "optional": true
  },
  "ancestors": [
    "ResourceProps"
  ],
  "name": "NetworkPolicyProps"
},
{
  "peer": {
    "type": "<class 'cdk8s_plus_25.INetworkPolicyPeer'>",
    "optional": false
  },
  "ports": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.NetworkPolicyPort]]",
    "optional": true
  },
  "ancestors": null,
  "name": "NetworkPolicyRule"
},
{
  "default": {
    "type": "typing.Optional[ForwardRef('NetworkPolicyTrafficDefault')]",
    "optional": true
  },
  "rules": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.NetworkPolicyRule, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "ancestors": null,
  "name": "NetworkPolicyTraffic"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwds": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "Enum"
  ],
  "name": "NetworkPolicyTrafficDefault"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwds": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "Enum"
  ],
  "name": "NetworkProtocol"
},
{
  "ancestors": null,
  "name": "Node"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwargs": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": null,
  "name": "NodeLabelQuery"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwargs": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": null,
  "name": "NodeTaintQuery"
},
{
  "effect": {
    "type": "typing.Optional[ForwardRef('TaintEffect')]",
    "optional": true
  },
  "evict_after": {
    "type": "typing.Optional[cdk8s.Duration]",
    "optional": true
  },
  "ancestors": null,
  "name": "NodeTaintQueryOptions"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwargs": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": null,
  "name": "NonApiResource"
},
{
  "path": {
    "type": "<class 'str'>",
    "optional": false
  },
  "mode": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "ancestors": null,
  "name": "PathMapping"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwargs": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": null,
  "name": "PercentOrAbsolute"
},
{
  "scope": {
    "type": "<class 'constructs.Construct'>",
    "optional": false
  },
  "id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "access_modes": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.PersistentVolumeAccessMode]]",
    "optional": true
  },
  "claim": {
    "type": "typing.Optional[cdk8s_plus_25.IPersistentVolumeClaim]",
    "optional": true
  },
  "mount_options": {
    "type": "typing.Optional[typing.Sequence[str]]",
    "optional": true
  },
  "reclaim_policy": {
    "type": "typing.Optional[cdk8s_plus_25.PersistentVolumeReclaimPolicy]",
    "optional": true
  },
  "storage": {
    "type": "typing.Optional[cdk8s.Size]",
    "optional": true
  },
  "storage_class_name": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "volume_mode": {
    "type": "typing.Optional[cdk8s_plus_25.PersistentVolumeMode]",
    "optional": true
  },
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ancestors": [
    "Resource",
    "Construct"
  ],
  "name": "PersistentVolume"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwds": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "Enum"
  ],
  "name": "PersistentVolumeAccessMode"
},
{
  "scope": {
    "type": "<class 'constructs.Construct'>",
    "optional": false
  },
  "id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "access_modes": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.PersistentVolumeAccessMode]]",
    "optional": true
  },
  "storage": {
    "type": "typing.Optional[cdk8s.Size]",
    "optional": true
  },
  "storage_class_name": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "volume": {
    "type": "typing.Optional[cdk8s_plus_25.IPersistentVolume]",
    "optional": true
  },
  "volume_mode": {
    "type": "typing.Optional[cdk8s_plus_25.PersistentVolumeMode]",
    "optional": true
  },
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ancestors": [
    "Resource",
    "Construct"
  ],
  "name": "PersistentVolumeClaim"
},
{
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "access_modes": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.PersistentVolumeAccessMode]]",
    "optional": true
  },
  "storage": {
    "type": "typing.Optional[cdk8s.Size]",
    "optional": true
  },
  "storage_class_name": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "volume": {
    "type": "typing.Optional[cdk8s_plus_25.IPersistentVolume]",
    "optional": true
  },
  "volume_mode": {
    "type": "typing.Optional[cdk8s_plus_25.PersistentVolumeMode]",
    "optional": true
  },
  "ancestors": [
    "ResourceProps"
  ],
  "name": "PersistentVolumeClaimProps"
},
{
  "name": "PersistentVolumeClaimVolumeOptions",
  "read_only": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "ancestors": null
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwds": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "Enum"
  ],
  "name": "PersistentVolumeMode"
},
{
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "access_modes": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.PersistentVolumeAccessMode]]",
    "optional": true
  },
  "claim": {
    "type": "typing.Optional[cdk8s_plus_25.IPersistentVolumeClaim]",
    "optional": true
  },
  "mount_options": {
    "type": "typing.Optional[typing.Sequence[str]]",
    "optional": true
  },
  "reclaim_policy": {
    "type": "typing.Optional[cdk8s_plus_25.PersistentVolumeReclaimPolicy]",
    "optional": true
  },
  "storage": {
    "type": "typing.Optional[cdk8s.Size]",
    "optional": true
  },
  "storage_class_name": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "volume_mode": {
    "type": "typing.Optional[cdk8s_plus_25.PersistentVolumeMode]",
    "optional": true
  },
  "ancestors": [
    "ResourceProps"
  ],
  "name": "PersistentVolumeProps"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwds": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "Enum"
  ],
  "name": "PersistentVolumeReclaimPolicy"
},
{
  "scope": {
    "type": "<class 'constructs.Construct'>",
    "optional": false
  },
  "id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "automount_service_account_token": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "containers": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ContainerProps, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "dns": {
    "type": "typing.Union[cdk8s_plus_25.PodDnsProps, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "docker_registry_auth": {
    "type": "typing.Optional[cdk8s_plus_25.ISecret]",
    "optional": true
  },
  "host_aliases": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.HostAlias, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "host_network": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "init_containers": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ContainerProps, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "isolate": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "restart_policy": {
    "type": "typing.Optional[cdk8s_plus_25.RestartPolicy]",
    "optional": true
  },
  "security_context": {
    "type": "typing.Union[cdk8s_plus_25.PodSecurityContextProps, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "service_account": {
    "type": "typing.Optional[cdk8s_plus_25.IServiceAccount]",
    "optional": true
  },
  "volumes": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.Volume]]",
    "optional": true
  },
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ancestors": [
    "AbstractPod",
    "Resource",
    "Construct"
  ],
  "name": "Pod"
},
{
  "instance": {
    "type": "AbstractPod",
    "optional": false
  },
  "ancestors": null,
  "name": "PodConnections"
},
{
  "isolation": {
    "type": "typing.Optional[ForwardRef('PodConnectionsIsolation')]",
    "optional": true
  },
  "ports": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.NetworkPolicyPort]]",
    "optional": true
  },
  "ancestors": null,
  "name": "PodConnectionsAllowFromOptions"
},
{
  "isolation": {
    "type": "typing.Optional[ForwardRef('PodConnectionsIsolation')]",
    "optional": true
  },
  "ports": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.NetworkPolicyPort]]",
    "optional": true
  },
  "ancestors": null,
  "name": "PodConnectionsAllowToOptions"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwds": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "Enum"
  ],
  "name": "PodConnectionsIsolation"
},
{
  "hostname": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "hostname_as_fqdn": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "nameservers": {
    "type": "typing.Optional[typing.Sequence[str]]",
    "optional": true
  },
  "options": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.DnsOption, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "policy": {
    "type": "typing.Optional[cdk8s_plus_25.DnsPolicy]",
    "optional": true
  },
  "searches": {
    "type": "typing.Optional[typing.Sequence[str]]",
    "optional": true
  },
  "subdomain": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "ancestors": null,
  "name": "PodDns"
},
{
  "hostname": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "hostname_as_fqdn": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "nameservers": {
    "type": "typing.Optional[typing.Sequence[str]]",
    "optional": true
  },
  "options": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.DnsOption, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "policy": {
    "type": "typing.Optional[cdk8s_plus_25.DnsPolicy]",
    "optional": true
  },
  "searches": {
    "type": "typing.Optional[typing.Sequence[str]]",
    "optional": true
  },
  "subdomain": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "ancestors": null,
  "name": "PodDnsProps"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwds": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "Enum"
  ],
  "name": "PodManagementPolicy"
},
{
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "automount_service_account_token": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "containers": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ContainerProps, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "dns": {
    "type": "typing.Union[cdk8s_plus_25.PodDnsProps, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "docker_registry_auth": {
    "type": "typing.Optional[cdk8s_plus_25.ISecret]",
    "optional": true
  },
  "host_aliases": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.HostAlias, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "host_network": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "init_containers": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ContainerProps, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "isolate": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "restart_policy": {
    "type": "typing.Optional[cdk8s_plus_25.RestartPolicy]",
    "optional": true
  },
  "security_context": {
    "type": "typing.Union[cdk8s_plus_25.PodSecurityContextProps, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "service_account": {
    "type": "typing.Optional[cdk8s_plus_25.IServiceAccount]",
    "optional": true
  },
  "volumes": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.Volume]]",
    "optional": true
  },
  "ancestors": [
    "AbstractPodProps",
    "ResourceProps"
  ],
  "name": "PodProps"
},
{
  "instance": {
    "type": "AbstractPod",
    "optional": false
  },
  "ancestors": null,
  "name": "PodScheduling"
},
{
  "weight": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "ancestors": null,
  "name": "PodSchedulingAttractOptions"
},
{
  "topology": {
    "type": "typing.Optional[ForwardRef('Topology')]",
    "optional": true
  },
  "weight": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "ancestors": null,
  "name": "PodSchedulingColocateOptions"
},
{
  "topology": {
    "type": "typing.Optional[ForwardRef('Topology')]",
    "optional": true
  },
  "weight": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "ancestors": null,
  "name": "PodSchedulingSeparateOptions"
},
{
  "ensure_non_root": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "fs_group": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "fs_group_change_policy": {
    "type": "typing.Optional[cdk8s_plus_25.FsGroupChangePolicy]",
    "optional": true
  },
  "group": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "sysctls": {
    "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('Sysctl'), typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "user": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "ancestors": null,
  "name": "PodSecurityContext"
},
{
  "ensure_non_root": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "fs_group": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "fs_group_change_policy": {
    "type": "typing.Optional[cdk8s_plus_25.FsGroupChangePolicy]",
    "optional": true
  },
  "group": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "sysctls": {
    "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('Sysctl'), typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "user": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "ancestors": null,
  "name": "PodSecurityContextProps"
},
{
  "label_selector": {
    "type": "<class 'cdk8s_plus_25.LabelSelector'>",
    "optional": false
  },
  "namespaces": {
    "type": "typing.Union[cdk8s_plus_25.NamespaceSelectorConfig, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ancestors": null,
  "name": "PodSelectorConfig"
},
{
  "scope": {
    "type": "<class 'constructs.Construct'>",
    "optional": false
  },
  "id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "expressions": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.LabelExpression]]",
    "optional": true
  },
  "labels": {
    "type": "typing.Optional[typing.Mapping[str, str]]",
    "optional": true
  },
  "namespaces": {
    "type": "typing.Optional[cdk8s_plus_25.INamespaceSelector]",
    "optional": true
  },
  "ancestors": [
    "Construct"
  ],
  "name": "Pods"
},
{
  "namespaces": {
    "type": "typing.Optional[cdk8s_plus_25.Namespaces]",
    "optional": true
  },
  "ancestors": null,
  "name": "PodsAllOptions"
},
{
  "expressions": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.LabelExpression]]",
    "optional": true
  },
  "labels": {
    "type": "typing.Optional[typing.Mapping[str, str]]",
    "optional": true
  },
  "namespaces": {
    "type": "typing.Optional[cdk8s_plus_25.Namespaces]",
    "optional": true
  },
  "ancestors": null,
  "name": "PodsSelectOptions"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwargs": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": null,
  "name": "Probe"
},
{
  "failure_threshold": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "initial_delay_seconds": {
    "type": "typing.Optional[cdk8s.Duration]",
    "optional": true
  },
  "period_seconds": {
    "type": "typing.Optional[cdk8s.Duration]",
    "optional": true
  },
  "success_threshold": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "timeout_seconds": {
    "type": "typing.Optional[cdk8s.Duration]",
    "optional": true
  },
  "ancestors": null,
  "name": "ProbeOptions"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwds": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "Enum"
  ],
  "name": "Protocol"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwargs": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": null,
  "name": "Replicas"
},
{
  "scope": {
    "type": "<class 'constructs.Construct'>",
    "optional": false
  },
  "id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "ancestors": [
    "Construct"
  ],
  "name": "Resource"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwds": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "Enum"
  ],
  "name": "ResourceFieldPaths"
},
{
  "instance": {
    "type": "<class 'cdk8s_plus_25.Resource'>",
    "optional": false
  },
  "ancestors": null,
  "name": "ResourcePermissions"
},
{
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ancestors": null,
  "name": "ResourceProps"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwds": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "Enum"
  ],
  "name": "RestartPolicy"
},
{
  "scope": {
    "type": "<class 'constructs.Construct'>",
    "optional": false
  },
  "id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "rules": {
    "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('RolePolicyRule'), typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ancestors": [
    "Resource",
    "Construct"
  ],
  "name": "Role"
},
{
  "scope": {
    "type": "<class 'constructs.Construct'>",
    "optional": false
  },
  "id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "role": {
    "type": "<class 'cdk8s_plus_25.IRole'>",
    "optional": false
  },
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ancestors": [
    "Resource",
    "Construct"
  ],
  "name": "RoleBinding"
},
{
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "role": {
    "type": "<class 'cdk8s_plus_25.IRole'>",
    "optional": false
  },
  "ancestors": [
    "ResourceProps"
  ],
  "name": "RoleBindingProps"
},
{
  "resources": {
    "type": "typing.Sequence[cdk8s_plus_25.IApiResource]",
    "optional": false
  },
  "verbs": {
    "type": "typing.Sequence[str]",
    "optional": false
  },
  "ancestors": null,
  "name": "RolePolicyRule"
},
{
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "rules": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.RolePolicyRule, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "ancestors": [
    "ResourceProps"
  ],
  "name": "RoleProps"
},
{
  "replicas": {
    "type": "<class 'cdk8s_plus_25.Replicas'>",
    "optional": false
  },
  "duration": {
    "type": "typing.Optional[cdk8s.Duration]",
    "optional": true
  },
  "ancestors": null,
  "name": "ScalingPolicy"
},
{
  "policies": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ScalingPolicy, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "stabilization_window": {
    "type": "typing.Optional[cdk8s.Duration]",
    "optional": true
  },
  "strategy": {
    "type": "typing.Optional[ForwardRef('ScalingStrategy')]",
    "optional": true
  },
  "ancestors": null,
  "name": "ScalingRules"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwds": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "Enum"
  ],
  "name": "ScalingStrategy"
},
{
  "api_version": {
    "type": "<class 'str'>",
    "optional": false
  },
  "containers": {
    "type": "typing.Sequence[cdk8s_plus_25.Container]",
    "optional": false
  },
  "kind": {
    "type": "<class 'str'>",
    "optional": false
  },
  "name": "ScalingTarget",
  "replicas": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "ancestors": null
},
{
  "scope": {
    "type": "<class 'constructs.Construct'>",
    "optional": false
  },
  "id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "string_data": {
    "type": "typing.Optional[typing.Mapping[str, str]]",
    "optional": true
  },
  "type": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "immutable": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ancestors": [
    "Resource",
    "Construct"
  ],
  "name": "Secret"
},
{
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "immutable": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "string_data": {
    "type": "typing.Optional[typing.Mapping[str, str]]",
    "optional": true
  },
  "type": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "ancestors": [
    "CommonSecretProps",
    "ResourceProps"
  ],
  "name": "SecretProps"
},
{
  "key": {
    "type": "<class 'str'>",
    "optional": false
  },
  "secret": {
    "type": "<class 'cdk8s_plus_25.ISecret'>",
    "optional": false
  },
  "ancestors": null,
  "name": "SecretValue"
},
{
  "default_mode": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "items": {
    "type": "typing.Optional[typing.Mapping[str, typing.Union[cdk8s_plus_25.PathMapping, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "name": "SecretVolumeOptions",
  "optional": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "ancestors": null
},
{
  "scope": {
    "type": "<class 'constructs.Construct'>",
    "optional": false
  },
  "id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "cluster_ip": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "external_i_ps": {
    "type": "typing.Optional[typing.Sequence[str]]",
    "optional": true
  },
  "external_name": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "load_balancer_source_ranges": {
    "type": "typing.Optional[typing.Sequence[str]]",
    "optional": true
  },
  "ports": {
    "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('ServicePort'), typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "selector": {
    "type": "typing.Optional[cdk8s_plus_25.IPodSelector]",
    "optional": true
  },
  "type": {
    "type": "typing.Optional[ForwardRef('ServiceType')]",
    "optional": true
  },
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ancestors": [
    "Resource",
    "Construct"
  ],
  "name": "Service"
},
{
  "scope": {
    "type": "<class 'constructs.Construct'>",
    "optional": false
  },
  "id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "automount_token": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "secrets": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.ISecret]]",
    "optional": true
  },
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ancestors": [
    "Resource",
    "Construct"
  ],
  "name": "ServiceAccount"
},
{
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "automount_token": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "secrets": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.ISecret]]",
    "optional": true
  },
  "ancestors": [
    "ResourceProps"
  ],
  "name": "ServiceAccountProps"
},
{
  "scope": {
    "type": "<class 'constructs.Construct'>",
    "optional": false
  },
  "id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "service_account": {
    "type": "IServiceAccount",
    "optional": false
  },
  "immutable": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ancestors": [
    "Secret",
    "Resource",
    "Construct"
  ],
  "name": "ServiceAccountTokenSecret"
},
{
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "immutable": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "service_account": {
    "type": "<class 'cdk8s_plus_25.IServiceAccount'>",
    "optional": false
  },
  "ancestors": [
    "CommonSecretProps",
    "ResourceProps"
  ],
  "name": "ServiceAccountTokenSecretProps"
},
{
  "name": "ServiceBindOptions",
  "node_port": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "protocol": {
    "type": "typing.Optional[cdk8s_plus_25.Protocol]",
    "optional": true
  },
  "target_port": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "ancestors": null
},
{
  "port": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "ancestors": null,
  "name": "ServiceIngressBackendOptions"
},
{
  "name": "ServicePort",
  "node_port": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "protocol": {
    "type": "typing.Optional[cdk8s_plus_25.Protocol]",
    "optional": true
  },
  "target_port": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "port": {
    "type": "typing.Union[int, float]",
    "optional": false
  },
  "ancestors": [
    "ServiceBindOptions"
  ]
},
{
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "cluster_ip": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "external_i_ps": {
    "type": "typing.Optional[typing.Sequence[str]]",
    "optional": true
  },
  "external_name": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "load_balancer_source_ranges": {
    "type": "typing.Optional[typing.Sequence[str]]",
    "optional": true
  },
  "ports": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ServicePort, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "selector": {
    "type": "typing.Optional[cdk8s_plus_25.IPodSelector]",
    "optional": true
  },
  "type": {
    "type": "typing.Optional[ForwardRef('ServiceType')]",
    "optional": true
  },
  "ancestors": [
    "ResourceProps"
  ],
  "name": "ServiceProps"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwds": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "Enum"
  ],
  "name": "ServiceType"
},
{
  "scope": {
    "type": "<class 'constructs.Construct'>",
    "optional": false
  },
  "id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "ssh_private_key": {
    "type": "<class 'str'>",
    "optional": false
  },
  "immutable": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ancestors": [
    "Secret",
    "Resource",
    "Construct"
  ],
  "name": "SshAuthSecret"
},
{
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "immutable": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "ssh_private_key": {
    "type": "<class 'str'>",
    "optional": false
  },
  "ancestors": [
    "CommonSecretProps",
    "ResourceProps"
  ],
  "name": "SshAuthSecretProps"
},
{
  "scope": {
    "type": "<class 'constructs.Construct'>",
    "optional": false
  },
  "id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "min_ready": {
    "type": "typing.Optional[cdk8s.Duration]",
    "optional": true
  },
  "pod_management_policy": {
    "type": "typing.Optional[cdk8s_plus_25.PodManagementPolicy]",
    "optional": true
  },
  "replicas": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "service": {
    "type": "typing.Optional[cdk8s_plus_25.Service]",
    "optional": true
  },
  "strategy": {
    "type": "typing.Optional[cdk8s_plus_25.StatefulSetUpdateStrategy]",
    "optional": true
  },
  "pod_metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "select": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "spread": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "automount_service_account_token": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "containers": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ContainerProps, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "dns": {
    "type": "typing.Union[cdk8s_plus_25.PodDnsProps, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "docker_registry_auth": {
    "type": "typing.Optional[cdk8s_plus_25.ISecret]",
    "optional": true
  },
  "host_aliases": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.HostAlias, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "host_network": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "init_containers": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ContainerProps, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "isolate": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "restart_policy": {
    "type": "typing.Optional[cdk8s_plus_25.RestartPolicy]",
    "optional": true
  },
  "security_context": {
    "type": "typing.Union[cdk8s_plus_25.PodSecurityContextProps, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "service_account": {
    "type": "typing.Optional[cdk8s_plus_25.IServiceAccount]",
    "optional": true
  },
  "volumes": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.Volume]]",
    "optional": true
  },
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ancestors": [
    "Workload",
    "AbstractPod",
    "Resource",
    "Construct"
  ],
  "name": "StatefulSet"
},
{
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "automount_service_account_token": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "containers": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ContainerProps, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "dns": {
    "type": "typing.Union[cdk8s_plus_25.PodDnsProps, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "docker_registry_auth": {
    "type": "typing.Optional[cdk8s_plus_25.ISecret]",
    "optional": true
  },
  "host_aliases": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.HostAlias, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "host_network": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "init_containers": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ContainerProps, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "isolate": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "restart_policy": {
    "type": "typing.Optional[cdk8s_plus_25.RestartPolicy]",
    "optional": true
  },
  "security_context": {
    "type": "typing.Union[cdk8s_plus_25.PodSecurityContextProps, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "service_account": {
    "type": "typing.Optional[cdk8s_plus_25.IServiceAccount]",
    "optional": true
  },
  "volumes": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.Volume]]",
    "optional": true
  },
  "pod_metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "select": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "spread": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "min_ready": {
    "type": "typing.Optional[cdk8s.Duration]",
    "optional": true
  },
  "pod_management_policy": {
    "type": "typing.Optional[cdk8s_plus_25.PodManagementPolicy]",
    "optional": true
  },
  "replicas": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "service": {
    "type": "typing.Optional[cdk8s_plus_25.Service]",
    "optional": true
  },
  "strategy": {
    "type": "typing.Optional[cdk8s_plus_25.StatefulSetUpdateStrategy]",
    "optional": true
  },
  "ancestors": [
    "WorkloadProps",
    "AbstractPodProps",
    "ResourceProps"
  ],
  "name": "StatefulSetProps"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwargs": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": null,
  "name": "StatefulSetUpdateStrategy"
},
{
  "partition": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "ancestors": null,
  "name": "StatefulSetUpdateStrategyRollingUpdateOptions"
},
{
  "kind": {
    "type": "<class 'str'>",
    "optional": false
  },
  "name": "SubjectConfiguration",
  "api_group": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "namespace": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "ancestors": null
},
{
  "name": "Sysctl",
  "value": {
    "type": "<class 'str'>",
    "optional": false
  },
  "ancestors": null
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwds": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": [
    "Enum"
  ],
  "name": "TaintEffect"
},
{
  "taint_selector": {
    "type": "typing.Sequence[cdk8s_plus_25.NodeTaintQuery]",
    "optional": false
  },
  "ancestors": null,
  "name": "TaintedNode"
},
{
  "failure_threshold": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "initial_delay_seconds": {
    "type": "typing.Optional[cdk8s.Duration]",
    "optional": true
  },
  "period_seconds": {
    "type": "typing.Optional[cdk8s.Duration]",
    "optional": true
  },
  "success_threshold": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "timeout_seconds": {
    "type": "typing.Optional[cdk8s.Duration]",
    "optional": true
  },
  "host": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "port": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "ancestors": [
    "ProbeOptions"
  ],
  "name": "TcpSocketProbeOptions"
},
{
  "scope": {
    "type": "<class 'constructs.Construct'>",
    "optional": false
  },
  "id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "tls_cert": {
    "type": "<class 'str'>",
    "optional": false
  },
  "tls_key": {
    "type": "<class 'str'>",
    "optional": false
  },
  "immutable": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ancestors": [
    "Secret",
    "Resource",
    "Construct"
  ],
  "name": "TlsSecret"
},
{
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "immutable": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "tls_cert": {
    "type": "<class 'str'>",
    "optional": false
  },
  "tls_key": {
    "type": "<class 'str'>",
    "optional": false
  },
  "ancestors": [
    "CommonSecretProps",
    "ResourceProps"
  ],
  "name": "TlsSecretProps"
},
{
  "args": {
    "type": "No type annotation",
    "optional": false
  },
  "kwargs": {
    "type": "No type annotation",
    "optional": false
  },
  "ancestors": null,
  "name": "Topology"
},
{
  "scope": {
    "type": "Construct",
    "optional": false
  },
  "id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "ancestors": [
    "Construct"
  ],
  "name": "User"
},
{
  "scope": {
    "type": "Construct",
    "optional": false
  },
  "id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "ancestors": [
    "Construct"
  ],
  "name": "Volume"
},
{
  "propagation": {
    "type": "typing.Optional[cdk8s_plus_25.MountPropagation]",
    "optional": true
  },
  "read_only": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "sub_path": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "sub_path_expr": {
    "type": "typing.Optional[str]",
    "optional": true
  },
  "path": {
    "type": "<class 'str'>",
    "optional": false
  },
  "volume": {
    "type": "<class 'cdk8s_plus_25.Volume'>",
    "optional": false
  },
  "ancestors": [
    "MountOptions"
  ],
  "name": "VolumeMount"
},
{
  "scope": {
    "type": "<class 'constructs.Construct'>",
    "optional": false
  },
  "id": {
    "type": "<class 'str'>",
    "optional": false
  },
  "pod_metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "select": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "spread": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "automount_service_account_token": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "containers": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ContainerProps, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "dns": {
    "type": "typing.Union[cdk8s_plus_25.PodDnsProps, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "docker_registry_auth": {
    "type": "typing.Optional[cdk8s_plus_25.ISecret]",
    "optional": true
  },
  "host_aliases": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.HostAlias, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "host_network": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "init_containers": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ContainerProps, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "isolate": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "restart_policy": {
    "type": "typing.Optional[cdk8s_plus_25.RestartPolicy]",
    "optional": true
  },
  "security_context": {
    "type": "typing.Union[cdk8s_plus_25.PodSecurityContextProps, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "service_account": {
    "type": "typing.Optional[cdk8s_plus_25.IServiceAccount]",
    "optional": true
  },
  "volumes": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.Volume]]",
    "optional": true
  },
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "ancestors": [
    "AbstractPod",
    "Resource",
    "Construct"
  ],
  "name": "Workload"
},
{
  "metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "automount_service_account_token": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "containers": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ContainerProps, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "dns": {
    "type": "typing.Union[cdk8s_plus_25.PodDnsProps, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "docker_registry_auth": {
    "type": "typing.Optional[cdk8s_plus_25.ISecret]",
    "optional": true
  },
  "host_aliases": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.HostAlias, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "host_network": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "init_containers": {
    "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.ContainerProps, typing.Dict[str, typing.Any]]]]",
    "optional": true
  },
  "isolate": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "restart_policy": {
    "type": "typing.Optional[cdk8s_plus_25.RestartPolicy]",
    "optional": true
  },
  "security_context": {
    "type": "typing.Union[cdk8s_plus_25.PodSecurityContextProps, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "service_account": {
    "type": "typing.Optional[cdk8s_plus_25.IServiceAccount]",
    "optional": true
  },
  "volumes": {
    "type": "typing.Optional[typing.Sequence[cdk8s_plus_25.Volume]]",
    "optional": true
  },
  "pod_metadata": {
    "type": "typing.Union[cdk8s.ApiObjectMetadata, typing.Dict[str, typing.Any], NoneType]",
    "optional": true
  },
  "select": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "spread": {
    "type": "typing.Optional[bool]",
    "optional": true
  },
  "ancestors": [
    "AbstractPodProps",
    "ResourceProps"
  ],
  "name": "WorkloadProps"
},
{
  "instance": {
    "type": "AbstractPod",
    "optional": false
  },
  "ancestors": [
    "PodScheduling"
  ],
  "name": "WorkloadScheduling"
},
{
  "topology": {
    "type": "typing.Optional[cdk8s_plus_25.Topology]",
    "optional": true
  },
  "weight": {
    "type": "typing.Union[int, float, NoneType]",
    "optional": true
  },
  "ancestors": null,
  "name": "WorkloadSchedulingSpreadOptions"
}
]
