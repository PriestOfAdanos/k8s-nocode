[
  {
    "node_affinity": {
      "type": "typing.Union[ForwardRef('NodeAffinity'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "pod_affinity": {
      "type": "typing.Union[ForwardRef('PodAffinity'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "pod_anti_affinity": {
      "type": "typing.Union[ForwardRef('PodAntiAffinity'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "Affinity"
  },
  {
    "cluster_role_selectors": {
      "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('LabelSelector'), typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "ancestors": null,
    "name": "AggregationRule"
  },
  {
    "group_priority_minimum": {
      "type": "typing.Union[int, float]",
      "optional": false
    },
    "version_priority": {
      "type": "typing.Union[int, float]",
      "optional": false
    },
    "ca_bundle": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "group": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "insecure_skip_tls_verify": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "service": {
      "type": "typing.Union[ForwardRef('ServiceReference'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "version": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null,
    "name": "ApiServiceSpec"
  },
  {
    "volume_id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "fs_type": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "partition": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "read_only": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "ancestors": null,
    "name": "AwsElasticBlockStoreVolumeSource"
  },
  {
    "disk_name": {
      "type": "<class 'str'>",
      "optional": false
    },
    "disk_uri": {
      "type": "<class 'str'>",
      "optional": false
    },
    "caching_mode": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "fs_type": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "kind": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "read_only": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "ancestors": null,
    "name": "AzureDiskVolumeSource"
  },
  {
    "secret_name": {
      "type": "<class 'str'>",
      "optional": false
    },
    "share_name": {
      "type": "<class 'str'>",
      "optional": false
    },
    "read_only": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "secret_namespace": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null,
    "name": "AzureFilePersistentVolumeSource"
  },
  {
    "secret_name": {
      "type": "<class 'str'>",
      "optional": false
    },
    "share_name": {
      "type": "<class 'str'>",
      "optional": false
    },
    "read_only": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "ancestors": null,
    "name": "AzureFileVolumeSource"
  },
  {
    "api_version": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "kind": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "name": "BoundObjectReference",
    "uid": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null
  },
  {
    "add": {
      "type": "typing.Optional[typing.Sequence[str]]",
      "optional": true
    },
    "drop": {
      "type": "typing.Optional[typing.Sequence[str]]",
      "optional": true
    },
    "ancestors": null,
    "name": "Capabilities"
  },
  {
    "monitors": {
      "type": "typing.Sequence[str]",
      "optional": false
    },
    "path": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "read_only": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "secret_file": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "secret_ref": {
      "type": "typing.Union[ForwardRef('SecretReference'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "user": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null,
    "name": "CephFsPersistentVolumeSource"
  },
  {
    "monitors": {
      "type": "typing.Sequence[str]",
      "optional": false
    },
    "path": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "read_only": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "secret_file": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "secret_ref": {
      "type": "typing.Union[ForwardRef('LocalObjectReference'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "user": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null,
    "name": "CephFsVolumeSource"
  },
  {
    "request": {
      "type": "<class 'str'>",
      "optional": false
    },
    "signer_name": {
      "type": "<class 'str'>",
      "optional": false
    },
    "expiration_seconds": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "extra": {
      "type": "typing.Optional[typing.Mapping[str, typing.Sequence[str]]]",
      "optional": true
    },
    "groups": {
      "type": "typing.Optional[typing.Sequence[str]]",
      "optional": true
    },
    "uid": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "usages": {
      "type": "typing.Optional[typing.Sequence[str]]",
      "optional": true
    },
    "username": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null,
    "name": "CertificateSigningRequestSpec"
  },
  {
    "volume_id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "fs_type": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "read_only": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "secret_ref": {
      "type": "typing.Union[ForwardRef('SecretReference'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "CinderPersistentVolumeSource"
  },
  {
    "volume_id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "fs_type": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "read_only": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "secret_ref": {
      "type": "typing.Union[ForwardRef('LocalObjectReference'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "CinderVolumeSource"
  },
  {
    "timeout_seconds": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "ClientIpConfig"
  },
  {
    "per_node_host_bits": {
      "type": "typing.Union[int, float]",
      "optional": false
    },
    "ipv4": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ipv6": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "node_selector": {
      "type": "typing.Union[ForwardRef('NodeSelector'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "ClusterCidrSpecV1Alpha1"
  },
  {
    "status": {
      "type": "<class 'str'>",
      "optional": false
    },
    "type": {
      "type": "<class 'str'>",
      "optional": false
    },
    "error": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "message": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null,
    "name": "ComponentCondition"
  },
  {
    "name": "ConfigMapEnvSource",
    "optional": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "ancestors": null
  },
  {
    "key": {
      "type": "<class 'str'>",
      "optional": false
    },
    "name": "ConfigMapKeySelector",
    "optional": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "ancestors": null
  },
  {
    "kubelet_config_key": {
      "type": "<class 'str'>",
      "optional": false
    },
    "name": "ConfigMapNodeConfigSource",
    "namespace": {
      "type": "<class 'str'>",
      "optional": false
    },
    "resource_version": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "uid": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null
  },
  {
    "items": {
      "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('KeyToPath'), typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "name": "ConfigMapProjection",
    "optional": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "ancestors": null
  },
  {
    "default_mode": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "items": {
      "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('KeyToPath'), typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "name": "ConfigMapVolumeSource",
    "optional": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "ancestors": null
  },
  {
    "name": "Container",
    "args": {
      "type": "typing.Optional[typing.Sequence[str]]",
      "optional": true
    },
    "command": {
      "type": "typing.Optional[typing.Sequence[str]]",
      "optional": true
    },
    "env": {
      "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('EnvVar'), typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "env_from": {
      "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('EnvFromSource'), typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "image": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "image_pull_policy": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "lifecycle": {
      "type": "typing.Union[ForwardRef('Lifecycle'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "liveness_probe": {
      "type": "typing.Union[ForwardRef('Probe'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ports": {
      "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('ContainerPort'), typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "readiness_probe": {
      "type": "typing.Union[ForwardRef('Probe'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "resources": {
      "type": "typing.Union[ForwardRef('ResourceRequirements'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "security_context": {
      "type": "typing.Union[ForwardRef('SecurityContext'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "startup_probe": {
      "type": "typing.Union[ForwardRef('Probe'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "stdin": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "stdin_once": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "termination_message_path": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "termination_message_policy": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "tty": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "volume_devices": {
      "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('VolumeDevice'), typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "volume_mounts": {
      "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('VolumeMount'), typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "working_dir": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null
  },
  {
    "container_port": {
      "type": "typing.Union[int, float]",
      "optional": false
    },
    "host_ip": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "host_port": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "name": "ContainerPort",
    "protocol": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null
  },
  {
    "container": {
      "type": "<class 'str'>",
      "optional": false
    },
    "name": "ContainerResourceMetricSourceV2",
    "target": {
      "type": "typing.Union[ForwardRef('MetricTargetV2'), typing.Dict[str, typing.Any]]",
      "optional": false
    },
    "ancestors": null
  },
  {
    "container": {
      "type": "<class 'str'>",
      "optional": false
    },
    "name": "ContainerResourceMetricSourceV2Beta2",
    "target": {
      "type": "typing.Union[ForwardRef('MetricTargetV2Beta2'), typing.Dict[str, typing.Any]]",
      "optional": false
    },
    "ancestors": null
  },
  {
    "job_template": {
      "type": "typing.Union[ForwardRef('JobTemplateSpec'), typing.Dict[str, typing.Any]]",
      "optional": false
    },
    "schedule": {
      "type": "<class 'str'>",
      "optional": false
    },
    "concurrency_policy": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "failed_jobs_history_limit": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "starting_deadline_seconds": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "successful_jobs_history_limit": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "suspend": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "time_zone": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null,
    "name": "CronJobSpec"
  },
  {
    "kind": {
      "type": "<class 'str'>",
      "optional": false
    },
    "name": "CrossVersionObjectReference",
    "api_version": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null
  },
  {
    "kind": {
      "type": "<class 'str'>",
      "optional": false
    },
    "name": "CrossVersionObjectReferenceV2",
    "api_version": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null
  },
  {
    "kind": {
      "type": "<class 'str'>",
      "optional": false
    },
    "name": "CrossVersionObjectReferenceV2Beta2",
    "api_version": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null
  },
  {
    "attach_required": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "fs_group_policy": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "pod_info_on_mount": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "requires_republish": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "se_linux_mount": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "storage_capacity": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "token_requests": {
      "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('TokenRequest'), typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "volume_lifecycle_modes": {
      "type": "typing.Optional[typing.Sequence[str]]",
      "optional": true
    },
    "ancestors": null,
    "name": "CsiDriverSpec"
  },
  {
    "name": "CsiNodeDriver",
    "node_id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "allocatable": {
      "type": "typing.Union[ForwardRef('VolumeNodeResources'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "topology_keys": {
      "type": "typing.Optional[typing.Sequence[str]]",
      "optional": true
    },
    "ancestors": null
  },
  {
    "drivers": {
      "type": "typing.Sequence[typing.Union[cdk8s_plus_25.k8s.CsiNodeDriver, typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "ancestors": null,
    "name": "CsiNodeSpec"
  },
  {
    "driver": {
      "type": "<class 'str'>",
      "optional": false
    },
    "volume_handle": {
      "type": "<class 'str'>",
      "optional": false
    },
    "controller_expand_secret_ref": {
      "type": "typing.Union[ForwardRef('SecretReference'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "controller_publish_secret_ref": {
      "type": "typing.Union[ForwardRef('SecretReference'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "fs_type": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "node_expand_secret_ref": {
      "type": "typing.Union[ForwardRef('SecretReference'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "node_publish_secret_ref": {
      "type": "typing.Union[ForwardRef('SecretReference'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "node_stage_secret_ref": {
      "type": "typing.Union[ForwardRef('SecretReference'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "read_only": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "volume_attributes": {
      "type": "typing.Optional[typing.Mapping[str, str]]",
      "optional": true
    },
    "ancestors": null,
    "name": "CsiPersistentVolumeSource"
  },
  {
    "driver": {
      "type": "<class 'str'>",
      "optional": false
    },
    "fs_type": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "node_publish_secret_ref": {
      "type": "typing.Union[ForwardRef('LocalObjectReference'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "read_only": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "volume_attributes": {
      "type": "typing.Optional[typing.Mapping[str, str]]",
      "optional": true
    },
    "ancestors": null,
    "name": "CsiVolumeSource"
  },
  {
    "json_path": {
      "type": "<class 'str'>",
      "optional": false
    },
    "name": "CustomResourceColumnDefinition",
    "type": {
      "type": "<class 'str'>",
      "optional": false
    },
    "description": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "format": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "priority": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "ancestors": null
  },
  {
    "strategy": {
      "type": "<class 'str'>",
      "optional": false
    },
    "webhook": {
      "type": "typing.Union[ForwardRef('WebhookConversion'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "CustomResourceConversion"
  },
  {
    "kind": {
      "type": "<class 'str'>",
      "optional": false
    },
    "plural": {
      "type": "<class 'str'>",
      "optional": false
    },
    "categories": {
      "type": "typing.Optional[typing.Sequence[str]]",
      "optional": true
    },
    "list_kind": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "short_names": {
      "type": "typing.Optional[typing.Sequence[str]]",
      "optional": true
    },
    "singular": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null,
    "name": "CustomResourceDefinitionNames"
  },
  {
    "group": {
      "type": "<class 'str'>",
      "optional": false
    },
    "names": {
      "type": "typing.Union[cdk8s_plus_25.k8s.CustomResourceDefinitionNames, typing.Dict[str, typing.Any]]",
      "optional": false
    },
    "scope": {
      "type": "<class 'str'>",
      "optional": false
    },
    "versions": {
      "type": "typing.Sequence[typing.Union[ForwardRef('CustomResourceDefinitionVersion'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "conversion": {
      "type": "typing.Union[cdk8s_plus_25.k8s.CustomResourceConversion, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "preserve_unknown_fields": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "ancestors": null,
    "name": "CustomResourceDefinitionSpec"
  },
  {
    "name": "CustomResourceDefinitionVersion",
    "served": {
      "type": "<class 'bool'>",
      "optional": false
    },
    "storage": {
      "type": "<class 'bool'>",
      "optional": false
    },
    "additional_printer_columns": {
      "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.k8s.CustomResourceColumnDefinition, typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "deprecated": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "deprecation_warning": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "schema": {
      "type": "typing.Union[ForwardRef('CustomResourceValidation'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "subresources": {
      "type": "typing.Union[ForwardRef('CustomResourceSubresources'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null
  },
  {
    "spec_replicas_path": {
      "type": "<class 'str'>",
      "optional": false
    },
    "status_replicas_path": {
      "type": "<class 'str'>",
      "optional": false
    },
    "label_selector_path": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null,
    "name": "CustomResourceSubresourceScale"
  },
  {
    "scale": {
      "type": "typing.Union[cdk8s_plus_25.k8s.CustomResourceSubresourceScale, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "status": {
      "type": "typing.Any",
      "optional": true
    },
    "ancestors": null,
    "name": "CustomResourceSubresources"
  },
  {
    "open_apiv3_schema": {
      "type": "typing.Union[ForwardRef('JsonSchemaProps'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "CustomResourceValidation"
  },
  {
    "selector": {
      "type": "typing.Union[ForwardRef('LabelSelector'), typing.Dict[str, typing.Any]]",
      "optional": false
    },
    "template": {
      "type": "typing.Union[ForwardRef('PodTemplateSpec'), typing.Dict[str, typing.Any]]",
      "optional": false
    },
    "min_ready_seconds": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "revision_history_limit": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "update_strategy": {
      "type": "typing.Union[ForwardRef('DaemonSetUpdateStrategy'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "DaemonSetSpec"
  },
  {
    "rolling_update": {
      "type": "typing.Union[ForwardRef('RollingUpdateDaemonSet'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "type": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null,
    "name": "DaemonSetUpdateStrategy"
  },
  {
    "api_version": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "dry_run": {
      "type": "typing.Optional[typing.Sequence[str]]",
      "optional": true
    },
    "grace_period_seconds": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "kind": {
      "type": "typing.Optional[ForwardRef('IoK8SApimachineryPkgApisMetaV1DeleteOptionsKind')]",
      "optional": true
    },
    "orphan_dependents": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "preconditions": {
      "type": "typing.Union[ForwardRef('Preconditions'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "propagation_policy": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null,
    "name": "DeleteOptions"
  },
  {
    "selector": {
      "type": "typing.Union[ForwardRef('LabelSelector'), typing.Dict[str, typing.Any]]",
      "optional": false
    },
    "template": {
      "type": "typing.Union[ForwardRef('PodTemplateSpec'), typing.Dict[str, typing.Any]]",
      "optional": false
    },
    "min_ready_seconds": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "paused": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "progress_deadline_seconds": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "replicas": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "revision_history_limit": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "strategy": {
      "type": "typing.Union[ForwardRef('DeploymentStrategy'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "DeploymentSpec"
  },
  {
    "rolling_update": {
      "type": "typing.Union[ForwardRef('RollingUpdateDeployment'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "type": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null,
    "name": "DeploymentStrategy"
  },
  {
    "items": {
      "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('DownwardApiVolumeFile'), typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "ancestors": null,
    "name": "DownwardApiProjection"
  },
  {
    "path": {
      "type": "<class 'str'>",
      "optional": false
    },
    "field_ref": {
      "type": "typing.Union[ForwardRef('ObjectFieldSelector'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "mode": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "resource_field_ref": {
      "type": "typing.Union[ForwardRef('ResourceFieldSelector'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "DownwardApiVolumeFile"
  },
  {
    "default_mode": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "items": {
      "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.k8s.DownwardApiVolumeFile, typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "ancestors": null,
    "name": "DownwardApiVolumeSource"
  },
  {
    "medium": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "size_limit": {
      "type": "typing.Optional[ForwardRef('Quantity')]",
      "optional": true
    },
    "ancestors": null,
    "name": "EmptyDirVolumeSource"
  },
  {
    "addresses": {
      "type": "typing.Sequence[str]",
      "optional": false
    },
    "conditions": {
      "type": "typing.Union[ForwardRef('EndpointConditions'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "deprecated_topology": {
      "type": "typing.Optional[typing.Mapping[str, str]]",
      "optional": true
    },
    "hints": {
      "type": "typing.Union[ForwardRef('EndpointHints'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "hostname": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "node_name": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "target_ref": {
      "type": "typing.Union[ForwardRef('ObjectReference'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "zone": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null,
    "name": "Endpoint"
  },
  {
    "ip": {
      "type": "<class 'str'>",
      "optional": false
    },
    "hostname": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "node_name": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "target_ref": {
      "type": "typing.Union[ForwardRef('ObjectReference'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "EndpointAddress"
  },
  {
    "ready": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "serving": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "terminating": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "ancestors": null,
    "name": "EndpointConditions"
  },
  {
    "for_zones": {
      "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('ForZone'), typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "ancestors": null,
    "name": "EndpointHints"
  },
  {
    "port": {
      "type": "typing.Union[int, float]",
      "optional": false
    },
    "app_protocol": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "name": "EndpointPort",
    "protocol": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null
  },
  {
    "addresses": {
      "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.k8s.EndpointAddress, typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "not_ready_addresses": {
      "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.k8s.EndpointAddress, typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "ports": {
      "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.k8s.EndpointPort, typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "ancestors": null,
    "name": "EndpointSubset"
  },
  {
    "config_map_ref": {
      "type": "typing.Union[cdk8s_plus_25.k8s.ConfigMapEnvSource, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "prefix": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "secret_ref": {
      "type": "typing.Union[ForwardRef('SecretEnvSource'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "EnvFromSource"
  },
  {
    "name": "EnvVar",
    "value": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "value_from": {
      "type": "typing.Union[ForwardRef('EnvVarSource'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null
  },
  {
    "config_map_key_ref": {
      "type": "typing.Union[cdk8s_plus_25.k8s.ConfigMapKeySelector, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "field_ref": {
      "type": "typing.Union[ForwardRef('ObjectFieldSelector'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "resource_field_ref": {
      "type": "typing.Union[ForwardRef('ResourceFieldSelector'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "secret_key_ref": {
      "type": "typing.Union[ForwardRef('SecretKeySelector'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "EnvVarSource"
  },
  {
    "name": "EphemeralContainer",
    "args": {
      "type": "typing.Optional[typing.Sequence[str]]",
      "optional": true
    },
    "command": {
      "type": "typing.Optional[typing.Sequence[str]]",
      "optional": true
    },
    "env": {
      "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.k8s.EnvVar, typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "env_from": {
      "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.k8s.EnvFromSource, typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "image": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "image_pull_policy": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "lifecycle": {
      "type": "typing.Union[ForwardRef('Lifecycle'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "liveness_probe": {
      "type": "typing.Union[ForwardRef('Probe'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ports": {
      "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.k8s.ContainerPort, typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "readiness_probe": {
      "type": "typing.Union[ForwardRef('Probe'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "resources": {
      "type": "typing.Union[ForwardRef('ResourceRequirements'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "security_context": {
      "type": "typing.Union[ForwardRef('SecurityContext'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "startup_probe": {
      "type": "typing.Union[ForwardRef('Probe'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "stdin": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "stdin_once": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "target_container_name": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "termination_message_path": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "termination_message_policy": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "tty": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "volume_devices": {
      "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('VolumeDevice'), typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "volume_mounts": {
      "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('VolumeMount'), typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "working_dir": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null
  },
  {
    "volume_claim_template": {
      "type": "typing.Union[ForwardRef('PersistentVolumeClaimTemplate'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "EphemeralVolumeSource"
  },
  {
    "count": {
      "type": "typing.Union[int, float]",
      "optional": false
    },
    "last_observed_time": {
      "type": "<class 'datetime.datetime'>",
      "optional": false
    },
    "ancestors": null,
    "name": "EventSeries"
  },
  {
    "component": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "host": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null,
    "name": "EventSource"
  },
  {
    "command": {
      "type": "typing.Optional[typing.Sequence[str]]",
      "optional": true
    },
    "ancestors": null,
    "name": "ExecAction"
  },
  {
    "description": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "url": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null,
    "name": "ExternalDocumentation"
  },
  {
    "metric": {
      "type": "typing.Union[ForwardRef('MetricIdentifierV2'), typing.Dict[str, typing.Any]]",
      "optional": false
    },
    "target": {
      "type": "typing.Union[ForwardRef('MetricTargetV2'), typing.Dict[str, typing.Any]]",
      "optional": false
    },
    "ancestors": null,
    "name": "ExternalMetricSourceV2"
  },
  {
    "metric": {
      "type": "typing.Union[ForwardRef('MetricIdentifierV2Beta2'), typing.Dict[str, typing.Any]]",
      "optional": false
    },
    "target": {
      "type": "typing.Union[ForwardRef('MetricTargetV2Beta2'), typing.Dict[str, typing.Any]]",
      "optional": false
    },
    "ancestors": null,
    "name": "ExternalMetricSourceV2Beta2"
  },
  {
    "fs_type": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "lun": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "read_only": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "target_ww_ns": {
      "type": "typing.Optional[typing.Sequence[str]]",
      "optional": true
    },
    "wwids": {
      "type": "typing.Optional[typing.Sequence[str]]",
      "optional": true
    },
    "ancestors": null,
    "name": "FcVolumeSource"
  },
  {
    "driver": {
      "type": "<class 'str'>",
      "optional": false
    },
    "fs_type": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "options": {
      "type": "typing.Optional[typing.Mapping[str, str]]",
      "optional": true
    },
    "read_only": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "secret_ref": {
      "type": "typing.Union[ForwardRef('SecretReference'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "FlexPersistentVolumeSource"
  },
  {
    "driver": {
      "type": "<class 'str'>",
      "optional": false
    },
    "fs_type": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "options": {
      "type": "typing.Optional[typing.Mapping[str, str]]",
      "optional": true
    },
    "read_only": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "secret_ref": {
      "type": "typing.Union[ForwardRef('LocalObjectReference'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "FlexVolumeSource"
  },
  {
    "dataset_name": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "dataset_uuid": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null,
    "name": "FlockerVolumeSource"
  },
  {
    "type": {
      "type": "<class 'str'>",
      "optional": false
    },
    "ancestors": null,
    "name": "FlowDistinguisherMethodV1Beta1"
  },
  {
    "type": {
      "type": "<class 'str'>",
      "optional": false
    },
    "ancestors": null,
    "name": "FlowDistinguisherMethodV1Beta2"
  },
  {
    "priority_level_configuration": {
      "type": "typing.Union[ForwardRef('PriorityLevelConfigurationReferenceV1Beta1'), typing.Dict[str, typing.Any]]",
      "optional": false
    },
    "distinguisher_method": {
      "type": "typing.Union[cdk8s_plus_25.k8s.FlowDistinguisherMethodV1Beta1, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "matching_precedence": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "rules": {
      "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('PolicyRulesWithSubjectsV1Beta1'), typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "ancestors": null,
    "name": "FlowSchemaSpecV1Beta1"
  },
  {
    "priority_level_configuration": {
      "type": "typing.Union[ForwardRef('PriorityLevelConfigurationReferenceV1Beta2'), typing.Dict[str, typing.Any]]",
      "optional": false
    },
    "distinguisher_method": {
      "type": "typing.Union[cdk8s_plus_25.k8s.FlowDistinguisherMethodV1Beta2, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "matching_precedence": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "rules": {
      "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('PolicyRulesWithSubjectsV1Beta2'), typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "ancestors": null,
    "name": "FlowSchemaSpecV1Beta2"
  },
  {
    "name": "ForZone",
    "ancestors": null
  },
  {
    "pd_name": {
      "type": "<class 'str'>",
      "optional": false
    },
    "fs_type": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "partition": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "read_only": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "ancestors": null,
    "name": "GcePersistentDiskVolumeSource"
  },
  {
    "repository": {
      "type": "<class 'str'>",
      "optional": false
    },
    "directory": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "revision": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null,
    "name": "GitRepoVolumeSource"
  },
  {
    "endpoints": {
      "type": "<class 'str'>",
      "optional": false
    },
    "path": {
      "type": "<class 'str'>",
      "optional": false
    },
    "endpoints_namespace": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "read_only": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "ancestors": null,
    "name": "GlusterfsPersistentVolumeSource"
  },
  {
    "endpoints": {
      "type": "<class 'str'>",
      "optional": false
    },
    "path": {
      "type": "<class 'str'>",
      "optional": false
    },
    "read_only": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "ancestors": null,
    "name": "GlusterfsVolumeSource"
  },
  {
    "name": "GroupSubjectV1Beta1",
    "ancestors": null
  },
  {
    "name": "GroupSubjectV1Beta2",
    "ancestors": null
  },
  {
    "port": {
      "type": "typing.Union[int, float]",
      "optional": false
    },
    "service": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null,
    "name": "GrpcAction"
  },
  {
    "scale_down": {
      "type": "typing.Union[ForwardRef('HpaScalingRulesV2'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "scale_up": {
      "type": "typing.Union[ForwardRef('HpaScalingRulesV2'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "HorizontalPodAutoscalerBehaviorV2"
  },
  {
    "scale_down": {
      "type": "typing.Union[ForwardRef('HpaScalingRulesV2Beta2'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "scale_up": {
      "type": "typing.Union[ForwardRef('HpaScalingRulesV2Beta2'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "HorizontalPodAutoscalerBehaviorV2Beta2"
  },
  {
    "max_replicas": {
      "type": "typing.Union[int, float]",
      "optional": false
    },
    "scale_target_ref": {
      "type": "typing.Union[cdk8s_plus_25.k8s.CrossVersionObjectReference, typing.Dict[str, typing.Any]]",
      "optional": false
    },
    "min_replicas": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "target_cpu_utilization_percentage": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "HorizontalPodAutoscalerSpec"
  },
  {
    "max_replicas": {
      "type": "typing.Union[int, float]",
      "optional": false
    },
    "scale_target_ref": {
      "type": "typing.Union[cdk8s_plus_25.k8s.CrossVersionObjectReferenceV2, typing.Dict[str, typing.Any]]",
      "optional": false
    },
    "behavior": {
      "type": "typing.Union[cdk8s_plus_25.k8s.HorizontalPodAutoscalerBehaviorV2, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "metrics": {
      "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('MetricSpecV2'), typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "min_replicas": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "HorizontalPodAutoscalerSpecV2"
  },
  {
    "max_replicas": {
      "type": "typing.Union[int, float]",
      "optional": false
    },
    "scale_target_ref": {
      "type": "typing.Union[cdk8s_plus_25.k8s.CrossVersionObjectReferenceV2Beta2, typing.Dict[str, typing.Any]]",
      "optional": false
    },
    "behavior": {
      "type": "typing.Union[cdk8s_plus_25.k8s.HorizontalPodAutoscalerBehaviorV2Beta2, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "metrics": {
      "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('MetricSpecV2Beta2'), typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "min_replicas": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "HorizontalPodAutoscalerSpecV2Beta2"
  },
  {
    "hostnames": {
      "type": "typing.Optional[typing.Sequence[str]]",
      "optional": true
    },
    "ip": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null,
    "name": "HostAlias"
  },
  {
    "path": {
      "type": "<class 'str'>",
      "optional": false
    },
    "type": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null,
    "name": "HostPathVolumeSource"
  },
  {
    "period_seconds": {
      "type": "typing.Union[int, float]",
      "optional": false
    },
    "type": {
      "type": "<class 'str'>",
      "optional": false
    },
    "value": {
      "type": "typing.Union[int, float]",
      "optional": false
    },
    "ancestors": null,
    "name": "HpaScalingPolicyV2"
  },
  {
    "period_seconds": {
      "type": "typing.Union[int, float]",
      "optional": false
    },
    "type": {
      "type": "<class 'str'>",
      "optional": false
    },
    "value": {
      "type": "typing.Union[int, float]",
      "optional": false
    },
    "ancestors": null,
    "name": "HpaScalingPolicyV2Beta2"
  },
  {
    "policies": {
      "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.k8s.HpaScalingPolicyV2, typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "select_policy": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "stabilization_window_seconds": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "HpaScalingRulesV2"
  },
  {
    "policies": {
      "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.k8s.HpaScalingPolicyV2Beta2, typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "select_policy": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "stabilization_window_seconds": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "HpaScalingRulesV2Beta2"
  },
  {
    "port": {
      "type": "IntOrString",
      "optional": false
    },
    "host": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "http_headers": {
      "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('HttpHeader'), typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "path": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "scheme": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null,
    "name": "HttpGetAction"
  },
  {
    "name": "HttpHeader",
    "value": {
      "type": "<class 'str'>",
      "optional": false
    },
    "ancestors": null
  },
  {
    "backend": {
      "type": "typing.Union[ForwardRef('IngressBackend'), typing.Dict[str, typing.Any]]",
      "optional": false
    },
    "path_type": {
      "type": "<class 'str'>",
      "optional": false
    },
    "path": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null,
    "name": "HttpIngressPath"
  },
  {
    "paths": {
      "type": "typing.Sequence[typing.Union[cdk8s_plus_25.k8s.HttpIngressPath, typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "ancestors": null,
    "name": "HttpIngressRuleValue"
  },
  {
    "resource": {
      "type": "typing.Union[ForwardRef('TypedLocalObjectReference'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "service": {
      "type": "typing.Union[ForwardRef('IngressServiceBackend'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "IngressBackend"
  },
  {
    "kind": {
      "type": "<class 'str'>",
      "optional": false
    },
    "name": "IngressClassParametersReference",
    "api_group": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "namespace": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "scope": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null
  },
  {
    "controller": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "parameters": {
      "type": "typing.Union[cdk8s_plus_25.k8s.IngressClassParametersReference, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "IngressClassSpec"
  },
  {
    "host": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "http": {
      "type": "typing.Union[cdk8s_plus_25.k8s.HttpIngressRuleValue, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "IngressRule"
  },
  {
    "name": "IngressServiceBackend",
    "port": {
      "type": "typing.Union[ForwardRef('ServiceBackendPort'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null
  },
  {
    "default_backend": {
      "type": "typing.Union[cdk8s_plus_25.k8s.IngressBackend, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ingress_class_name": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "rules": {
      "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.k8s.IngressRule, typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "tls": {
      "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('IngressTls'), typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "ancestors": null,
    "name": "IngressSpec"
  },
  {
    "hosts": {
      "type": "typing.Optional[typing.Sequence[str]]",
      "optional": true
    },
    "secret_name": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null,
    "name": "IngressTls"
  },
  {
    "args": {
      "type": "No type annotation",
      "optional": false
    },
    "kwargs": {
      "type": "No type annotation",
      "optional": false
    },
    "ancestors": null,
    "name": "IntOrString"
  },
  {
    "args": {
      "type": "No type annotation",
      "optional": false
    },
    "kwds": {
      "type": "No type annotation",
      "optional": false
    },
    "ancestors": [
      "Enum"
    ],
    "name": "IoK8SApimachineryPkgApisMetaV1DeleteOptionsKind"
  },
  {
    "cidr": {
      "type": "<class 'str'>",
      "optional": false
    },
    "except_": {
      "type": "typing.Optional[typing.Sequence[str]]",
      "optional": true
    },
    "ancestors": null,
    "name": "IpBlock"
  },
  {
    "iqn": {
      "type": "<class 'str'>",
      "optional": false
    },
    "lun": {
      "type": "typing.Union[int, float]",
      "optional": false
    },
    "target_portal": {
      "type": "<class 'str'>",
      "optional": false
    },
    "chap_auth_discovery": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "chap_auth_session": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "fs_type": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "initiator_name": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "iscsi_interface": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "portals": {
      "type": "typing.Optional[typing.Sequence[str]]",
      "optional": true
    },
    "read_only": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "secret_ref": {
      "type": "typing.Union[ForwardRef('SecretReference'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "IscsiPersistentVolumeSource"
  },
  {
    "iqn": {
      "type": "<class 'str'>",
      "optional": false
    },
    "lun": {
      "type": "typing.Union[int, float]",
      "optional": false
    },
    "target_portal": {
      "type": "<class 'str'>",
      "optional": false
    },
    "chap_auth_discovery": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "chap_auth_session": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "fs_type": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "initiator_name": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "iscsi_interface": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "portals": {
      "type": "typing.Optional[typing.Sequence[str]]",
      "optional": true
    },
    "read_only": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "secret_ref": {
      "type": "typing.Union[ForwardRef('LocalObjectReference'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "IscsiVolumeSource"
  },
  {
    "template": {
      "type": "typing.Union[ForwardRef('PodTemplateSpec'), typing.Dict[str, typing.Any]]",
      "optional": false
    },
    "active_deadline_seconds": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "backoff_limit": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "completion_mode": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "completions": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "manual_selector": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "parallelism": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "pod_failure_policy": {
      "type": "typing.Union[ForwardRef('PodFailurePolicy'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "selector": {
      "type": "typing.Union[ForwardRef('LabelSelector'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "suspend": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "ttl_seconds_after_finished": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "JobSpec"
  },
  {
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "spec": {
      "type": "typing.Union[cdk8s_plus_25.k8s.JobSpec, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "JobTemplateSpec"
  },
  {
    "additional_items": {
      "type": "typing.Any",
      "optional": true
    },
    "additional_properties": {
      "type": "typing.Any",
      "optional": true
    },
    "all_of": {
      "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('JsonSchemaProps'), typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "any_of": {
      "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('JsonSchemaProps'), typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "default": {
      "type": "typing.Any",
      "optional": true
    },
    "definitions": {
      "type": "typing.Optional[typing.Mapping[str, typing.Union[ForwardRef('JsonSchemaProps'), typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "dependencies": {
      "type": "typing.Optional[typing.Mapping[str, typing.Any]]",
      "optional": true
    },
    "description": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "enum": {
      "type": "typing.Optional[typing.Sequence[typing.Any]]",
      "optional": true
    },
    "example": {
      "type": "typing.Any",
      "optional": true
    },
    "exclusive_maximum": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "exclusive_minimum": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "external_docs": {
      "type": "typing.Union[cdk8s_plus_25.k8s.ExternalDocumentation, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "format": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "id": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "items": {
      "type": "typing.Any",
      "optional": true
    },
    "maximum": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "max_items": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "max_length": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "max_properties": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "minimum": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "min_items": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "min_length": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "min_properties": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "multiple_of": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "not_": {
      "type": "typing.Union[ForwardRef('JsonSchemaProps'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "nullable": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "one_of": {
      "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('JsonSchemaProps'), typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "pattern": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "pattern_properties": {
      "type": "typing.Optional[typing.Mapping[str, typing.Union[ForwardRef('JsonSchemaProps'), typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "properties": {
      "type": "typing.Optional[typing.Mapping[str, typing.Union[ForwardRef('JsonSchemaProps'), typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "ref": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "required": {
      "type": "typing.Optional[typing.Sequence[str]]",
      "optional": true
    },
    "schema": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "title": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "type": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "unique_items": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "x_kubernetes_embedded_resource": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "x_kubernetes_int_or_string": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "x_kubernetes_list_map_keys": {
      "type": "typing.Optional[typing.Sequence[str]]",
      "optional": true
    },
    "x_kubernetes_list_type": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "x_kubernetes_map_type": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "x_kubernetes_preserve_unknown_fields": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "x_kubernetes_validations": {
      "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('ValidationRule'), typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "ancestors": null,
    "name": "JsonSchemaProps"
  },
  {
    "key": {
      "type": "<class 'str'>",
      "optional": false
    },
    "path": {
      "type": "<class 'str'>",
      "optional": false
    },
    "mode": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KeyToPath"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "spec": {
      "type": "typing.Union[cdk8s_plus_25.k8s.ApiServiceSpec, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeApiService"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeApiServiceProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeApiServiceList"
  },
  {
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeApiServiceProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeApiServiceListProps"
  },
  {
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "spec": {
      "type": "typing.Union[cdk8s_plus_25.k8s.ApiServiceSpec, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeApiServiceProps"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "target": {
      "type": "typing.Union[ForwardRef('ObjectReference'), typing.Dict[str, typing.Any]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeBinding"
  },
  {
    "target": {
      "type": "typing.Union[ForwardRef('ObjectReference'), typing.Dict[str, typing.Any]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeBindingProps"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "spec": {
      "type": "typing.Union[cdk8s_plus_25.k8s.CertificateSigningRequestSpec, typing.Dict[str, typing.Any]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeCertificateSigningRequest"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeCertificateSigningRequestProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeCertificateSigningRequestList"
  },
  {
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeCertificateSigningRequestProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeCertificateSigningRequestListProps"
  },
  {
    "spec": {
      "type": "typing.Union[cdk8s_plus_25.k8s.CertificateSigningRequestSpec, typing.Dict[str, typing.Any]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeCertificateSigningRequestProps"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeClusterCidrv1Alpha1Props'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeClusterCidrListV1Alpha1"
  },
  {
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeClusterCidrv1Alpha1Props'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeClusterCidrListV1Alpha1Props"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "spec": {
      "type": "typing.Union[cdk8s_plus_25.k8s.ClusterCidrSpecV1Alpha1, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeClusterCidrv1Alpha1"
  },
  {
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "spec": {
      "type": "typing.Union[cdk8s_plus_25.k8s.ClusterCidrSpecV1Alpha1, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeClusterCidrv1Alpha1Props"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "aggregation_rule": {
      "type": "typing.Union[cdk8s_plus_25.k8s.AggregationRule, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "rules": {
      "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('PolicyRule'), typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeClusterRole"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "role_ref": {
      "type": "typing.Union[ForwardRef('RoleRef'), typing.Dict[str, typing.Any]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "subjects": {
      "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('Subject'), typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeClusterRoleBinding"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeClusterRoleBindingProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeClusterRoleBindingList"
  },
  {
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeClusterRoleBindingProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeClusterRoleBindingListProps"
  },
  {
    "role_ref": {
      "type": "typing.Union[ForwardRef('RoleRef'), typing.Dict[str, typing.Any]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "subjects": {
      "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('Subject'), typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeClusterRoleBindingProps"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeClusterRoleProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeClusterRoleList"
  },
  {
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeClusterRoleProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeClusterRoleListProps"
  },
  {
    "aggregation_rule": {
      "type": "typing.Union[cdk8s_plus_25.k8s.AggregationRule, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "rules": {
      "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('PolicyRule'), typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeClusterRoleProps"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "conditions": {
      "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.k8s.ComponentCondition, typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeComponentStatus"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeComponentStatusProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeComponentStatusList"
  },
  {
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeComponentStatusProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeComponentStatusListProps"
  },
  {
    "conditions": {
      "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.k8s.ComponentCondition, typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeComponentStatusProps"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "binary_data": {
      "type": "typing.Optional[typing.Mapping[str, str]]",
      "optional": true
    },
    "data": {
      "type": "typing.Optional[typing.Mapping[str, str]]",
      "optional": true
    },
    "immutable": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeConfigMap"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeConfigMapProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeConfigMapList"
  },
  {
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeConfigMapProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeConfigMapListProps"
  },
  {
    "binary_data": {
      "type": "typing.Optional[typing.Mapping[str, str]]",
      "optional": true
    },
    "data": {
      "type": "typing.Optional[typing.Mapping[str, str]]",
      "optional": true
    },
    "immutable": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeConfigMapProps"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "revision": {
      "type": "typing.Union[int, float]",
      "optional": false
    },
    "data": {
      "type": "typing.Any",
      "optional": true
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeControllerRevision"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeControllerRevisionProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeControllerRevisionList"
  },
  {
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeControllerRevisionProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeControllerRevisionListProps"
  },
  {
    "revision": {
      "type": "typing.Union[int, float]",
      "optional": false
    },
    "data": {
      "type": "typing.Any",
      "optional": true
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeControllerRevisionProps"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "spec": {
      "type": "typing.Union[cdk8s_plus_25.k8s.CronJobSpec, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeCronJob"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeCronJobProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeCronJobList"
  },
  {
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeCronJobProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeCronJobListProps"
  },
  {
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "spec": {
      "type": "typing.Union[cdk8s_plus_25.k8s.CronJobSpec, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeCronJobProps"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "spec": {
      "type": "typing.Union[cdk8s_plus_25.k8s.CsiDriverSpec, typing.Dict[str, typing.Any]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeCsiDriver"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeCsiDriverProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeCsiDriverList"
  },
  {
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeCsiDriverProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeCsiDriverListProps"
  },
  {
    "spec": {
      "type": "typing.Union[cdk8s_plus_25.k8s.CsiDriverSpec, typing.Dict[str, typing.Any]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeCsiDriverProps"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "spec": {
      "type": "typing.Union[cdk8s_plus_25.k8s.CsiNodeSpec, typing.Dict[str, typing.Any]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeCsiNode"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeCsiNodeProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeCsiNodeList"
  },
  {
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeCsiNodeProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeCsiNodeListProps"
  },
  {
    "spec": {
      "type": "typing.Union[cdk8s_plus_25.k8s.CsiNodeSpec, typing.Dict[str, typing.Any]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeCsiNodeProps"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "storage_class_name": {
      "type": "<class 'str'>",
      "optional": false
    },
    "capacity": {
      "type": "typing.Optional[ForwardRef('Quantity')]",
      "optional": true
    },
    "maximum_volume_size": {
      "type": "typing.Optional[ForwardRef('Quantity')]",
      "optional": true
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "node_topology": {
      "type": "typing.Union[ForwardRef('LabelSelector'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeCsiStorageCapacity"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeCsiStorageCapacityProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeCsiStorageCapacityList"
  },
  {
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeCsiStorageCapacityProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeCsiStorageCapacityListProps"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeCsiStorageCapacityV1Beta1Props'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeCsiStorageCapacityListV1Beta1"
  },
  {
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeCsiStorageCapacityV1Beta1Props'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeCsiStorageCapacityListV1Beta1Props"
  },
  {
    "storage_class_name": {
      "type": "<class 'str'>",
      "optional": false
    },
    "capacity": {
      "type": "typing.Optional[ForwardRef('Quantity')]",
      "optional": true
    },
    "maximum_volume_size": {
      "type": "typing.Optional[ForwardRef('Quantity')]",
      "optional": true
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "node_topology": {
      "type": "typing.Union[ForwardRef('LabelSelector'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeCsiStorageCapacityProps"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "storage_class_name": {
      "type": "<class 'str'>",
      "optional": false
    },
    "capacity": {
      "type": "typing.Optional[ForwardRef('Quantity')]",
      "optional": true
    },
    "maximum_volume_size": {
      "type": "typing.Optional[ForwardRef('Quantity')]",
      "optional": true
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "node_topology": {
      "type": "typing.Union[ForwardRef('LabelSelector'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeCsiStorageCapacityV1Beta1"
  },
  {
    "storage_class_name": {
      "type": "<class 'str'>",
      "optional": false
    },
    "capacity": {
      "type": "typing.Optional[ForwardRef('Quantity')]",
      "optional": true
    },
    "maximum_volume_size": {
      "type": "typing.Optional[ForwardRef('Quantity')]",
      "optional": true
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "node_topology": {
      "type": "typing.Union[ForwardRef('LabelSelector'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeCsiStorageCapacityV1Beta1Props"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "spec": {
      "type": "typing.Union[cdk8s_plus_25.k8s.CustomResourceDefinitionSpec, typing.Dict[str, typing.Any]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeCustomResourceDefinition"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeCustomResourceDefinitionProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeCustomResourceDefinitionList"
  },
  {
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeCustomResourceDefinitionProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeCustomResourceDefinitionListProps"
  },
  {
    "spec": {
      "type": "typing.Union[cdk8s_plus_25.k8s.CustomResourceDefinitionSpec, typing.Dict[str, typing.Any]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeCustomResourceDefinitionProps"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "spec": {
      "type": "typing.Union[cdk8s_plus_25.k8s.DaemonSetSpec, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeDaemonSet"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeDaemonSetProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeDaemonSetList"
  },
  {
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeDaemonSetProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeDaemonSetListProps"
  },
  {
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "spec": {
      "type": "typing.Union[cdk8s_plus_25.k8s.DaemonSetSpec, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeDaemonSetProps"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "spec": {
      "type": "typing.Union[cdk8s_plus_25.k8s.DeploymentSpec, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeDeployment"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeDeploymentProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeDeploymentList"
  },
  {
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeDeploymentProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeDeploymentListProps"
  },
  {
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "spec": {
      "type": "typing.Union[cdk8s_plus_25.k8s.DeploymentSpec, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeDeploymentProps"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "address_type": {
      "type": "<class 'str'>",
      "optional": false
    },
    "endpoints": {
      "type": "typing.Sequence[typing.Union[cdk8s_plus_25.k8s.Endpoint, typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ports": {
      "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.k8s.EndpointPort, typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeEndpointSlice"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeEndpointSliceProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeEndpointSliceList"
  },
  {
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeEndpointSliceProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeEndpointSliceListProps"
  },
  {
    "address_type": {
      "type": "<class 'str'>",
      "optional": false
    },
    "endpoints": {
      "type": "typing.Sequence[typing.Union[cdk8s_plus_25.k8s.Endpoint, typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ports": {
      "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.k8s.EndpointPort, typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeEndpointSliceProps"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "subsets": {
      "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.k8s.EndpointSubset, typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeEndpoints"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeEndpointsProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeEndpointsList"
  },
  {
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeEndpointsProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeEndpointsListProps"
  },
  {
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "subsets": {
      "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.k8s.EndpointSubset, typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeEndpointsProps"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "event_time": {
      "type": "<class 'datetime.datetime'>",
      "optional": false
    },
    "action": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "deprecated_count": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "deprecated_first_timestamp": {
      "type": "typing.Optional[datetime.datetime]",
      "optional": true
    },
    "deprecated_last_timestamp": {
      "type": "typing.Optional[datetime.datetime]",
      "optional": true
    },
    "deprecated_source": {
      "type": "typing.Union[cdk8s_plus_25.k8s.EventSource, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "note": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "reason": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "regarding": {
      "type": "typing.Union[ForwardRef('ObjectReference'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "related": {
      "type": "typing.Union[ForwardRef('ObjectReference'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "reporting_controller": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "reporting_instance": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "series": {
      "type": "typing.Union[cdk8s_plus_25.k8s.EventSeries, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "type": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeEvent"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeEventProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeEventList"
  },
  {
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeEventProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeEventListProps"
  },
  {
    "event_time": {
      "type": "<class 'datetime.datetime'>",
      "optional": false
    },
    "action": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "deprecated_count": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "deprecated_first_timestamp": {
      "type": "typing.Optional[datetime.datetime]",
      "optional": true
    },
    "deprecated_last_timestamp": {
      "type": "typing.Optional[datetime.datetime]",
      "optional": true
    },
    "deprecated_source": {
      "type": "typing.Union[cdk8s_plus_25.k8s.EventSource, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "note": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "reason": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "regarding": {
      "type": "typing.Union[ForwardRef('ObjectReference'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "related": {
      "type": "typing.Union[ForwardRef('ObjectReference'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "reporting_controller": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "reporting_instance": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "series": {
      "type": "typing.Union[cdk8s_plus_25.k8s.EventSeries, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "type": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeEventProps"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "delete_options": {
      "type": "typing.Union[cdk8s_plus_25.k8s.DeleteOptions, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeEviction"
  },
  {
    "delete_options": {
      "type": "typing.Union[cdk8s_plus_25.k8s.DeleteOptions, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeEvictionProps"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeFlowSchemaV1Beta1Props'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeFlowSchemaListV1Beta1"
  },
  {
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeFlowSchemaV1Beta1Props'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeFlowSchemaListV1Beta1Props"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeFlowSchemaV1Beta2Props'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeFlowSchemaListV1Beta2"
  },
  {
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeFlowSchemaV1Beta2Props'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeFlowSchemaListV1Beta2Props"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "spec": {
      "type": "typing.Union[cdk8s_plus_25.k8s.FlowSchemaSpecV1Beta1, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeFlowSchemaV1Beta1"
  },
  {
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "spec": {
      "type": "typing.Union[cdk8s_plus_25.k8s.FlowSchemaSpecV1Beta1, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeFlowSchemaV1Beta1Props"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "spec": {
      "type": "typing.Union[cdk8s_plus_25.k8s.FlowSchemaSpecV1Beta2, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeFlowSchemaV1Beta2"
  },
  {
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "spec": {
      "type": "typing.Union[cdk8s_plus_25.k8s.FlowSchemaSpecV1Beta2, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeFlowSchemaV1Beta2Props"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "spec": {
      "type": "typing.Union[cdk8s_plus_25.k8s.HorizontalPodAutoscalerSpec, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeHorizontalPodAutoscaler"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeHorizontalPodAutoscalerProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeHorizontalPodAutoscalerList"
  },
  {
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeHorizontalPodAutoscalerProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeHorizontalPodAutoscalerListProps"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeHorizontalPodAutoscalerV2Props'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeHorizontalPodAutoscalerListV2"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeHorizontalPodAutoscalerV2Beta2Props'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeHorizontalPodAutoscalerListV2Beta2"
  },
  {
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeHorizontalPodAutoscalerV2Beta2Props'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeHorizontalPodAutoscalerListV2Beta2Props"
  },
  {
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeHorizontalPodAutoscalerV2Props'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeHorizontalPodAutoscalerListV2Props"
  },
  {
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "spec": {
      "type": "typing.Union[cdk8s_plus_25.k8s.HorizontalPodAutoscalerSpec, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeHorizontalPodAutoscalerProps"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "spec": {
      "type": "typing.Union[cdk8s_plus_25.k8s.HorizontalPodAutoscalerSpecV2, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeHorizontalPodAutoscalerV2"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "spec": {
      "type": "typing.Union[cdk8s_plus_25.k8s.HorizontalPodAutoscalerSpecV2Beta2, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeHorizontalPodAutoscalerV2Beta2"
  },
  {
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "spec": {
      "type": "typing.Union[cdk8s_plus_25.k8s.HorizontalPodAutoscalerSpecV2Beta2, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeHorizontalPodAutoscalerV2Beta2Props"
  },
  {
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "spec": {
      "type": "typing.Union[cdk8s_plus_25.k8s.HorizontalPodAutoscalerSpecV2, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeHorizontalPodAutoscalerV2Props"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "spec": {
      "type": "typing.Union[cdk8s_plus_25.k8s.IngressSpec, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeIngress"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "spec": {
      "type": "typing.Union[cdk8s_plus_25.k8s.IngressClassSpec, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeIngressClass"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeIngressClassProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeIngressClassList"
  },
  {
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeIngressClassProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeIngressClassListProps"
  },
  {
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "spec": {
      "type": "typing.Union[cdk8s_plus_25.k8s.IngressClassSpec, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeIngressClassProps"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeIngressProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeIngressList"
  },
  {
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeIngressProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeIngressListProps"
  },
  {
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "spec": {
      "type": "typing.Union[cdk8s_plus_25.k8s.IngressSpec, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeIngressProps"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "spec": {
      "type": "typing.Union[cdk8s_plus_25.k8s.JobSpec, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeJob"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeJobProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeJobList"
  },
  {
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeJobProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeJobListProps"
  },
  {
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "spec": {
      "type": "typing.Union[cdk8s_plus_25.k8s.JobSpec, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeJobProps"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "spec": {
      "type": "typing.Union[ForwardRef('LeaseSpec'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeLease"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeLeaseProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeLeaseList"
  },
  {
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeLeaseProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeLeaseListProps"
  },
  {
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "spec": {
      "type": "typing.Union[ForwardRef('LeaseSpec'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeLeaseProps"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "spec": {
      "type": "typing.Union[ForwardRef('LimitRangeSpec'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeLimitRange"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeLimitRangeProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeLimitRangeList"
  },
  {
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeLimitRangeProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeLimitRangeListProps"
  },
  {
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "spec": {
      "type": "typing.Union[ForwardRef('LimitRangeSpec'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeLimitRangeProps"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "spec": {
      "type": "typing.Union[ForwardRef('SubjectAccessReviewSpec'), typing.Dict[str, typing.Any]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeLocalSubjectAccessReview"
  },
  {
    "spec": {
      "type": "typing.Union[ForwardRef('SubjectAccessReviewSpec'), typing.Dict[str, typing.Any]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeLocalSubjectAccessReviewProps"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "webhooks": {
      "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('MutatingWebhook'), typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeMutatingWebhookConfiguration"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeMutatingWebhookConfigurationProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeMutatingWebhookConfigurationList"
  },
  {
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeMutatingWebhookConfigurationProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeMutatingWebhookConfigurationListProps"
  },
  {
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "webhooks": {
      "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('MutatingWebhook'), typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeMutatingWebhookConfigurationProps"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "spec": {
      "type": "typing.Union[ForwardRef('NamespaceSpec'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeNamespace"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeNamespaceProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeNamespaceList"
  },
  {
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeNamespaceProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeNamespaceListProps"
  },
  {
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "spec": {
      "type": "typing.Union[ForwardRef('NamespaceSpec'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeNamespaceProps"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "spec": {
      "type": "typing.Union[ForwardRef('NetworkPolicySpec'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeNetworkPolicy"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeNetworkPolicyProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeNetworkPolicyList"
  },
  {
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeNetworkPolicyProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeNetworkPolicyListProps"
  },
  {
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "spec": {
      "type": "typing.Union[ForwardRef('NetworkPolicySpec'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeNetworkPolicyProps"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "spec": {
      "type": "typing.Union[ForwardRef('NodeSpec'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeNode"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeNodeProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeNodeList"
  },
  {
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeNodeProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeNodeListProps"
  },
  {
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "spec": {
      "type": "typing.Union[ForwardRef('NodeSpec'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeNodeProps"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "spec": {
      "type": "typing.Union[ForwardRef('PersistentVolumeSpec'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubePersistentVolume"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "spec": {
      "type": "typing.Union[ForwardRef('PersistentVolumeClaimSpec'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubePersistentVolumeClaim"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubePersistentVolumeClaimProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubePersistentVolumeClaimList"
  },
  {
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubePersistentVolumeClaimProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubePersistentVolumeClaimListProps"
  },
  {
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "spec": {
      "type": "typing.Union[ForwardRef('PersistentVolumeClaimSpec'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubePersistentVolumeClaimProps"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubePersistentVolumeProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubePersistentVolumeList"
  },
  {
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubePersistentVolumeProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubePersistentVolumeListProps"
  },
  {
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "spec": {
      "type": "typing.Union[ForwardRef('PersistentVolumeSpec'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubePersistentVolumeProps"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "spec": {
      "type": "typing.Union[ForwardRef('PodSpec'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubePod"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "spec": {
      "type": "typing.Union[ForwardRef('PodDisruptionBudgetSpec'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubePodDisruptionBudget"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubePodDisruptionBudgetProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubePodDisruptionBudgetList"
  },
  {
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubePodDisruptionBudgetProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubePodDisruptionBudgetListProps"
  },
  {
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "spec": {
      "type": "typing.Union[ForwardRef('PodDisruptionBudgetSpec'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubePodDisruptionBudgetProps"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubePodProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubePodList"
  },
  {
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubePodProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubePodListProps"
  },
  {
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "spec": {
      "type": "typing.Union[ForwardRef('PodSpec'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubePodProps"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "template": {
      "type": "typing.Union[ForwardRef('PodTemplateSpec'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubePodTemplate"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubePodTemplateProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubePodTemplateList"
  },
  {
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubePodTemplateProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubePodTemplateListProps"
  },
  {
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "template": {
      "type": "typing.Union[ForwardRef('PodTemplateSpec'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubePodTemplateProps"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "value": {
      "type": "typing.Union[int, float]",
      "optional": false
    },
    "description": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "global_default": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "preemption_policy": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubePriorityClass"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubePriorityClassProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubePriorityClassList"
  },
  {
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubePriorityClassProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubePriorityClassListProps"
  },
  {
    "value": {
      "type": "typing.Union[int, float]",
      "optional": false
    },
    "description": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "global_default": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "preemption_policy": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubePriorityClassProps"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubePriorityLevelConfigurationV1Beta1Props'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubePriorityLevelConfigurationListV1Beta1"
  },
  {
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubePriorityLevelConfigurationV1Beta1Props'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubePriorityLevelConfigurationListV1Beta1Props"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubePriorityLevelConfigurationV1Beta2Props'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubePriorityLevelConfigurationListV1Beta2"
  },
  {
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubePriorityLevelConfigurationV1Beta2Props'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubePriorityLevelConfigurationListV1Beta2Props"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "spec": {
      "type": "typing.Union[ForwardRef('PriorityLevelConfigurationSpecV1Beta1'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubePriorityLevelConfigurationV1Beta1"
  },
  {
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "spec": {
      "type": "typing.Union[ForwardRef('PriorityLevelConfigurationSpecV1Beta1'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubePriorityLevelConfigurationV1Beta1Props"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "spec": {
      "type": "typing.Union[ForwardRef('PriorityLevelConfigurationSpecV1Beta2'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubePriorityLevelConfigurationV1Beta2"
  },
  {
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "spec": {
      "type": "typing.Union[ForwardRef('PriorityLevelConfigurationSpecV1Beta2'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubePriorityLevelConfigurationV1Beta2Props"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "spec": {
      "type": "typing.Union[ForwardRef('ReplicaSetSpec'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeReplicaSet"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeReplicaSetProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeReplicaSetList"
  },
  {
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeReplicaSetProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeReplicaSetListProps"
  },
  {
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "spec": {
      "type": "typing.Union[ForwardRef('ReplicaSetSpec'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeReplicaSetProps"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "spec": {
      "type": "typing.Union[ForwardRef('ReplicationControllerSpec'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeReplicationController"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeReplicationControllerProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeReplicationControllerList"
  },
  {
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeReplicationControllerProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeReplicationControllerListProps"
  },
  {
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "spec": {
      "type": "typing.Union[ForwardRef('ReplicationControllerSpec'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeReplicationControllerProps"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "spec": {
      "type": "typing.Union[ForwardRef('ResourceQuotaSpec'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeResourceQuota"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeResourceQuotaProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeResourceQuotaList"
  },
  {
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeResourceQuotaProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeResourceQuotaListProps"
  },
  {
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "spec": {
      "type": "typing.Union[ForwardRef('ResourceQuotaSpec'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeResourceQuotaProps"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "rules": {
      "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('PolicyRule'), typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeRole"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "role_ref": {
      "type": "typing.Union[ForwardRef('RoleRef'), typing.Dict[str, typing.Any]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "subjects": {
      "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('Subject'), typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeRoleBinding"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeRoleBindingProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeRoleBindingList"
  },
  {
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeRoleBindingProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeRoleBindingListProps"
  },
  {
    "role_ref": {
      "type": "typing.Union[ForwardRef('RoleRef'), typing.Dict[str, typing.Any]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "subjects": {
      "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('Subject'), typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeRoleBindingProps"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeRoleProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeRoleList"
  },
  {
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeRoleProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeRoleListProps"
  },
  {
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "rules": {
      "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('PolicyRule'), typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeRoleProps"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "handler": {
      "type": "<class 'str'>",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "overhead": {
      "type": "typing.Union[ForwardRef('Overhead'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "scheduling": {
      "type": "typing.Union[ForwardRef('Scheduling'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeRuntimeClass"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeRuntimeClassProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeRuntimeClassList"
  },
  {
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeRuntimeClassProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeRuntimeClassListProps"
  },
  {
    "handler": {
      "type": "<class 'str'>",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "overhead": {
      "type": "typing.Union[ForwardRef('Overhead'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "scheduling": {
      "type": "typing.Union[ForwardRef('Scheduling'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeRuntimeClassProps"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "spec": {
      "type": "typing.Union[ForwardRef('ScaleSpec'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeScale"
  },
  {
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "spec": {
      "type": "typing.Union[ForwardRef('ScaleSpec'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeScaleProps"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "data": {
      "type": "typing.Optional[typing.Mapping[str, str]]",
      "optional": true
    },
    "immutable": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "string_data": {
      "type": "typing.Optional[typing.Mapping[str, str]]",
      "optional": true
    },
    "type": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeSecret"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeSecretProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeSecretList"
  },
  {
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeSecretProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeSecretListProps"
  },
  {
    "data": {
      "type": "typing.Optional[typing.Mapping[str, str]]",
      "optional": true
    },
    "immutable": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "string_data": {
      "type": "typing.Optional[typing.Mapping[str, str]]",
      "optional": true
    },
    "type": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeSecretProps"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "spec": {
      "type": "typing.Union[ForwardRef('SelfSubjectAccessReviewSpec'), typing.Dict[str, typing.Any]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeSelfSubjectAccessReview"
  },
  {
    "spec": {
      "type": "typing.Union[ForwardRef('SelfSubjectAccessReviewSpec'), typing.Dict[str, typing.Any]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeSelfSubjectAccessReviewProps"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "spec": {
      "type": "typing.Union[ForwardRef('SelfSubjectRulesReviewSpec'), typing.Dict[str, typing.Any]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeSelfSubjectRulesReview"
  },
  {
    "spec": {
      "type": "typing.Union[ForwardRef('SelfSubjectRulesReviewSpec'), typing.Dict[str, typing.Any]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeSelfSubjectRulesReviewProps"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "spec": {
      "type": "typing.Union[ForwardRef('ServiceSpec'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeService"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "automount_service_account_token": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "image_pull_secrets": {
      "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('LocalObjectReference'), typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "secrets": {
      "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('ObjectReference'), typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeServiceAccount"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeServiceAccountProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeServiceAccountList"
  },
  {
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeServiceAccountProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeServiceAccountListProps"
  },
  {
    "automount_service_account_token": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "image_pull_secrets": {
      "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('LocalObjectReference'), typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "secrets": {
      "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('ObjectReference'), typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeServiceAccountProps"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeServiceProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeServiceList"
  },
  {
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeServiceProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeServiceListProps"
  },
  {
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "spec": {
      "type": "typing.Union[ForwardRef('ServiceSpec'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeServiceProps"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "spec": {
      "type": "typing.Union[ForwardRef('StatefulSetSpec'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeStatefulSet"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeStatefulSetProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeStatefulSetList"
  },
  {
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeStatefulSetProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeStatefulSetListProps"
  },
  {
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "spec": {
      "type": "typing.Union[ForwardRef('StatefulSetSpec'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeStatefulSetProps"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "code": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "details": {
      "type": "typing.Union[ForwardRef('StatusDetails'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "message": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "reason": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeStatus"
  },
  {
    "code": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "details": {
      "type": "typing.Union[ForwardRef('StatusDetails'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "message": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "reason": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeStatusProps"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "provisioner": {
      "type": "<class 'str'>",
      "optional": false
    },
    "allowed_topologies": {
      "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('TopologySelectorTerm'), typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "allow_volume_expansion": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "mount_options": {
      "type": "typing.Optional[typing.Sequence[str]]",
      "optional": true
    },
    "parameters": {
      "type": "typing.Optional[typing.Mapping[str, str]]",
      "optional": true
    },
    "reclaim_policy": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "volume_binding_mode": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeStorageClass"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeStorageClassProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeStorageClassList"
  },
  {
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeStorageClassProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeStorageClassListProps"
  },
  {
    "provisioner": {
      "type": "<class 'str'>",
      "optional": false
    },
    "allowed_topologies": {
      "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('TopologySelectorTerm'), typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "allow_volume_expansion": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "mount_options": {
      "type": "typing.Optional[typing.Sequence[str]]",
      "optional": true
    },
    "parameters": {
      "type": "typing.Optional[typing.Mapping[str, str]]",
      "optional": true
    },
    "reclaim_policy": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "volume_binding_mode": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeStorageClassProps"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeStorageVersionV1Alpha1Props'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeStorageVersionListV1Alpha1"
  },
  {
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeStorageVersionV1Alpha1Props'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeStorageVersionListV1Alpha1Props"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "spec": {
      "type": "typing.Any",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeStorageVersionV1Alpha1"
  },
  {
    "spec": {
      "type": "typing.Any",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeStorageVersionV1Alpha1Props"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "spec": {
      "type": "typing.Union[ForwardRef('SubjectAccessReviewSpec'), typing.Dict[str, typing.Any]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeSubjectAccessReview"
  },
  {
    "spec": {
      "type": "typing.Union[ForwardRef('SubjectAccessReviewSpec'), typing.Dict[str, typing.Any]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeSubjectAccessReviewProps"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "spec": {
      "type": "typing.Union[ForwardRef('TokenRequestSpec'), typing.Dict[str, typing.Any]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeTokenRequest"
  },
  {
    "spec": {
      "type": "typing.Union[ForwardRef('TokenRequestSpec'), typing.Dict[str, typing.Any]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeTokenRequestProps"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "spec": {
      "type": "typing.Union[ForwardRef('TokenReviewSpec'), typing.Dict[str, typing.Any]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeTokenReview"
  },
  {
    "spec": {
      "type": "typing.Union[ForwardRef('TokenReviewSpec'), typing.Dict[str, typing.Any]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeTokenReviewProps"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "webhooks": {
      "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('ValidatingWebhook'), typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeValidatingWebhookConfiguration"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeValidatingWebhookConfigurationProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeValidatingWebhookConfigurationList"
  },
  {
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeValidatingWebhookConfigurationProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeValidatingWebhookConfigurationListProps"
  },
  {
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "webhooks": {
      "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('ValidatingWebhook'), typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeValidatingWebhookConfigurationProps"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "spec": {
      "type": "typing.Union[ForwardRef('VolumeAttachmentSpec'), typing.Dict[str, typing.Any]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeVolumeAttachment"
  },
  {
    "scope": {
      "type": "<class 'constructs.Construct'>",
      "optional": false
    },
    "id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeVolumeAttachmentProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": [
      "ApiObject",
      "Construct"
    ],
    "name": "KubeVolumeAttachmentList"
  },
  {
    "items": {
      "type": "typing.Sequence[typing.Union[ForwardRef('KubeVolumeAttachmentProps'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ListMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeVolumeAttachmentListProps"
  },
  {
    "spec": {
      "type": "typing.Union[ForwardRef('VolumeAttachmentSpec'), typing.Dict[str, typing.Any]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[ForwardRef('ObjectMeta'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "KubeVolumeAttachmentProps"
  },
  {
    "match_expressions": {
      "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('LabelSelectorRequirement'), typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "match_labels": {
      "type": "typing.Optional[typing.Mapping[str, str]]",
      "optional": true
    },
    "ancestors": null,
    "name": "LabelSelector"
  },
  {
    "key": {
      "type": "<class 'str'>",
      "optional": false
    },
    "operator": {
      "type": "<class 'str'>",
      "optional": false
    },
    "values": {
      "type": "typing.Optional[typing.Sequence[str]]",
      "optional": true
    },
    "ancestors": null,
    "name": "LabelSelectorRequirement"
  },
  {
    "acquire_time": {
      "type": "typing.Optional[datetime.datetime]",
      "optional": true
    },
    "holder_identity": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "lease_duration_seconds": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "lease_transitions": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "renew_time": {
      "type": "typing.Optional[datetime.datetime]",
      "optional": true
    },
    "ancestors": null,
    "name": "LeaseSpec"
  },
  {
    "post_start": {
      "type": "typing.Union[ForwardRef('LifecycleHandler'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "pre_stop": {
      "type": "typing.Union[ForwardRef('LifecycleHandler'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "Lifecycle"
  },
  {
    "exec": {
      "type": "typing.Union[cdk8s_plus_25.k8s.ExecAction, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "http_get": {
      "type": "typing.Union[cdk8s_plus_25.k8s.HttpGetAction, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "tcp_socket": {
      "type": "typing.Union[ForwardRef('TcpSocketAction'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "LifecycleHandler"
  },
  {
    "type": {
      "type": "<class 'str'>",
      "optional": false
    },
    "default": {
      "type": "typing.Optional[typing.Mapping[str, ForwardRef('Quantity')]]",
      "optional": true
    },
    "default_request": {
      "type": "typing.Optional[typing.Mapping[str, ForwardRef('Quantity')]]",
      "optional": true
    },
    "max": {
      "type": "typing.Optional[typing.Mapping[str, ForwardRef('Quantity')]]",
      "optional": true
    },
    "max_limit_request_ratio": {
      "type": "typing.Optional[typing.Mapping[str, ForwardRef('Quantity')]]",
      "optional": true
    },
    "min": {
      "type": "typing.Optional[typing.Mapping[str, ForwardRef('Quantity')]]",
      "optional": true
    },
    "ancestors": null,
    "name": "LimitRangeItem"
  },
  {
    "limits": {
      "type": "typing.Sequence[typing.Union[cdk8s_plus_25.k8s.LimitRangeItem, typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "ancestors": null,
    "name": "LimitRangeSpec"
  },
  {
    "type": {
      "type": "<class 'str'>",
      "optional": false
    },
    "queuing": {
      "type": "typing.Union[ForwardRef('QueuingConfigurationV1Beta1'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "LimitResponseV1Beta1"
  },
  {
    "type": {
      "type": "<class 'str'>",
      "optional": false
    },
    "queuing": {
      "type": "typing.Union[ForwardRef('QueuingConfigurationV1Beta2'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "LimitResponseV1Beta2"
  },
  {
    "assured_concurrency_shares": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "limit_response": {
      "type": "typing.Union[cdk8s_plus_25.k8s.LimitResponseV1Beta1, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "LimitedPriorityLevelConfigurationV1Beta1"
  },
  {
    "assured_concurrency_shares": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "limit_response": {
      "type": "typing.Union[cdk8s_plus_25.k8s.LimitResponseV1Beta2, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "LimitedPriorityLevelConfigurationV1Beta2"
  },
  {
    "continue_": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "remaining_item_count": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "resource_version": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "self_link": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null,
    "name": "ListMeta"
  },
  {
    "name": "LocalObjectReference",
    "ancestors": null
  },
  {
    "path": {
      "type": "<class 'str'>",
      "optional": false
    },
    "fs_type": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null,
    "name": "LocalVolumeSource"
  },
  {
    "api_version": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "fields_type": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "fields_v1": {
      "type": "typing.Any",
      "optional": true
    },
    "manager": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "operation": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "subresource": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "time": {
      "type": "typing.Optional[datetime.datetime]",
      "optional": true
    },
    "ancestors": null,
    "name": "ManagedFieldsEntry"
  },
  {
    "name": "MetricIdentifierV2",
    "selector": {
      "type": "typing.Union[cdk8s_plus_25.k8s.LabelSelector, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null
  },
  {
    "name": "MetricIdentifierV2Beta2",
    "selector": {
      "type": "typing.Union[cdk8s_plus_25.k8s.LabelSelector, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null
  },
  {
    "type": {
      "type": "<class 'str'>",
      "optional": false
    },
    "container_resource": {
      "type": "typing.Union[cdk8s_plus_25.k8s.ContainerResourceMetricSourceV2, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "external": {
      "type": "typing.Union[cdk8s_plus_25.k8s.ExternalMetricSourceV2, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "object": {
      "type": "typing.Union[ForwardRef('ObjectMetricSourceV2'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "pods": {
      "type": "typing.Union[ForwardRef('PodsMetricSourceV2'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "resource": {
      "type": "typing.Union[ForwardRef('ResourceMetricSourceV2'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "MetricSpecV2"
  },
  {
    "type": {
      "type": "<class 'str'>",
      "optional": false
    },
    "container_resource": {
      "type": "typing.Union[cdk8s_plus_25.k8s.ContainerResourceMetricSourceV2Beta2, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "external": {
      "type": "typing.Union[cdk8s_plus_25.k8s.ExternalMetricSourceV2Beta2, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "object": {
      "type": "typing.Union[ForwardRef('ObjectMetricSourceV2Beta2'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "pods": {
      "type": "typing.Union[ForwardRef('PodsMetricSourceV2Beta2'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "resource": {
      "type": "typing.Union[ForwardRef('ResourceMetricSourceV2Beta2'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "MetricSpecV2Beta2"
  },
  {
    "type": {
      "type": "<class 'str'>",
      "optional": false
    },
    "average_utilization": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "average_value": {
      "type": "typing.Optional[ForwardRef('Quantity')]",
      "optional": true
    },
    "value": {
      "type": "typing.Optional[ForwardRef('Quantity')]",
      "optional": true
    },
    "ancestors": null,
    "name": "MetricTargetV2"
  },
  {
    "type": {
      "type": "<class 'str'>",
      "optional": false
    },
    "average_utilization": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "average_value": {
      "type": "typing.Optional[ForwardRef('Quantity')]",
      "optional": true
    },
    "value": {
      "type": "typing.Optional[ForwardRef('Quantity')]",
      "optional": true
    },
    "ancestors": null,
    "name": "MetricTargetV2Beta2"
  },
  {
    "admission_review_versions": {
      "type": "typing.Sequence[str]",
      "optional": false
    },
    "client_config": {
      "type": "typing.Union[ForwardRef('WebhookClientConfig'), typing.Dict[str, typing.Any]]",
      "optional": false
    },
    "name": "MutatingWebhook",
    "side_effects": {
      "type": "<class 'str'>",
      "optional": false
    },
    "failure_policy": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "match_policy": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "namespace_selector": {
      "type": "typing.Union[cdk8s_plus_25.k8s.LabelSelector, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "object_selector": {
      "type": "typing.Union[cdk8s_plus_25.k8s.LabelSelector, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "reinvocation_policy": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "rules": {
      "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('RuleWithOperations'), typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "timeout_seconds": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "ancestors": null
  },
  {
    "finalizers": {
      "type": "typing.Optional[typing.Sequence[str]]",
      "optional": true
    },
    "ancestors": null,
    "name": "NamespaceSpec"
  },
  {
    "ports": {
      "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('NetworkPolicyPort'), typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "to": {
      "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('NetworkPolicyPeer'), typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "ancestors": null,
    "name": "NetworkPolicyEgressRule"
  },
  {
    "from_": {
      "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('NetworkPolicyPeer'), typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "ports": {
      "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('NetworkPolicyPort'), typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "ancestors": null,
    "name": "NetworkPolicyIngressRule"
  },
  {
    "ip_block": {
      "type": "typing.Union[cdk8s_plus_25.k8s.IpBlock, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "namespace_selector": {
      "type": "typing.Union[cdk8s_plus_25.k8s.LabelSelector, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "pod_selector": {
      "type": "typing.Union[cdk8s_plus_25.k8s.LabelSelector, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "NetworkPolicyPeer"
  },
  {
    "end_port": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "port": {
      "type": "typing.Optional[cdk8s_plus_25.k8s.IntOrString]",
      "optional": true
    },
    "protocol": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null,
    "name": "NetworkPolicyPort"
  },
  {
    "pod_selector": {
      "type": "typing.Union[cdk8s_plus_25.k8s.LabelSelector, typing.Dict[str, typing.Any]]",
      "optional": false
    },
    "egress": {
      "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.k8s.NetworkPolicyEgressRule, typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "ingress": {
      "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.k8s.NetworkPolicyIngressRule, typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "policy_types": {
      "type": "typing.Optional[typing.Sequence[str]]",
      "optional": true
    },
    "ancestors": null,
    "name": "NetworkPolicySpec"
  },
  {
    "path": {
      "type": "<class 'str'>",
      "optional": false
    },
    "server": {
      "type": "<class 'str'>",
      "optional": false
    },
    "read_only": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "ancestors": null,
    "name": "NfsVolumeSource"
  },
  {
    "preferred_during_scheduling_ignored_during_execution": {
      "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('PreferredSchedulingTerm'), typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "required_during_scheduling_ignored_during_execution": {
      "type": "typing.Union[ForwardRef('NodeSelector'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "NodeAffinity"
  },
  {
    "config_map": {
      "type": "typing.Union[cdk8s_plus_25.k8s.ConfigMapNodeConfigSource, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "NodeConfigSource"
  },
  {
    "node_selector_terms": {
      "type": "typing.Sequence[typing.Union[ForwardRef('NodeSelectorTerm'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "ancestors": null,
    "name": "NodeSelector"
  },
  {
    "key": {
      "type": "<class 'str'>",
      "optional": false
    },
    "operator": {
      "type": "<class 'str'>",
      "optional": false
    },
    "values": {
      "type": "typing.Optional[typing.Sequence[str]]",
      "optional": true
    },
    "ancestors": null,
    "name": "NodeSelectorRequirement"
  },
  {
    "match_expressions": {
      "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.k8s.NodeSelectorRequirement, typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "match_fields": {
      "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.k8s.NodeSelectorRequirement, typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "ancestors": null,
    "name": "NodeSelectorTerm"
  },
  {
    "config_source": {
      "type": "typing.Union[cdk8s_plus_25.k8s.NodeConfigSource, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "external_id": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "pod_cidr": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "pod_cid_rs": {
      "type": "typing.Optional[typing.Sequence[str]]",
      "optional": true
    },
    "provider_id": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "taints": {
      "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('Taint'), typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "unschedulable": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "ancestors": null,
    "name": "NodeSpec"
  },
  {
    "path": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "verb": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null,
    "name": "NonResourceAttributes"
  },
  {
    "non_resource_ur_ls": {
      "type": "typing.Sequence[str]",
      "optional": false
    },
    "verbs": {
      "type": "typing.Sequence[str]",
      "optional": false
    },
    "ancestors": null,
    "name": "NonResourcePolicyRuleV1Beta1"
  },
  {
    "non_resource_ur_ls": {
      "type": "typing.Sequence[str]",
      "optional": false
    },
    "verbs": {
      "type": "typing.Sequence[str]",
      "optional": false
    },
    "ancestors": null,
    "name": "NonResourcePolicyRuleV1Beta2"
  },
  {
    "field_path": {
      "type": "<class 'str'>",
      "optional": false
    },
    "api_version": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null,
    "name": "ObjectFieldSelector"
  },
  {
    "annotations": {
      "type": "typing.Optional[typing.Mapping[str, str]]",
      "optional": true
    },
    "creation_timestamp": {
      "type": "typing.Optional[datetime.datetime]",
      "optional": true
    },
    "deletion_grace_period_seconds": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "deletion_timestamp": {
      "type": "typing.Optional[datetime.datetime]",
      "optional": true
    },
    "finalizers": {
      "type": "typing.Optional[typing.Sequence[str]]",
      "optional": true
    },
    "generate_name": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "generation": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "labels": {
      "type": "typing.Optional[typing.Mapping[str, str]]",
      "optional": true
    },
    "managed_fields": {
      "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.k8s.ManagedFieldsEntry, typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "name": "ObjectMeta",
    "namespace": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "owner_references": {
      "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('OwnerReference'), typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "resource_version": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "self_link": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "uid": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null
  },
  {
    "described_object": {
      "type": "typing.Union[cdk8s_plus_25.k8s.CrossVersionObjectReferenceV2, typing.Dict[str, typing.Any]]",
      "optional": false
    },
    "metric": {
      "type": "typing.Union[cdk8s_plus_25.k8s.MetricIdentifierV2, typing.Dict[str, typing.Any]]",
      "optional": false
    },
    "target": {
      "type": "typing.Union[cdk8s_plus_25.k8s.MetricTargetV2, typing.Dict[str, typing.Any]]",
      "optional": false
    },
    "ancestors": null,
    "name": "ObjectMetricSourceV2"
  },
  {
    "described_object": {
      "type": "typing.Union[cdk8s_plus_25.k8s.CrossVersionObjectReferenceV2Beta2, typing.Dict[str, typing.Any]]",
      "optional": false
    },
    "metric": {
      "type": "typing.Union[cdk8s_plus_25.k8s.MetricIdentifierV2Beta2, typing.Dict[str, typing.Any]]",
      "optional": false
    },
    "target": {
      "type": "typing.Union[cdk8s_plus_25.k8s.MetricTargetV2Beta2, typing.Dict[str, typing.Any]]",
      "optional": false
    },
    "ancestors": null,
    "name": "ObjectMetricSourceV2Beta2"
  },
  {
    "api_version": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "field_path": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "kind": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "name": "ObjectReference",
    "namespace": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "resource_version": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "uid": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null
  },
  {
    "pod_fixed": {
      "type": "typing.Optional[typing.Mapping[str, ForwardRef('Quantity')]]",
      "optional": true
    },
    "ancestors": null,
    "name": "Overhead"
  },
  {
    "api_version": {
      "type": "<class 'str'>",
      "optional": false
    },
    "kind": {
      "type": "<class 'str'>",
      "optional": false
    },
    "name": "OwnerReference",
    "uid": {
      "type": "<class 'str'>",
      "optional": false
    },
    "block_owner_deletion": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "controller": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "ancestors": null
  },
  {
    "access_modes": {
      "type": "typing.Optional[typing.Sequence[str]]",
      "optional": true
    },
    "data_source": {
      "type": "typing.Union[ForwardRef('TypedLocalObjectReference'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "data_source_ref": {
      "type": "typing.Union[ForwardRef('TypedLocalObjectReference'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "resources": {
      "type": "typing.Union[ForwardRef('ResourceRequirements'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "selector": {
      "type": "typing.Union[cdk8s_plus_25.k8s.LabelSelector, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "storage_class_name": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "volume_mode": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "volume_name": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null,
    "name": "PersistentVolumeClaimSpec"
  },
  {
    "spec": {
      "type": "typing.Union[cdk8s_plus_25.k8s.PersistentVolumeClaimSpec, typing.Dict[str, typing.Any]]",
      "optional": false
    },
    "metadata": {
      "type": "typing.Union[cdk8s_plus_25.k8s.ObjectMeta, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "PersistentVolumeClaimTemplate"
  },
  {
    "claim_name": {
      "type": "<class 'str'>",
      "optional": false
    },
    "read_only": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "ancestors": null,
    "name": "PersistentVolumeClaimVolumeSource"
  },
  {
    "access_modes": {
      "type": "typing.Optional[typing.Sequence[str]]",
      "optional": true
    },
    "aws_elastic_block_store": {
      "type": "typing.Union[cdk8s_plus_25.k8s.AwsElasticBlockStoreVolumeSource, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "azure_disk": {
      "type": "typing.Union[cdk8s_plus_25.k8s.AzureDiskVolumeSource, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "azure_file": {
      "type": "typing.Union[cdk8s_plus_25.k8s.AzureFilePersistentVolumeSource, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "capacity": {
      "type": "typing.Optional[typing.Mapping[str, ForwardRef('Quantity')]]",
      "optional": true
    },
    "cephfs": {
      "type": "typing.Union[cdk8s_plus_25.k8s.CephFsPersistentVolumeSource, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "cinder": {
      "type": "typing.Union[cdk8s_plus_25.k8s.CinderPersistentVolumeSource, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "claim_ref": {
      "type": "typing.Union[cdk8s_plus_25.k8s.ObjectReference, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "csi": {
      "type": "typing.Union[cdk8s_plus_25.k8s.CsiPersistentVolumeSource, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "fc": {
      "type": "typing.Union[cdk8s_plus_25.k8s.FcVolumeSource, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "flex_volume": {
      "type": "typing.Union[cdk8s_plus_25.k8s.FlexPersistentVolumeSource, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "flocker": {
      "type": "typing.Union[cdk8s_plus_25.k8s.FlockerVolumeSource, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "gce_persistent_disk": {
      "type": "typing.Union[cdk8s_plus_25.k8s.GcePersistentDiskVolumeSource, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "glusterfs": {
      "type": "typing.Union[cdk8s_plus_25.k8s.GlusterfsPersistentVolumeSource, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "host_path": {
      "type": "typing.Union[cdk8s_plus_25.k8s.HostPathVolumeSource, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "iscsi": {
      "type": "typing.Union[cdk8s_plus_25.k8s.IscsiPersistentVolumeSource, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "local": {
      "type": "typing.Union[cdk8s_plus_25.k8s.LocalVolumeSource, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "mount_options": {
      "type": "typing.Optional[typing.Sequence[str]]",
      "optional": true
    },
    "nfs": {
      "type": "typing.Union[cdk8s_plus_25.k8s.NfsVolumeSource, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "node_affinity": {
      "type": "typing.Union[ForwardRef('VolumeNodeAffinity'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "persistent_volume_reclaim_policy": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "photon_persistent_disk": {
      "type": "typing.Union[ForwardRef('PhotonPersistentDiskVolumeSource'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "portworx_volume": {
      "type": "typing.Union[ForwardRef('PortworxVolumeSource'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "quobyte": {
      "type": "typing.Union[ForwardRef('QuobyteVolumeSource'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "rbd": {
      "type": "typing.Union[ForwardRef('RbdPersistentVolumeSource'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "scale_io": {
      "type": "typing.Union[ForwardRef('ScaleIoPersistentVolumeSource'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "storage_class_name": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "storageos": {
      "type": "typing.Union[ForwardRef('StorageOsPersistentVolumeSource'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "volume_mode": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "vsphere_volume": {
      "type": "typing.Union[ForwardRef('VsphereVirtualDiskVolumeSource'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "PersistentVolumeSpec"
  },
  {
    "pd_id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "fs_type": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null,
    "name": "PhotonPersistentDiskVolumeSource"
  },
  {
    "preferred_during_scheduling_ignored_during_execution": {
      "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('WeightedPodAffinityTerm'), typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "required_during_scheduling_ignored_during_execution": {
      "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('PodAffinityTerm'), typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "ancestors": null,
    "name": "PodAffinity"
  },
  {
    "topology_key": {
      "type": "<class 'str'>",
      "optional": false
    },
    "label_selector": {
      "type": "typing.Union[cdk8s_plus_25.k8s.LabelSelector, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "namespaces": {
      "type": "typing.Optional[typing.Sequence[str]]",
      "optional": true
    },
    "namespace_selector": {
      "type": "typing.Union[cdk8s_plus_25.k8s.LabelSelector, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "PodAffinityTerm"
  },
  {
    "preferred_during_scheduling_ignored_during_execution": {
      "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('WeightedPodAffinityTerm'), typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "required_during_scheduling_ignored_during_execution": {
      "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.k8s.PodAffinityTerm, typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "ancestors": null,
    "name": "PodAntiAffinity"
  },
  {
    "max_unavailable": {
      "type": "typing.Optional[cdk8s_plus_25.k8s.IntOrString]",
      "optional": true
    },
    "min_available": {
      "type": "typing.Optional[cdk8s_plus_25.k8s.IntOrString]",
      "optional": true
    },
    "selector": {
      "type": "typing.Union[cdk8s_plus_25.k8s.LabelSelector, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "PodDisruptionBudgetSpec"
  },
  {
    "nameservers": {
      "type": "typing.Optional[typing.Sequence[str]]",
      "optional": true
    },
    "options": {
      "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('PodDnsConfigOption'), typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "searches": {
      "type": "typing.Optional[typing.Sequence[str]]",
      "optional": true
    },
    "ancestors": null,
    "name": "PodDnsConfig"
  },
  {
    "name": "PodDnsConfigOption",
    "value": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null
  },
  {
    "rules": {
      "type": "typing.Sequence[typing.Union[ForwardRef('PodFailurePolicyRule'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "ancestors": null,
    "name": "PodFailurePolicy"
  },
  {
    "operator": {
      "type": "<class 'str'>",
      "optional": false
    },
    "values": {
      "type": "typing.Sequence[typing.Union[int, float]]",
      "optional": false
    },
    "container_name": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null,
    "name": "PodFailurePolicyOnExitCodesRequirement"
  },
  {
    "status": {
      "type": "<class 'str'>",
      "optional": false
    },
    "type": {
      "type": "<class 'str'>",
      "optional": false
    },
    "ancestors": null,
    "name": "PodFailurePolicyOnPodConditionsPattern"
  },
  {
    "action": {
      "type": "<class 'str'>",
      "optional": false
    },
    "on_pod_conditions": {
      "type": "typing.Sequence[typing.Union[cdk8s_plus_25.k8s.PodFailurePolicyOnPodConditionsPattern, typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "on_exit_codes": {
      "type": "typing.Union[cdk8s_plus_25.k8s.PodFailurePolicyOnExitCodesRequirement, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "PodFailurePolicyRule"
  },
  {
    "name": "PodOs",
    "ancestors": null
  },
  {
    "condition_type": {
      "type": "<class 'str'>",
      "optional": false
    },
    "ancestors": null,
    "name": "PodReadinessGate"
  },
  {
    "fs_group": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "fs_group_change_policy": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "run_as_group": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "run_as_non_root": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "run_as_user": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "seccomp_profile": {
      "type": "typing.Union[ForwardRef('SeccompProfile'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "se_linux_options": {
      "type": "typing.Union[ForwardRef('SeLinuxOptions'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "supplemental_groups": {
      "type": "typing.Optional[typing.Sequence[typing.Union[int, float]]]",
      "optional": true
    },
    "sysctls": {
      "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('Sysctl'), typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "windows_options": {
      "type": "typing.Union[ForwardRef('WindowsSecurityContextOptions'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "PodSecurityContext"
  },
  {
    "containers": {
      "type": "typing.Sequence[typing.Union[cdk8s_plus_25.k8s.Container, typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "active_deadline_seconds": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "affinity": {
      "type": "typing.Union[cdk8s_plus_25.k8s.Affinity, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "automount_service_account_token": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "dns_config": {
      "type": "typing.Union[cdk8s_plus_25.k8s.PodDnsConfig, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "dns_policy": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "enable_service_links": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "ephemeral_containers": {
      "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.k8s.EphemeralContainer, typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "host_aliases": {
      "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.k8s.HostAlias, typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "host_ipc": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "hostname": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "host_network": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "host_pid": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "host_users": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "image_pull_secrets": {
      "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.k8s.LocalObjectReference, typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "init_containers": {
      "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.k8s.Container, typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "node_name": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "node_selector": {
      "type": "typing.Optional[typing.Mapping[str, str]]",
      "optional": true
    },
    "os": {
      "type": "typing.Union[cdk8s_plus_25.k8s.PodOs, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "overhead": {
      "type": "typing.Optional[typing.Mapping[str, ForwardRef('Quantity')]]",
      "optional": true
    },
    "preemption_policy": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "priority": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "priority_class_name": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "readiness_gates": {
      "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.k8s.PodReadinessGate, typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "restart_policy": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "runtime_class_name": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "scheduler_name": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "security_context": {
      "type": "typing.Union[cdk8s_plus_25.k8s.PodSecurityContext, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "service_account": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "service_account_name": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "set_hostname_as_fqdn": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "share_process_namespace": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "subdomain": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "termination_grace_period_seconds": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "tolerations": {
      "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('Toleration'), typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "topology_spread_constraints": {
      "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('TopologySpreadConstraint'), typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "volumes": {
      "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('Volume'), typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "ancestors": null,
    "name": "PodSpec"
  },
  {
    "metadata": {
      "type": "typing.Union[cdk8s_plus_25.k8s.ObjectMeta, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "spec": {
      "type": "typing.Union[cdk8s_plus_25.k8s.PodSpec, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "PodTemplateSpec"
  },
  {
    "metric": {
      "type": "typing.Union[cdk8s_plus_25.k8s.MetricIdentifierV2, typing.Dict[str, typing.Any]]",
      "optional": false
    },
    "target": {
      "type": "typing.Union[cdk8s_plus_25.k8s.MetricTargetV2, typing.Dict[str, typing.Any]]",
      "optional": false
    },
    "ancestors": null,
    "name": "PodsMetricSourceV2"
  },
  {
    "metric": {
      "type": "typing.Union[cdk8s_plus_25.k8s.MetricIdentifierV2Beta2, typing.Dict[str, typing.Any]]",
      "optional": false
    },
    "target": {
      "type": "typing.Union[cdk8s_plus_25.k8s.MetricTargetV2Beta2, typing.Dict[str, typing.Any]]",
      "optional": false
    },
    "ancestors": null,
    "name": "PodsMetricSourceV2Beta2"
  },
  {
    "verbs": {
      "type": "typing.Sequence[str]",
      "optional": false
    },
    "api_groups": {
      "type": "typing.Optional[typing.Sequence[str]]",
      "optional": true
    },
    "non_resource_ur_ls": {
      "type": "typing.Optional[typing.Sequence[str]]",
      "optional": true
    },
    "resource_names": {
      "type": "typing.Optional[typing.Sequence[str]]",
      "optional": true
    },
    "resources": {
      "type": "typing.Optional[typing.Sequence[str]]",
      "optional": true
    },
    "ancestors": null,
    "name": "PolicyRule"
  },
  {
    "subjects": {
      "type": "typing.Sequence[typing.Union[ForwardRef('SubjectV1Beta1'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "non_resource_rules": {
      "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.k8s.NonResourcePolicyRuleV1Beta1, typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "resource_rules": {
      "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('ResourcePolicyRuleV1Beta1'), typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "ancestors": null,
    "name": "PolicyRulesWithSubjectsV1Beta1"
  },
  {
    "subjects": {
      "type": "typing.Sequence[typing.Union[ForwardRef('SubjectV1Beta2'), typing.Dict[str, typing.Any]]]",
      "optional": false
    },
    "non_resource_rules": {
      "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.k8s.NonResourcePolicyRuleV1Beta2, typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "resource_rules": {
      "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('ResourcePolicyRuleV1Beta2'), typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "ancestors": null,
    "name": "PolicyRulesWithSubjectsV1Beta2"
  },
  {
    "volume_id": {
      "type": "<class 'str'>",
      "optional": false
    },
    "fs_type": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "read_only": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "ancestors": null,
    "name": "PortworxVolumeSource"
  },
  {
    "resource_version": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "uid": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null,
    "name": "Preconditions"
  },
  {
    "preference": {
      "type": "typing.Union[cdk8s_plus_25.k8s.NodeSelectorTerm, typing.Dict[str, typing.Any]]",
      "optional": false
    },
    "weight": {
      "type": "typing.Union[int, float]",
      "optional": false
    },
    "ancestors": null,
    "name": "PreferredSchedulingTerm"
  },
  {
    "name": "PriorityLevelConfigurationReferenceV1Beta1",
    "ancestors": null
  },
  {
    "name": "PriorityLevelConfigurationReferenceV1Beta2",
    "ancestors": null
  },
  {
    "type": {
      "type": "<class 'str'>",
      "optional": false
    },
    "limited": {
      "type": "typing.Union[cdk8s_plus_25.k8s.LimitedPriorityLevelConfigurationV1Beta1, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "PriorityLevelConfigurationSpecV1Beta1"
  },
  {
    "type": {
      "type": "<class 'str'>",
      "optional": false
    },
    "limited": {
      "type": "typing.Union[cdk8s_plus_25.k8s.LimitedPriorityLevelConfigurationV1Beta2, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "PriorityLevelConfigurationSpecV1Beta2"
  },
  {
    "exec": {
      "type": "typing.Union[cdk8s_plus_25.k8s.ExecAction, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "failure_threshold": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "grpc": {
      "type": "typing.Union[cdk8s_plus_25.k8s.GrpcAction, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "http_get": {
      "type": "typing.Union[cdk8s_plus_25.k8s.HttpGetAction, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "initial_delay_seconds": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "period_seconds": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "success_threshold": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "tcp_socket": {
      "type": "typing.Union[ForwardRef('TcpSocketAction'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "termination_grace_period_seconds": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "timeout_seconds": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "Probe"
  },
  {
    "default_mode": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "sources": {
      "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('VolumeProjection'), typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "ancestors": null,
    "name": "ProjectedVolumeSource"
  },
  {
    "args": {
      "type": "No type annotation",
      "optional": false
    },
    "kwargs": {
      "type": "No type annotation",
      "optional": false
    },
    "ancestors": null,
    "name": "Quantity"
  },
  {
    "hand_size": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "queue_length_limit": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "queues": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "QueuingConfigurationV1Beta1"
  },
  {
    "hand_size": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "queue_length_limit": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "queues": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "QueuingConfigurationV1Beta2"
  },
  {
    "registry": {
      "type": "<class 'str'>",
      "optional": false
    },
    "volume": {
      "type": "<class 'str'>",
      "optional": false
    },
    "group": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "read_only": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "tenant": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "user": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null,
    "name": "QuobyteVolumeSource"
  },
  {
    "image": {
      "type": "<class 'str'>",
      "optional": false
    },
    "monitors": {
      "type": "typing.Sequence[str]",
      "optional": false
    },
    "fs_type": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "keyring": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "pool": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "read_only": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "secret_ref": {
      "type": "typing.Union[ForwardRef('SecretReference'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "user": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null,
    "name": "RbdPersistentVolumeSource"
  },
  {
    "image": {
      "type": "<class 'str'>",
      "optional": false
    },
    "monitors": {
      "type": "typing.Sequence[str]",
      "optional": false
    },
    "fs_type": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "keyring": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "pool": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "read_only": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "secret_ref": {
      "type": "typing.Union[cdk8s_plus_25.k8s.LocalObjectReference, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "user": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null,
    "name": "RbdVolumeSource"
  },
  {
    "selector": {
      "type": "typing.Union[cdk8s_plus_25.k8s.LabelSelector, typing.Dict[str, typing.Any]]",
      "optional": false
    },
    "min_ready_seconds": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "replicas": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "template": {
      "type": "typing.Union[cdk8s_plus_25.k8s.PodTemplateSpec, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "ReplicaSetSpec"
  },
  {
    "min_ready_seconds": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "replicas": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "selector": {
      "type": "typing.Optional[typing.Mapping[str, str]]",
      "optional": true
    },
    "template": {
      "type": "typing.Union[cdk8s_plus_25.k8s.PodTemplateSpec, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "ReplicationControllerSpec"
  },
  {
    "group": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "name": "ResourceAttributes",
    "namespace": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "resource": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "subresource": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "verb": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "version": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null
  },
  {
    "resource": {
      "type": "<class 'str'>",
      "optional": false
    },
    "container_name": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "divisor": {
      "type": "typing.Optional[cdk8s_plus_25.k8s.Quantity]",
      "optional": true
    },
    "ancestors": null,
    "name": "ResourceFieldSelector"
  },
  {
    "name": "ResourceMetricSourceV2",
    "target": {
      "type": "typing.Union[cdk8s_plus_25.k8s.MetricTargetV2, typing.Dict[str, typing.Any]]",
      "optional": false
    },
    "ancestors": null
  },
  {
    "name": "ResourceMetricSourceV2Beta2",
    "target": {
      "type": "typing.Union[cdk8s_plus_25.k8s.MetricTargetV2Beta2, typing.Dict[str, typing.Any]]",
      "optional": false
    },
    "ancestors": null
  },
  {
    "api_groups": {
      "type": "typing.Sequence[str]",
      "optional": false
    },
    "resources": {
      "type": "typing.Sequence[str]",
      "optional": false
    },
    "verbs": {
      "type": "typing.Sequence[str]",
      "optional": false
    },
    "cluster_scope": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "namespaces": {
      "type": "typing.Optional[typing.Sequence[str]]",
      "optional": true
    },
    "ancestors": null,
    "name": "ResourcePolicyRuleV1Beta1"
  },
  {
    "api_groups": {
      "type": "typing.Sequence[str]",
      "optional": false
    },
    "resources": {
      "type": "typing.Sequence[str]",
      "optional": false
    },
    "verbs": {
      "type": "typing.Sequence[str]",
      "optional": false
    },
    "cluster_scope": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "namespaces": {
      "type": "typing.Optional[typing.Sequence[str]]",
      "optional": true
    },
    "ancestors": null,
    "name": "ResourcePolicyRuleV1Beta2"
  },
  {
    "hard": {
      "type": "typing.Optional[typing.Mapping[str, cdk8s_plus_25.k8s.Quantity]]",
      "optional": true
    },
    "scopes": {
      "type": "typing.Optional[typing.Sequence[str]]",
      "optional": true
    },
    "scope_selector": {
      "type": "typing.Union[ForwardRef('ScopeSelector'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "ResourceQuotaSpec"
  },
  {
    "limits": {
      "type": "typing.Optional[typing.Mapping[str, cdk8s_plus_25.k8s.Quantity]]",
      "optional": true
    },
    "requests": {
      "type": "typing.Optional[typing.Mapping[str, cdk8s_plus_25.k8s.Quantity]]",
      "optional": true
    },
    "ancestors": null,
    "name": "ResourceRequirements"
  },
  {
    "api_group": {
      "type": "<class 'str'>",
      "optional": false
    },
    "kind": {
      "type": "<class 'str'>",
      "optional": false
    },
    "name": "RoleRef",
    "ancestors": null
  },
  {
    "max_surge": {
      "type": "typing.Optional[cdk8s_plus_25.k8s.IntOrString]",
      "optional": true
    },
    "max_unavailable": {
      "type": "typing.Optional[cdk8s_plus_25.k8s.IntOrString]",
      "optional": true
    },
    "ancestors": null,
    "name": "RollingUpdateDaemonSet"
  },
  {
    "max_surge": {
      "type": "typing.Optional[cdk8s_plus_25.k8s.IntOrString]",
      "optional": true
    },
    "max_unavailable": {
      "type": "typing.Optional[cdk8s_plus_25.k8s.IntOrString]",
      "optional": true
    },
    "ancestors": null,
    "name": "RollingUpdateDeployment"
  },
  {
    "max_unavailable": {
      "type": "typing.Optional[cdk8s_plus_25.k8s.IntOrString]",
      "optional": true
    },
    "partition": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "RollingUpdateStatefulSetStrategy"
  },
  {
    "api_groups": {
      "type": "typing.Optional[typing.Sequence[str]]",
      "optional": true
    },
    "api_versions": {
      "type": "typing.Optional[typing.Sequence[str]]",
      "optional": true
    },
    "operations": {
      "type": "typing.Optional[typing.Sequence[str]]",
      "optional": true
    },
    "resources": {
      "type": "typing.Optional[typing.Sequence[str]]",
      "optional": true
    },
    "scope": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null,
    "name": "RuleWithOperations"
  },
  {
    "gateway": {
      "type": "<class 'str'>",
      "optional": false
    },
    "secret_ref": {
      "type": "typing.Union[ForwardRef('SecretReference'), typing.Dict[str, typing.Any]]",
      "optional": false
    },
    "system": {
      "type": "<class 'str'>",
      "optional": false
    },
    "fs_type": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "protection_domain": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "read_only": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "ssl_enabled": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "storage_mode": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "storage_pool": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "volume_name": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null,
    "name": "ScaleIoPersistentVolumeSource"
  },
  {
    "gateway": {
      "type": "<class 'str'>",
      "optional": false
    },
    "secret_ref": {
      "type": "typing.Union[cdk8s_plus_25.k8s.LocalObjectReference, typing.Dict[str, typing.Any]]",
      "optional": false
    },
    "system": {
      "type": "<class 'str'>",
      "optional": false
    },
    "fs_type": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "protection_domain": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "read_only": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "ssl_enabled": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "storage_mode": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "storage_pool": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "volume_name": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null,
    "name": "ScaleIoVolumeSource"
  },
  {
    "replicas": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "ScaleSpec"
  },
  {
    "node_selector": {
      "type": "typing.Optional[typing.Mapping[str, str]]",
      "optional": true
    },
    "tolerations": {
      "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('Toleration'), typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "ancestors": null,
    "name": "Scheduling"
  },
  {
    "match_expressions": {
      "type": "typing.Optional[typing.Sequence[typing.Union[ForwardRef('ScopedResourceSelectorRequirement'), typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "ancestors": null,
    "name": "ScopeSelector"
  },
  {
    "operator": {
      "type": "<class 'str'>",
      "optional": false
    },
    "scope_name": {
      "type": "<class 'str'>",
      "optional": false
    },
    "values": {
      "type": "typing.Optional[typing.Sequence[str]]",
      "optional": true
    },
    "ancestors": null,
    "name": "ScopedResourceSelectorRequirement"
  },
  {
    "level": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "role": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "type": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "user": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null,
    "name": "SeLinuxOptions"
  },
  {
    "type": {
      "type": "<class 'str'>",
      "optional": false
    },
    "localhost_profile": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null,
    "name": "SeccompProfile"
  },
  {
    "name": "SecretEnvSource",
    "optional": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "ancestors": null
  },
  {
    "key": {
      "type": "<class 'str'>",
      "optional": false
    },
    "name": "SecretKeySelector",
    "optional": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "ancestors": null
  },
  {
    "items": {
      "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.k8s.KeyToPath, typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "name": "SecretProjection",
    "optional": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "ancestors": null
  },
  {
    "name": "SecretReference",
    "namespace": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null
  },
  {
    "default_mode": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "items": {
      "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.k8s.KeyToPath, typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "optional": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "secret_name": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null,
    "name": "SecretVolumeSource"
  },
  {
    "allow_privilege_escalation": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "capabilities": {
      "type": "typing.Union[cdk8s_plus_25.k8s.Capabilities, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "privileged": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "proc_mount": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "read_only_root_filesystem": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "run_as_group": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "run_as_non_root": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "run_as_user": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "seccomp_profile": {
      "type": "typing.Union[cdk8s_plus_25.k8s.SeccompProfile, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "se_linux_options": {
      "type": "typing.Union[cdk8s_plus_25.k8s.SeLinuxOptions, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "windows_options": {
      "type": "typing.Union[ForwardRef('WindowsSecurityContextOptions'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "SecurityContext"
  },
  {
    "non_resource_attributes": {
      "type": "typing.Union[cdk8s_plus_25.k8s.NonResourceAttributes, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "resource_attributes": {
      "type": "typing.Union[cdk8s_plus_25.k8s.ResourceAttributes, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "SelfSubjectAccessReviewSpec"
  },
  {
    "namespace": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null,
    "name": "SelfSubjectRulesReviewSpec"
  },
  {
    "name": "ServiceAccountSubjectV1Beta1",
    "namespace": {
      "type": "<class 'str'>",
      "optional": false
    },
    "ancestors": null
  },
  {
    "name": "ServiceAccountSubjectV1Beta2",
    "namespace": {
      "type": "<class 'str'>",
      "optional": false
    },
    "ancestors": null
  },
  {
    "path": {
      "type": "<class 'str'>",
      "optional": false
    },
    "audience": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "expiration_seconds": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "ServiceAccountTokenProjection"
  },
  {
    "name": "ServiceBackendPort",
    "number": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "ancestors": null
  },
  {
    "port": {
      "type": "typing.Union[int, float]",
      "optional": false
    },
    "app_protocol": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "name": "ServicePort",
    "node_port": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "protocol": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "target_port": {
      "type": "typing.Optional[cdk8s_plus_25.k8s.IntOrString]",
      "optional": true
    },
    "ancestors": null
  },
  {
    "name": "ServiceReference",
    "namespace": {
      "type": "<class 'str'>",
      "optional": false
    },
    "path": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "port": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "ancestors": null
  },
  {
    "allocate_load_balancer_node_ports": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "cluster_ip": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "cluster_i_ps": {
      "type": "typing.Optional[typing.Sequence[str]]",
      "optional": true
    },
    "external_i_ps": {
      "type": "typing.Optional[typing.Sequence[str]]",
      "optional": true
    },
    "external_name": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "external_traffic_policy": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "health_check_node_port": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "internal_traffic_policy": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ip_families": {
      "type": "typing.Optional[typing.Sequence[str]]",
      "optional": true
    },
    "ip_family_policy": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "load_balancer_class": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "load_balancer_ip": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "load_balancer_source_ranges": {
      "type": "typing.Optional[typing.Sequence[str]]",
      "optional": true
    },
    "ports": {
      "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.k8s.ServicePort, typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "publish_not_ready_addresses": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "selector": {
      "type": "typing.Optional[typing.Mapping[str, str]]",
      "optional": true
    },
    "session_affinity": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "session_affinity_config": {
      "type": "typing.Union[ForwardRef('SessionAffinityConfig'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "type": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null,
    "name": "ServiceSpec"
  },
  {
    "client_ip": {
      "type": "typing.Union[cdk8s_plus_25.k8s.ClientIpConfig, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "SessionAffinityConfig"
  },
  {
    "when_deleted": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "when_scaled": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null,
    "name": "StatefulSetPersistentVolumeClaimRetentionPolicy"
  },
  {
    "selector": {
      "type": "typing.Union[cdk8s_plus_25.k8s.LabelSelector, typing.Dict[str, typing.Any]]",
      "optional": false
    },
    "service_name": {
      "type": "<class 'str'>",
      "optional": false
    },
    "template": {
      "type": "typing.Union[cdk8s_plus_25.k8s.PodTemplateSpec, typing.Dict[str, typing.Any]]",
      "optional": false
    },
    "min_ready_seconds": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "persistent_volume_claim_retention_policy": {
      "type": "typing.Union[cdk8s_plus_25.k8s.StatefulSetPersistentVolumeClaimRetentionPolicy, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "pod_management_policy": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "replicas": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "revision_history_limit": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "update_strategy": {
      "type": "typing.Union[ForwardRef('StatefulSetUpdateStrategy'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "volume_claim_templates": {
      "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.k8s.KubePersistentVolumeClaimProps, typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "ancestors": null,
    "name": "StatefulSetSpec"
  },
  {
    "rolling_update": {
      "type": "typing.Union[cdk8s_plus_25.k8s.RollingUpdateStatefulSetStrategy, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "type": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null,
    "name": "StatefulSetUpdateStrategy"
  },
  {
    "field": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "message": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "reason": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null,
    "name": "StatusCause"
  },
  {
    "causes": {
      "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.k8s.StatusCause, typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "group": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "kind": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "name": "StatusDetails",
    "retry_after_seconds": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "uid": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null
  },
  {
    "fs_type": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "read_only": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "secret_ref": {
      "type": "typing.Union[cdk8s_plus_25.k8s.ObjectReference, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "volume_name": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "volume_namespace": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null,
    "name": "StorageOsPersistentVolumeSource"
  },
  {
    "fs_type": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "read_only": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "secret_ref": {
      "type": "typing.Union[cdk8s_plus_25.k8s.LocalObjectReference, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "volume_name": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "volume_namespace": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null,
    "name": "StorageOsVolumeSource"
  },
  {
    "kind": {
      "type": "<class 'str'>",
      "optional": false
    },
    "name": "Subject",
    "api_group": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "namespace": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null
  },
  {
    "extra": {
      "type": "typing.Optional[typing.Mapping[str, typing.Sequence[str]]]",
      "optional": true
    },
    "groups": {
      "type": "typing.Optional[typing.Sequence[str]]",
      "optional": true
    },
    "non_resource_attributes": {
      "type": "typing.Union[cdk8s_plus_25.k8s.NonResourceAttributes, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "resource_attributes": {
      "type": "typing.Union[cdk8s_plus_25.k8s.ResourceAttributes, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "uid": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "user": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null,
    "name": "SubjectAccessReviewSpec"
  },
  {
    "kind": {
      "type": "<class 'str'>",
      "optional": false
    },
    "group": {
      "type": "typing.Union[cdk8s_plus_25.k8s.GroupSubjectV1Beta1, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "service_account": {
      "type": "typing.Union[cdk8s_plus_25.k8s.ServiceAccountSubjectV1Beta1, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "user": {
      "type": "typing.Union[ForwardRef('UserSubjectV1Beta1'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "SubjectV1Beta1"
  },
  {
    "kind": {
      "type": "<class 'str'>",
      "optional": false
    },
    "group": {
      "type": "typing.Union[cdk8s_plus_25.k8s.GroupSubjectV1Beta2, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "service_account": {
      "type": "typing.Union[cdk8s_plus_25.k8s.ServiceAccountSubjectV1Beta2, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "user": {
      "type": "typing.Union[ForwardRef('UserSubjectV1Beta2'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "SubjectV1Beta2"
  },
  {
    "name": "Sysctl",
    "value": {
      "type": "<class 'str'>",
      "optional": false
    },
    "ancestors": null
  },
  {
    "effect": {
      "type": "<class 'str'>",
      "optional": false
    },
    "key": {
      "type": "<class 'str'>",
      "optional": false
    },
    "time_added": {
      "type": "typing.Optional[datetime.datetime]",
      "optional": true
    },
    "value": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null,
    "name": "Taint"
  },
  {
    "port": {
      "type": "<class 'cdk8s_plus_25.k8s.IntOrString'>",
      "optional": false
    },
    "host": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null,
    "name": "TcpSocketAction"
  },
  {
    "audience": {
      "type": "<class 'str'>",
      "optional": false
    },
    "expiration_seconds": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "TokenRequest"
  },
  {
    "audiences": {
      "type": "typing.Sequence[str]",
      "optional": false
    },
    "bound_object_ref": {
      "type": "typing.Union[cdk8s_plus_25.k8s.BoundObjectReference, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "expiration_seconds": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "TokenRequestSpec"
  },
  {
    "audiences": {
      "type": "typing.Optional[typing.Sequence[str]]",
      "optional": true
    },
    "token": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null,
    "name": "TokenReviewSpec"
  },
  {
    "effect": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "key": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "operator": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "toleration_seconds": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "value": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null,
    "name": "Toleration"
  },
  {
    "key": {
      "type": "<class 'str'>",
      "optional": false
    },
    "values": {
      "type": "typing.Sequence[str]",
      "optional": false
    },
    "ancestors": null,
    "name": "TopologySelectorLabelRequirement"
  },
  {
    "match_label_expressions": {
      "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.k8s.TopologySelectorLabelRequirement, typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "ancestors": null,
    "name": "TopologySelectorTerm"
  },
  {
    "max_skew": {
      "type": "typing.Union[int, float]",
      "optional": false
    },
    "topology_key": {
      "type": "<class 'str'>",
      "optional": false
    },
    "when_unsatisfiable": {
      "type": "<class 'str'>",
      "optional": false
    },
    "label_selector": {
      "type": "typing.Union[cdk8s_plus_25.k8s.LabelSelector, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "match_label_keys": {
      "type": "typing.Optional[typing.Sequence[str]]",
      "optional": true
    },
    "min_domains": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "node_affinity_policy": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "node_taints_policy": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null,
    "name": "TopologySpreadConstraint"
  },
  {
    "kind": {
      "type": "<class 'str'>",
      "optional": false
    },
    "name": "TypedLocalObjectReference",
    "api_group": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null
  },
  {
    "name": "UserSubjectV1Beta1",
    "ancestors": null
  },
  {
    "name": "UserSubjectV1Beta2",
    "ancestors": null
  },
  {
    "admission_review_versions": {
      "type": "typing.Sequence[str]",
      "optional": false
    },
    "client_config": {
      "type": "typing.Union[ForwardRef('WebhookClientConfig'), typing.Dict[str, typing.Any]]",
      "optional": false
    },
    "name": "ValidatingWebhook",
    "side_effects": {
      "type": "<class 'str'>",
      "optional": false
    },
    "failure_policy": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "match_policy": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "namespace_selector": {
      "type": "typing.Union[cdk8s_plus_25.k8s.LabelSelector, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "object_selector": {
      "type": "typing.Union[cdk8s_plus_25.k8s.LabelSelector, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "rules": {
      "type": "typing.Optional[typing.Sequence[typing.Union[cdk8s_plus_25.k8s.RuleWithOperations, typing.Dict[str, typing.Any]]]]",
      "optional": true
    },
    "timeout_seconds": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "ancestors": null
  },
  {
    "rule": {
      "type": "<class 'str'>",
      "optional": false
    },
    "message": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null,
    "name": "ValidationRule"
  },
  {
    "name": "Volume",
    "aws_elastic_block_store": {
      "type": "typing.Union[cdk8s_plus_25.k8s.AwsElasticBlockStoreVolumeSource, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "azure_disk": {
      "type": "typing.Union[cdk8s_plus_25.k8s.AzureDiskVolumeSource, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "azure_file": {
      "type": "typing.Union[cdk8s_plus_25.k8s.AzureFileVolumeSource, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "cephfs": {
      "type": "typing.Union[cdk8s_plus_25.k8s.CephFsVolumeSource, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "cinder": {
      "type": "typing.Union[cdk8s_plus_25.k8s.CinderVolumeSource, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "config_map": {
      "type": "typing.Union[cdk8s_plus_25.k8s.ConfigMapVolumeSource, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "csi": {
      "type": "typing.Union[cdk8s_plus_25.k8s.CsiVolumeSource, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "downward_api": {
      "type": "typing.Union[cdk8s_plus_25.k8s.DownwardApiVolumeSource, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "empty_dir": {
      "type": "typing.Union[cdk8s_plus_25.k8s.EmptyDirVolumeSource, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ephemeral": {
      "type": "typing.Union[cdk8s_plus_25.k8s.EphemeralVolumeSource, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "fc": {
      "type": "typing.Union[cdk8s_plus_25.k8s.FcVolumeSource, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "flex_volume": {
      "type": "typing.Union[cdk8s_plus_25.k8s.FlexVolumeSource, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "flocker": {
      "type": "typing.Union[cdk8s_plus_25.k8s.FlockerVolumeSource, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "gce_persistent_disk": {
      "type": "typing.Union[cdk8s_plus_25.k8s.GcePersistentDiskVolumeSource, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "git_repo": {
      "type": "typing.Union[cdk8s_plus_25.k8s.GitRepoVolumeSource, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "glusterfs": {
      "type": "typing.Union[cdk8s_plus_25.k8s.GlusterfsVolumeSource, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "host_path": {
      "type": "typing.Union[cdk8s_plus_25.k8s.HostPathVolumeSource, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "iscsi": {
      "type": "typing.Union[cdk8s_plus_25.k8s.IscsiVolumeSource, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "nfs": {
      "type": "typing.Union[cdk8s_plus_25.k8s.NfsVolumeSource, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "persistent_volume_claim": {
      "type": "typing.Union[cdk8s_plus_25.k8s.PersistentVolumeClaimVolumeSource, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "photon_persistent_disk": {
      "type": "typing.Union[cdk8s_plus_25.k8s.PhotonPersistentDiskVolumeSource, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "portworx_volume": {
      "type": "typing.Union[cdk8s_plus_25.k8s.PortworxVolumeSource, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "projected": {
      "type": "typing.Union[cdk8s_plus_25.k8s.ProjectedVolumeSource, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "quobyte": {
      "type": "typing.Union[cdk8s_plus_25.k8s.QuobyteVolumeSource, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "rbd": {
      "type": "typing.Union[cdk8s_plus_25.k8s.RbdVolumeSource, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "scale_io": {
      "type": "typing.Union[cdk8s_plus_25.k8s.ScaleIoVolumeSource, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "secret": {
      "type": "typing.Union[cdk8s_plus_25.k8s.SecretVolumeSource, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "storageos": {
      "type": "typing.Union[cdk8s_plus_25.k8s.StorageOsVolumeSource, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "vsphere_volume": {
      "type": "typing.Union[ForwardRef('VsphereVirtualDiskVolumeSource'), typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null
  },
  {
    "inline_volume_spec": {
      "type": "typing.Union[cdk8s_plus_25.k8s.PersistentVolumeSpec, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "persistent_volume_name": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null,
    "name": "VolumeAttachmentSource"
  },
  {
    "attacher": {
      "type": "<class 'str'>",
      "optional": false
    },
    "node_name": {
      "type": "<class 'str'>",
      "optional": false
    },
    "source": {
      "type": "typing.Union[cdk8s_plus_25.k8s.VolumeAttachmentSource, typing.Dict[str, typing.Any]]",
      "optional": false
    },
    "ancestors": null,
    "name": "VolumeAttachmentSpec"
  },
  {
    "device_path": {
      "type": "<class 'str'>",
      "optional": false
    },
    "name": "VolumeDevice",
    "ancestors": null
  },
  {
    "mount_path": {
      "type": "<class 'str'>",
      "optional": false
    },
    "name": "VolumeMount",
    "mount_propagation": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "read_only": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "sub_path": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "sub_path_expr": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null
  },
  {
    "required": {
      "type": "typing.Union[cdk8s_plus_25.k8s.NodeSelector, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "VolumeNodeAffinity"
  },
  {
    "count": {
      "type": "typing.Union[int, float, NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "VolumeNodeResources"
  },
  {
    "config_map": {
      "type": "typing.Union[cdk8s_plus_25.k8s.ConfigMapProjection, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "downward_api": {
      "type": "typing.Union[cdk8s_plus_25.k8s.DownwardApiProjection, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "secret": {
      "type": "typing.Union[cdk8s_plus_25.k8s.SecretProjection, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "service_account_token": {
      "type": "typing.Union[cdk8s_plus_25.k8s.ServiceAccountTokenProjection, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "VolumeProjection"
  },
  {
    "volume_path": {
      "type": "<class 'str'>",
      "optional": false
    },
    "fs_type": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "storage_policy_id": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "storage_policy_name": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null,
    "name": "VsphereVirtualDiskVolumeSource"
  },
  {
    "ca_bundle": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "service": {
      "type": "typing.Union[cdk8s_plus_25.k8s.ServiceReference, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "url": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null,
    "name": "WebhookClientConfig"
  },
  {
    "conversion_review_versions": {
      "type": "typing.Sequence[str]",
      "optional": false
    },
    "client_config": {
      "type": "typing.Union[cdk8s_plus_25.k8s.WebhookClientConfig, typing.Dict[str, typing.Any], NoneType]",
      "optional": true
    },
    "ancestors": null,
    "name": "WebhookConversion"
  },
  {
    "pod_affinity_term": {
      "type": "typing.Union[cdk8s_plus_25.k8s.PodAffinityTerm, typing.Dict[str, typing.Any]]",
      "optional": false
    },
    "weight": {
      "type": "typing.Union[int, float]",
      "optional": false
    },
    "ancestors": null,
    "name": "WeightedPodAffinityTerm"
  },
  {
    "gmsa_credential_spec": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "gmsa_credential_spec_name": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "host_process": {
      "type": "typing.Optional[bool]",
      "optional": true
    },
    "run_as_user_name": {
      "type": "typing.Optional[str]",
      "optional": true
    },
    "ancestors": null,
    "name": "WindowsSecurityContextOptions"
  }
]
